{"version":3,"sources":["src/app/component/payment/payment.component.html","src/app/component/payment/payment-routing.module.ts","src/app/component/payment/payment.component.scss","src/app/component/payment/payment.component.ts","src/app/component/payment/payment.module.ts"],"names":[],"mappings":";;0RAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAe,4BAAA,mBAAA,CAAA,SAAA,CAAA,CAAA,ujRAAA,C;;qgCCIf,GAAM,CAAA,MAAM,CAAW,CACrB,CAAC,IAAI,CAAC,EAAN,CAAS,SAAS,CAAC,+CAAA,CAAA,kBAAA,CAAnB,CADqB,CAAvB,CAQA,GAAa,CAAA,oBAAb,kCAAA,CAAa,oBAAoB,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJhC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS,CACR,OAAO,CAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD,CAER,OAAO,CAAE,CAAC,4CAAA,CAAA,cAAA,CAAD,CAFD,CAAT,CAIgC,CAAA,CAApB,oBAAoB,CAApB,C;;sNCZb,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAe,4BAAA,mBAAA,CAAA,SAAA,CAAA,CAAA,6MAAA,C;;g3CCiBf,GAAa,CAAA,gBAAb,yBASE,0BAAoB,MAApB,CAA0C,mBAA1C,CAA2F,cAA3F,CAAyH,gBAArG,KAAA,MAAA,CAAA,MAAA,CAAsB,KAAA,mBAAA,CAAA,mBAAA,CAAiD,KAAA,cAAA,CAAA,cAAA,CAL3F,KAAA,GAAA,CAAW,EAAX,CAEA,KAAA,MAAA,CAAa,EAAb,CACA,KAAA,UAAA,CAAuC,EAAvC,CAGE,KAAK,QAAL,CAAgB,CACd,CAAC,KAAK,CAAC,EAAP,CAAU,IAAI,CAAE,YAAhB,CAA6B,OAAO,CAAE,iBAAC,KAAD,CAAU,CAC9C,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,YAAD,CAArB,CAAqC,CADvC,CADc,CAId,CAAC,KAAK,CAAC,QAAP,CAAgB,OAAO,CAAE,iBAAC,KAAD,CAAU,CACjC,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,YAAD,CAArB,CACH,CAFC,CAJc,CAOd,CAAC,KAAK,CAAC,SAAP,CAPc,CAAhB,CASA,KAAK,MAAL,CAAc,CACZ,CAAC,KAAK,CAAC,MAAP,CAAe,KAAK,CAAC,CAArB,CADY,CAEZ,CAAC,KAAK,CAAC,SAAP,CAAkB,KAAK,CAAC,CAAxB,CAFY,CAAd,CAKA,KAAK,UAAL,EAED,CA1BH,6CA4BE,QA5BF,CA4BE,mBAAQ,CAAK,CA5Bf,QA8BE,UA9BF,CA8BE,qBAAU,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAvCH,QA2CE,eA3CF,CA2CE,0BAAe,CACb;AACA,KAAK,GAAL,CAAW,EAAX,CACA,KAAK,aAAL,CAAqB,IACtB,CA/CH,QAiDE,IAjDF,CAiDE,cAAK,GAAL,CAAQ,CACN,OAAO,CAAC,GAAR,CAAY,GAAZ,EACE,KAAK,WAAL,CAAiB,GAAjB,CAEH,CArDH,QAuDE,MAvDF,CAuDE,iBAAO,GAAP,CAAW,KAAX,CAAgB,iBACd,OAAO,CAAC,GAAR,CAAY,QAAZ,CAAqB,GAArB,CAAyB,KAAzB,EACA,KAAK,mBAAL,CAAyB,OAAzB,CAAiC,CAC/B,OAAO,CAAE,oDADsB,CAE/B,MAAM,CAAE,iBAAK,CACT;AACA,MAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,KAArB,CACH,CAL8B,CAAjC,CAOD,CAhEH,QAkEE,SAlEF,CAkEE,mBAAU,GAAV,CAAsB,CACpB,OAAO,CAAC,GAAR,CAAY,GAAZ,EACA,KAAK,aAAL,CAAqB,IAArB,CACC,KAAK,GAAL,CAAW,CACT,EAAE,CAAC,GAAG,CAAC,EADE,CAEd;AACA;AACA;AACA,QAAQ,CAAG,GAAG,CAAC,QALD,CAMd,WAAW,CAAG,GAAG,CAAC,WANJ,CAOd,YAAY,CAAG,GAAG,CAAC,YAPL,CAQd,MAAM,CAAE,GAAG,CAAC,MARE,CAUb,CA/EH,QAiFE,WAjFF,CAiFE,qBAAY,GAAZ,CAAgB,KAAhB,CAAqB,CACnB,OAAO,CAAC,GAAR,CAAY,GAAZ,CAAgB,KAAhB,EACA,KAAK,WAAL,CAAiB,MAAjB,CAAwB,KAAxB,CAA+B,CAA/B,EACA,KAAK,WAAL,WAAuB,KAAK,WAA5B,EACA,KAAK,cAAL,CAAoB,GAApB,CAAwB,CAAC,QAAQ,CAAC,SAAV,CAAqB,OAAO,CAAC,8BAA7B,CAA6D,MAAM,CAAC,8BAApE,CAAxB,CAED,CAvFH,QAyFE,WAzFF,CAyFE,qBAAY,IAAZ,CAAgB,CACd,OAAO,CAAC,GAAR,CAAY,IAAZ,EACA,KAAK,aAAL,CAAqB,KAArB,CACA,GAAI,CAAA,UAAU,CAAG,mCAAA,CAAA,WAAA,CAAA,CAAY,KAAK,WAAjB,CAA8B,SAAU,CAAV,CAAW,CAAI,MAAO,CAAA,CAAC,CAAC,EAAF,EAAQ,IAAI,CAAC,EAAK,CAAtE,CAAjB,CACA,OAAO,CAAC,GAAR,CAAY,UAAZ,EACA,GAAI,UAAU,CAAG,CAAC,CAAlB,CAAqB,CACnB;AACA,KAAK,WAAL,CAAiB,MAAjB,CAAwB,UAAxB,CAAoC,CAApC,CAAuC,IAAvC,CACD,CACD,KAAK,WAAL,WAAuB,KAAK,WAA5B,EACA,KAAK,cAAL,CAAoB,GAApB,CAAwB,CAAC,QAAQ,CAAC,SAAV,CAAqB,OAAO,CAAC,8BAA7B,CAA6D,MAAM,CAAC,8BAApE,CAAxB,CAED,CArGH,QAuGE,cAvGF,CAuGE,wBAAe,KAAf,CAAoB,CAClB,OAAO,CAAC,GAAR,CAAY,KAAZ,EACA,GAAI,CAAA,SAAS,CAAG,KAAK,CAAC,OACvB,CA1GH,2BAAA,C,wDAS6B,4CAAA,CAAA,QAAA,C,QAAoC,wCAAA,CAAA,qBAAA,C,QAA4C,wCAAA,CAAA,gBAAA,C,IAThG,gBAAgB,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAN5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,CACT,QAAQ,CAAE,aADD,CAET,QAAA,CAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA,CAAA,0CAAA,0FAAA,CAAA,EAAA,OAFS,CAIT,SAAS,CAAE,CAAC,wCAAA,CAAA,qBAAA,CAAD,CAJF,C,gLAAA,CAAV,CAM4B,C,sEASA,4CAAA,CAAA,QAAA,C,CAAoC,wCAAA,CAAA,qBAAA,C,CAA4C,wCAAA,CAAA,gBAAA,C,EAThF,CAAA,CAAhB,gBAAgB,CAAhB,C;;+yKCwBb,GAAa,CAAA,aAAb,2BAAA,CAAa,aAAa,CAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CArBzB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS,CACR,YAAY,CAAE,CAAC,+CAAA,CAAA,kBAAA,CAAD,CADN,CAER,OAAO,CAAE,CACP,4CAAA,CAAA,cAAA,CADO,CAEP,oDAAA,CAAA,sBAAA,CAFO,CAGP,yCAAA,CAAA,YAAA,CAHO,CAIP,2CAAA,CAAA,aAAA,CAJO,CAKP,8CAAA,CAAA,iBAAA,CALO,CAMP,0CAAA,CAAA,aAAA,CANO,CAOP,2CAAA,CAAA,cAAA,CAPO,CAQP,4CAAA,CAAA,cAAA,CARO,CASP,8CAAA,CAAA,gBAAA,CATO,CAUP,8CAAA,CAAA,gBAAA,CAVO,CAWP,gDAAA,CAAA,kBAAA,CAXO,CAYP,mDAAA,CAAA,qBAAA,CAZO,CAaP,2CAAA,CAAA,aAAA,CAbO,CAcP,mDAAA,CAAA,qBAAA,CAdO,CAeP,+CAAA,CAAA,iBAAA,CAfO,CAgBP,iDAAA,CAAA,mBAAA,CAhBO,CAFD,CAAT,CAqByB,CAAA,CAAb,aAAa,CAAb,C","sourcesContent":["export default \"\\n        <p-breadcrumb [model]=\\\"bradCrum\\\"></p-breadcrumb>\\n        <div style=\\\"margin-top: 15px;\\\">\\n  <p-card>\\n<p-table  #dt  [value]=\\\"paymentList\\\" [paginator]=\\\"true\\\"  [rowsPerPageOptions]=\\\"[10,50,100]\\\"   [resizableColumns]=\\\"true\\\"  selectionMode=\\\"single\\\" [(selection)]=\\\"selectedCars\\\"  [rows]=\\\"10\\\"  dataKey=\\\"id\\\">\\n \\n    <ng-template pTemplate=\\\"caption\\\">\\n        <div class=\\\"ui-helper-clearfix\\\" >\\n\\n            <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-file-o\\\" iconPos=\\\"left\\\" label=\\\"All Data\\\" (click)=\\\"dt.exportCSV()\\\" style=\\\"float:left\\\"></button> -->\\n            <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-file\\\" iconPos=\\\"left\\\" label=\\\"Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\" style=\\\"float:right\\\"></button> -->\\n        </div>\\n        <div style=\\\"text-align: right\\\">        \\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i> \\n            <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\"   style=\\\"width:auto\\\">\\n        </div>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"header\\\" >\\n        <tr>\\n                <th  [pSortableColumn]=\\\"'id'\\\" pResizableColumn>\\n                        # Invoice ID\\n                    <p-sortIcon [field]=\\\"id\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n                    </th>\\n           \\n            <th  [pSortableColumn]=\\\"'customer_name'\\\" pResizableColumn>\\n              Customer Name\\n            <p-sortIcon [field]=\\\"customer_name\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n        </th>\\n           \\n            <th  [pSortableColumn]=\\\"'sub_amount'\\\" pResizableColumn>\\n                Sub Amount\\n             <p-sortIcon [field]=\\\"sub_amount\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n         </th>\\n         <th  [pSortableColumn]=\\\"'discount'\\\" pResizableColumn>\\n            Discount\\n         <p-sortIcon [field]=\\\"discount\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n     </th>\\n     <th  [pSortableColumn]=\\\"'grand_total'\\\" pResizableColumn>\\n        Grand Total\\n     <p-sortIcon [field]=\\\"grand_total\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n </th>\\n            <th [pSortableColumn]=\\\"'payment_type'\\\" pResizableColumn>\\n                Payment Type\\n                 <p-sortIcon [field]=\\\"payment_type\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n             </th>\\n             <th [pSortableColumn]=\\\"'created_at'\\\" pResizableColumn>\\n                Payment Date\\n                 <p-sortIcon [field]=\\\"created_at\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n             </th>\\n             <th [pSortableColumn]=\\\"'status'\\\" pResizableColumn>\\n                Status\\n                 <p-sortIcon [field]=\\\"status\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n             </th>\\n            <th>\\n\\n            </th>\\n        </tr>\\n       \\n       \\n    </ng-template>\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-ri=\\\"rowIndex\\\">\\n          <tr [pEditableRow]=\\\"rowData\\\">\\n              <td>\\n                    {{rowData.id}}\\n              </td>\\n            <td>              \\n                    {{rowData.customer_name}}\\n            </td>\\n            <td>              \\n                {{rowData.sub_amount  | currency : 'INR':true}}\\n            </td>\\n            <td>\\n                    {{rowData.discount  | currency : 'INR':true}}\\n            </td>\\n            <td>\\n                {{rowData.grand_total  | currency : 'INR':true}}\\n        </td>\\n        <td>\\n            <ng-container *ngIf=\\\"rowData.payment_type == 1; then thenTemplate; else elseTemplate\\\"></ng-container>\\n            <ng-template #thenTemplate>\\n                Cash\\n            </ng-template>\\n            <ng-template #elseTemplate>\\n                Card\\n            </ng-template>\\n            \\n        </td>\\n        <td>\\n        {{rowData.created_at | date:'medium'}}\\n        </td>\\n            <td>\\n                <p-inputSwitch [(ngModel)]=\\\"rowData.payment_status\\\" (onChange)=\\\"onChangeStatus($event)\\\"></p-inputSwitch> \\n            </td>\\n            <td style=\\\"text-align:center\\\">\\n                <button  pButton type=\\\"button\\\" pInitEditableRow icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info\\\" (click)=\\\"onRowEdit(rowData)\\\" style=\\\"    margin: 0px 5px;\\\"></button>\\n                <!-- <button  pButton type=\\\"button\\\" pSaveEditableRow icon=\\\"pi pi-check\\\" class=\\\"ui-button-success\\\" style=\\\"margin-right: .5em\\\" (click)=\\\"onRowEditSave(rowData)\\\"></button> -->\\n                <button  pButton type=\\\"button\\\" pCancelEditableRow icon=\\\"pi pi-trash\\\" class=\\\"ui-button-danger\\\" (click)=\\\"delete(rowData, ri)\\\" style=\\\"    margin: 0px 5px;\\\"></button>\\n            </td>\\n        </tr>\\n    </ng-template>\\n\\n   \\n\\n</p-table>\\n\\n<p-dialog  header=\\\"Payment Details\\\" [(visible)]=\\\"displayDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [resizable]=\\\"false\\\" [modal]=\\\"true\\\"  [style]=\\\"{width: '450px'}\\\">\\n\\n    <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"car\\\">\\n            <div class=\\\"ui-g-12\\\">\\n                    <div class=\\\"ui-g-4\\\">\\n                        <label for=\\\"vin\\\">Invoice Id</label>\\n                    </div>\\n                    <div class=\\\"ui-g-8\\\">\\n                        <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"car.id\\\" />\\n                    </div>\\n                </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"vin\\\">Customer Name</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"car.customer_name\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"vin\\\">Sub Amount</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                    <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"car.sub_amount\\\" />\\n                            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"year\\\">Discount</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <input type=\\\"text\\\" pKeyFilter=\\\"int\\\" pInputText [(ngModel)]=\\\"car.discount\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"year\\\">Grand Total</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <input type=\\\"text\\\" pKeyFilter=\\\"int\\\" pInputText [(ngModel)]=\\\"car.grand_total\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"year\\\">Payment Type</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <input type=\\\"text\\\" pKeyFilter=\\\"int\\\" pInputText [(ngModel)]=\\\"car.payment_type\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"brand\\\">Status</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <p-dropdown [options]=\\\"status\\\" placeholder=\\\"Select Status\\\" [(ngModel)]=\\\"car.status\\\"></p-dropdown>\\n\\n            </div>\\n        </div>\\n    </div>\\n    <p-footer>\\n        <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n            <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"delete(car)\\\" label=\\\"Delete\\\"></button> -->\\n            <button type=\\\"button\\\" pButton  icon=\\\"pi pi-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"save(car)\\\" label=\\\"Save\\\"></button>\\n        </div>\\n    </p-footer>\\n</p-dialog>\\n\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n\\n</p-card>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaymentComponent } from './payment.component';\n\nconst routes: Routes = [\n  {path:'',component:PaymentComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PaymentRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9wYXltZW50L3BheW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Payment } from \"src/app/model/payment.model\";\nimport {MenuItem} from 'primeng/api';\nimport {ConfirmationService} from 'primeng/api';\nimport {MessageService} from 'primeng/api';\nimport { Router } from '@angular/router';\n\nimport * as _ from 'lodash';\nimport { Invoice } from 'src/app/model/invoice.model';\n\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss'],\n  providers: [ConfirmationService]\n})\nexport class PaymentComponent implements OnInit {\n \n  private bradCrum: MenuItem[];\n  displayDialog: boolean;\n  car: any = {};\n  cols: any[];\n  status:any = [];\n  clonedCars: { [s: string]: Payment } = {};\n  paymentList:Invoice[];\n  constructor(private router:Router,private confirmationService: ConfirmationService,private messageService: MessageService) {\n    this.bradCrum = [\n      {label:'',icon: 'pi pi-home',command: (event) => {\n        this.router.navigate(['/dashboard'])}\n      },\n      {label:'Master',command: (event) => {\n        this.router.navigate(['/dashboard']);\n    }},\n      {label:'Payment'},\n  ];\n    this.status = [\n      {label:'Paid', value:1},\n      {label:'Pending', value:2},\n    ]\n   \n    this.getInvoice();\n    \n  }\n\n  ngOnInit() {}\n\n  getInvoice(){\n    // this.invoiceService.getInvoice()\n    // .subscribe((data:any)=>{\n    //   console.log('getInvoice',data);\n    //     this.paymentList = data;     \n    // },\n    // error =>{\n    //   console.log('getInvoice',error);\n    // })\n  }\n\n\n\n  showDialogToAdd() {\n    // this.newCar = true;\n    this.car = {};\n    this.displayDialog = true;\n  }\n\n  save(car) {\n    console.log(car);\n      this.onRowUpdate(car);\n    \n  }\n\n  delete(car,index){\n    console.log('delete',car,index);\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete this Payment?',\n      accept: () => {\n          //Actual logic to perform a confirmation\n          this.onRowDelete(car,index);\n      }\n  });\n  }\n  \n  onRowEdit(car: Invoice) {\n    console.log(car);\n    this.displayDialog = true;\n     this.car = {\n       id:car.id,\n  //      customer_id: car.customer_id,\n  // customer_name:  car.customer_name,\n  // sub_amount:  car.sub_amount,\n  discount:  car.discount,\n  grand_total:  car.grand_total,\n  payment_type:  car.payment_type,\n  status: car.status,\n     }\n  }\n\n  onRowDelete(car,index) {\n    console.log(car,index);\n    this.paymentList.splice(index, 1);\n    this.paymentList = [...this.paymentList];\n    this.messageService.add({severity:'success', summary:'Payment Deleted Successfully', detail:'Payment Deleted Successfully'});\n\n  }\n\n  onRowUpdate(user) {\n    console.log(user);\n    this.displayDialog = false;\n    var sliceIndex = _.findIndex(this.paymentList, function (o) { return o.id == user.id; });\n    console.log(sliceIndex);\n    if (sliceIndex > -1) {\n      // Replace item at index using native splice\n      this.paymentList.splice(sliceIndex, 1, user);\n    }\n    this.paymentList = [...this.paymentList];\n    this.messageService.add({severity:'success', summary:'Payment Updated Successfully', detail:'Payment Updated Successfully'});\n\n  }\n\n  onChangeStatus(event){\n    console.log(event);\n    let isChecked = event.checked;\n  }\n\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PaymentRoutingModule } from './payment-routing.module';\nimport { PaymentComponent } from './payment.component';\nimport {TableModule} from 'primeng/table';\nimport {ButtonModule} from 'primeng/button';\nimport {InputTextModule} from 'primeng/inputtext';\nimport { FormsModule } from '@angular/forms';\nimport { CardModule } from 'primeng/card';\nimport {DialogModule} from 'primeng/dialog';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {PasswordModule} from 'primeng/password';\nimport {BreadcrumbModule} from 'primeng/breadcrumb';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport {ToastModule} from 'primeng/toast';\nimport {InputSwitchModule} from 'primeng/inputswitch';\nimport {KeyFilterModule} from 'primeng/keyfilter';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\n\n@NgModule({\n  declarations: [PaymentComponent],\n  imports: [\n    CommonModule,\n    PaymentRoutingModule,\n    CardModule,\n    FormsModule,\n    InputTextModule,\n    TableModule,\n    ButtonModule,\n    DialogModule,\n    DropdownModule,\n    PasswordModule,\n    BreadcrumbModule,\n    ConfirmDialogModule,\n    ToastModule,\n    InputTextareaModule,\n    KeyFilterModule,\n    InputSwitchModule\n  ]\n})\nexport class PaymentModule { }\n"],"sourceRoot":"webpack:///"}