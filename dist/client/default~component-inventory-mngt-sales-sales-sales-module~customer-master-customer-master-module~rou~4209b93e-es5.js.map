{"version":3,"sources":["src/app/component/inventory-mngt/shared/route-form/route-form.component.html","src/app/component/inventory-mngt/shared/route-form/route-form.component.scss","src/app/component/inventory-mngt/shared/route-form/route-form.component.ts","src/app/component/inventory-mngt/shared/route-form/route-form.module.ts","src/app/shared/route.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"\\n\\n    <p-dialog  [maximizable]=\\\"true\\\" [(visible)]=\\\"displayDialog2\\\" (onHide)=\\\"onClose()\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [resizable]=\\\"false\\\" [modal]=\\\"true\\\"  [style]=\\\"{width: '400px'}\\\">\\n        <p-header>\\n                <span *ngIf=\\\"routeForm.value._id\\\">Update</span>\\n                <span *ngIf=\\\"!routeForm.value._id\\\">Add</span> Route\\n        </p-header>\\n        \\n    <form [formGroup]=\\\"routeForm\\\">\\n            <div class=\\\"ui-g ui-fluid\\\" >\\n                \\n    <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"vin\\\">Route Code</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <input type=\\\"text\\\" pInputText formControlName=\\\"route_code\\\"  disabled />\\n            </div>\\n        </div>\\n                <div class=\\\"ui-g-12\\\">\\n                    <div class=\\\"ui-g-4\\\">\\n                        <label for=\\\"vin\\\">Route Name</label>\\n                    </div>\\n                    <div class=\\\"ui-g-8\\\">\\n                        <input pInputText id=\\\"vin\\\" formControlName=\\\"route_name\\\" autofocus />\\n                    </div>\\n                </div>\\n                <div class=\\\"ui-g-12\\\">\\n                    <div class=\\\"ui-g-4\\\">\\n                        <label for=\\\"brand\\\">Status</label>\\n                    </div>\\n                    <div class=\\\"ui-g-8\\\">\\n                        <p-dropdown [options]=\\\"status\\\" placeholder=\\\"Select Status\\\" formControlName=\\\"status\\\"></p-dropdown>\\n        \\n                    </div>\\n                </div>\\n            </div>\\n            <p-footer>\\n                <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n                    <button type=\\\"button\\\" pButton  icon=\\\"pi pi-save\\\" class=\\\"ui-button-success\\\" *ngIf=\\\"!routeForm.value._id\\\" (click)=\\\"addRoute()\\\" label=\\\"Add\\\"></button>\\n                    <button type=\\\"button\\\" pButton  icon=\\\"pi pi-save\\\" class=\\\"ui-button-success\\\" *ngIf=\\\"routeForm.value._id\\\" (click)=\\\"updateRoute()\\\" label=\\\"Update\\\"></button>\\n                </div>\\n            </p-footer>\\n        </form> \\n        </p-dialog>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9pbnZlbnRvcnktbW5ndC9zaGFyZWQvcm91dGUtZm9ybS9yb3V0ZS1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","\n  import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\n  import { FormGroup, FormBuilder, Validators } from '@angular/forms';\n  import { CommonService } from 'src/app/shared/common.service';\n  import { SessionService } from 'src/app/shared/session.service';\n  import { MessageService } from 'primeng/api';\n  import * as _ from 'lodash';\nimport { RouteService } from 'src/app/shared/route.service';\n  \n\n@Component({\n  selector: 'app-route-form',\n  templateUrl: './route-form.component.html',\n  styleUrls: ['./route-form.component.scss']\n})\nexport class RouteFormComponent implements OnInit {\n   \n    @Input() routeData: any;\n    @Input() displayDialog2: boolean\n    \n    @Output() displayChangeEvent2 = new EventEmitter();\n    @Output() routeEvent = new EventEmitter();\n  \n    routeForm:FormGroup\n    status:any\n  \n    constructor(private _fb: FormBuilder, private routeService:RouteService,private commonService: CommonService,\n      public sessionService: SessionService, private messageService: MessageService\n      ) {\n   \n        this.status = [\n          {label:'Active', value:1},\n          {label:'De-Active', value:0},\n        ]\n  \n        this.routeForm = this._fb.group({\n          _id: [''],\n          company_details_id: ['',Validators.required],\n          route_code: ['',Validators.required],\n          route_name: ['',Validators.required],\n          status: [1,Validators.required]\n        })\n    }\n  \n    ngOnInit() {\n    }\n  \n    \n    ngOnChanges() {\n      console.log('displayDialog2',this.displayDialog2);   \n      console.log('isObjectcatData',_.isPlainObject(this.routeData))\n      if(_.isPlainObject(this.routeData)){      \n        console.log('catData',this.routeData);   \n        this.routeForm.controls['_id'].setValue(this.routeData._id);\n        this.routeForm.controls['route_code'].setValue(this.routeData.route_code);\n        this.routeForm.controls['route_name'].setValue(this.routeData.route_name);\n        this.routeForm.controls['company_details_id'].setValue(this.sessionService.getItem('company_id'))  \n        this.routeForm.controls['status'].setValue(this.routeData.status);    \n        }else{           \n        this.getRouteByCompany()\n        }\n  \n    }\n  \n    getRouteByCompany(){\n      this.routeService.getRouteByCompany()\n      .subscribe((data:any)=>{\n        console.log('routeList',data);  \n          this.routeForm.reset();\n          this.routeForm.controls['route_code'].setValue(this.commonService.incrCode('r',data.length));\n          this.routeForm.controls['status'].setValue(1);\n          this.routeForm.controls['company_details_id'].setValue(this.sessionService.getItem('company_id'))       \n      })\n    }\n  \n    public checkValidity(): void {\n      Object.keys(this.routeForm.controls).forEach((key) => {\n          this.routeForm.controls[key].markAsDirty();\n      });\n    }\n  \n  \n    addRoute(){\n      console.log('routeForm',this.routeForm);\n      if(this.routeForm.invalid){      \n        this.checkValidity()\n        return\n      }\n  \n        this.routeService.addRoute(this.routeForm.value)\n        .subscribe((data:any)=>{\n          console.log('add route',data);\n          // let newData = {\n          //   label : data.unit_name +' | ' +data.unit_code,\n          //   value : data._id\n          //  }\n           this.routeEvent.emit(data)\n          // this.unitList = [newData,...this.unitList];\n          // this.categoryList.push(data);\n          // console.log('this.unitList',this.unitList);\n          this.messageService.add({severity:'success', summary:'New Route Added Successfully', detail:'New Route Added Successfully'});\n          // this.stockForm.controls['unit_details_id'].setValue(data._id) \n          this.displayDialog2 = false;\n        },\n        error =>{\n          console.log(error);\n          this.messageService.add({severity:'error', summary:'Oopss!', detail:'Something went wrong!'});\n          this.displayDialog2 = false;\n    \n        })\n    }\n  \n    updateRoute(){\n      console.log('roureForm',this.routeForm);\n      if(this.routeForm.invalid){      \n        this.checkValidity()\n        return\n      }\n  \n        this.routeService.updateRoute(this.routeForm.value)\n        .subscribe((data:any)=>{\n          console.log('add route',data);\n          // let newData = {\n          //   label : data.unit_name +' | ' +data.unit_code,\n          //   value : data._id\n          //  }\n           this.routeEvent.emit(data)\n          // this.unitList = [newData,...this.unitList];\n          // this.categoryList.push(data);\n          // console.log('this.unitList',this.unitList);\n          this.messageService.add({severity:'success', summary:'Route Updated Successfully', detail:'Route Updated Successfully'});\n          // this.stockForm.controls['unit_details_id'].setValue(data._id) \n          this.displayDialog2 = false;\n        },\n        error =>{\n          console.log(error);\n          this.messageService.add({severity:'error', summary:'Oopss!', detail:'Something went wrong!'});\n          this.displayDialog2 = false;\n    \n        })\n    }\n    \n    onClose(){\n      // this.displayDialog = false;\n      this.displayChangeEvent2.emit(false)\n    }\n  \n      // Work against memory leak if component is destroyed\n      ngOnDestroy() {\n        this.displayChangeEvent2.unsubscribe();\n      }\n  \n  \n  }\n  \n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouteFormComponent } from './route-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\n\n\n\n@NgModule({\n  declarations: [RouteFormComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    DropdownModule,\n    InputTextModule,\n    ButtonModule,\n    DialogModule,\n    // GooglePlaceModule\n  ],\n  exports:[RouteFormComponent]\n})\nexport class RouteFormModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { SessionService } from './session.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteService {\n\n  constructor(private httpClient:HttpClient, private sessionService: SessionService) { }\n\n  getRoute(){\n    return this.httpClient.get(environment.api_url + '/api/route');\n  }\n  \n  getRouteByCompany(){\n    return this.httpClient.get(environment.api_url + '/api/route/get-by-company/'+this.sessionService.getItem('company_id'));\n  }\n\n  addRoute(data){\n    var body = JSON.stringify(data);\n    console.log('body',body);\n    var headerOption = new HttpHeaders({'Content-Type':'application/json'});\n    return this.httpClient.post(environment.api_url + '/api/route',body,{headers:headerOption});\n  }\n\n  updateRoute(data){\n    var body = JSON.stringify(data);\n    console.log('body',body);\n    var headerOption = new HttpHeaders({'Content-Type':'application/json'});\n    return this.httpClient.put(environment.api_url + '/api/route/'+ data._id ,body,{headers:headerOption});\n  }\n\n  deleteRoute(id){\n    return this.httpClient.delete(environment.api_url + '/api/route/'+ id);\n  }\n\n  updateStatus(status,id){\n    var body = JSON.stringify(status);\n    console.log('body',body);\n    var headerOption = new HttpHeaders({'Content-Type':'application/json'});\n    return this.httpClient.put(environment.api_url + '/api/route/status-update/'+ id ,body,{headers:headerOption});\n  }\n}\n\n"],"sourceRoot":"webpack:///","file":"default~component-inventory-mngt-sales-sales-sales-module~customer-master-customer-master-module~rou~4209b93e-es5.js"}