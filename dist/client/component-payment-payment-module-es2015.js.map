{"version":3,"sources":["./src/app/component/payment/payment.component.html","./src/app/component/payment/payment-routing.module.ts","./src/app/component/payment/payment.component.scss","./src/app/component/payment/payment.component.ts","./src/app/component/payment/payment.module.ts"],"names":[],"mappings":"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","file":"component-payment-payment-module-es2015.js","sourcesContent":["export default \"\\n        <p-breadcrumb [model]=\\\"bradCrum\\\"></p-breadcrumb>\\n        <div style=\\\"margin-top: 15px;\\\">\\n  <p-card>\\n<p-table  #dt  [value]=\\\"paymentList\\\" [paginator]=\\\"true\\\"  [rowsPerPageOptions]=\\\"[10,50,100]\\\"   [resizableColumns]=\\\"true\\\"  selectionMode=\\\"single\\\" [(selection)]=\\\"selectedCars\\\"  [rows]=\\\"10\\\"  dataKey=\\\"id\\\">\\n \\n    <ng-template pTemplate=\\\"caption\\\">\\n        <div class=\\\"ui-helper-clearfix\\\" >\\n\\n            <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-file-o\\\" iconPos=\\\"left\\\" label=\\\"All Data\\\" (click)=\\\"dt.exportCSV()\\\" style=\\\"float:left\\\"></button> -->\\n            <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-file\\\" iconPos=\\\"left\\\" label=\\\"Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\" style=\\\"float:right\\\"></button> -->\\n        </div>\\n        <div style=\\\"text-align: right\\\">        \\n            <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i> \\n            <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\"   style=\\\"width:auto\\\">\\n        </div>\\n    </ng-template>\\n    <ng-template pTemplate=\\\"header\\\" >\\n        <tr>\\n                <th  [pSortableColumn]=\\\"'id'\\\" pResizableColumn>\\n                        # Invoice ID\\n                    <p-sortIcon [field]=\\\"id\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n                    </th>\\n           \\n            <th  [pSortableColumn]=\\\"'customer_name'\\\" pResizableColumn>\\n              Customer Name\\n            <p-sortIcon [field]=\\\"customer_name\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n        </th>\\n           \\n            <th  [pSortableColumn]=\\\"'sub_amount'\\\" pResizableColumn>\\n                Sub Amount\\n             <p-sortIcon [field]=\\\"sub_amount\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n         </th>\\n         <th  [pSortableColumn]=\\\"'discount'\\\" pResizableColumn>\\n            Discount\\n         <p-sortIcon [field]=\\\"discount\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n     </th>\\n     <th  [pSortableColumn]=\\\"'grand_total'\\\" pResizableColumn>\\n        Grand Total\\n     <p-sortIcon [field]=\\\"grand_total\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n </th>\\n            <th [pSortableColumn]=\\\"'payment_type'\\\" pResizableColumn>\\n                Payment Type\\n                 <p-sortIcon [field]=\\\"payment_type\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n             </th>\\n             <th [pSortableColumn]=\\\"'created_at'\\\" pResizableColumn>\\n                Payment Date\\n                 <p-sortIcon [field]=\\\"created_at\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n             </th>\\n             <th [pSortableColumn]=\\\"'status'\\\" pResizableColumn>\\n                Status\\n                 <p-sortIcon [field]=\\\"status\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n             </th>\\n            <th>\\n\\n            </th>\\n        </tr>\\n       \\n       \\n    </ng-template>\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-ri=\\\"rowIndex\\\">\\n          <tr [pEditableRow]=\\\"rowData\\\">\\n              <td>\\n                    {{rowData.id}}\\n              </td>\\n            <td>              \\n                    {{rowData.customer_name}}\\n            </td>\\n            <td>              \\n                {{rowData.sub_amount  | currency : 'INR':true}}\\n            </td>\\n            <td>\\n                    {{rowData.discount  | currency : 'INR':true}}\\n            </td>\\n            <td>\\n                {{rowData.grand_total  | currency : 'INR':true}}\\n        </td>\\n        <td>\\n            <ng-container *ngIf=\\\"rowData.payment_type == 1; then thenTemplate; else elseTemplate\\\"></ng-container>\\n            <ng-template #thenTemplate>\\n                Cash\\n            </ng-template>\\n            <ng-template #elseTemplate>\\n                Card\\n            </ng-template>\\n            \\n        </td>\\n        <td>\\n        {{rowData.created_at | date:'medium'}}\\n        </td>\\n            <td>\\n                <p-inputSwitch [(ngModel)]=\\\"rowData.payment_status\\\" (onChange)=\\\"onChangeStatus($event)\\\"></p-inputSwitch> \\n            </td>\\n            <td style=\\\"text-align:center\\\">\\n                <button  pButton type=\\\"button\\\" pInitEditableRow icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info\\\" (click)=\\\"onRowEdit(rowData)\\\" style=\\\"    margin: 0px 5px;\\\"></button>\\n                <!-- <button  pButton type=\\\"button\\\" pSaveEditableRow icon=\\\"pi pi-check\\\" class=\\\"ui-button-success\\\" style=\\\"margin-right: .5em\\\" (click)=\\\"onRowEditSave(rowData)\\\"></button> -->\\n                <button  pButton type=\\\"button\\\" pCancelEditableRow icon=\\\"pi pi-trash\\\" class=\\\"ui-button-danger\\\" (click)=\\\"delete(rowData, ri)\\\" style=\\\"    margin: 0px 5px;\\\"></button>\\n            </td>\\n        </tr>\\n    </ng-template>\\n\\n   \\n\\n</p-table>\\n\\n<p-dialog  header=\\\"Payment Details\\\" [(visible)]=\\\"displayDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [resizable]=\\\"false\\\" [modal]=\\\"true\\\"  [style]=\\\"{width: '450px'}\\\">\\n\\n    <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"car\\\">\\n            <div class=\\\"ui-g-12\\\">\\n                    <div class=\\\"ui-g-4\\\">\\n                        <label for=\\\"vin\\\">Invoice Id</label>\\n                    </div>\\n                    <div class=\\\"ui-g-8\\\">\\n                        <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"car.id\\\" />\\n                    </div>\\n                </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"vin\\\">Customer Name</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"car.customer_name\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"vin\\\">Sub Amount</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                    <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"car.sub_amount\\\" />\\n                            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"year\\\">Discount</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <input type=\\\"text\\\" pKeyFilter=\\\"int\\\" pInputText [(ngModel)]=\\\"car.discount\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"year\\\">Grand Total</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <input type=\\\"text\\\" pKeyFilter=\\\"int\\\" pInputText [(ngModel)]=\\\"car.grand_total\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"year\\\">Payment Type</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <input type=\\\"text\\\" pKeyFilter=\\\"int\\\" pInputText [(ngModel)]=\\\"car.payment_type\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"brand\\\">Status</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n                <p-dropdown [options]=\\\"status\\\" placeholder=\\\"Select Status\\\" [(ngModel)]=\\\"car.status\\\"></p-dropdown>\\n\\n            </div>\\n        </div>\\n    </div>\\n    <p-footer>\\n        <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n            <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"delete(car)\\\" label=\\\"Delete\\\"></button> -->\\n            <button type=\\\"button\\\" pButton  icon=\\\"pi pi-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"save(car)\\\" label=\\\"Save\\\"></button>\\n        </div>\\n    </p-footer>\\n</p-dialog>\\n\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n\\n</p-card>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaymentComponent } from './payment.component';\n\nconst routes: Routes = [\n  {path:'',component:PaymentComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PaymentRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9wYXltZW50L3BheW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Payment } from \"src/app/model/payment.model\";\nimport {MenuItem} from 'primeng/api';\nimport {ConfirmationService} from 'primeng/api';\nimport {MessageService} from 'primeng/api';\nimport { Router } from '@angular/router';\n\nimport * as _ from 'lodash';\nimport { Invoice } from 'src/app/model/invoice.model';\n\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss'],\n  providers: [ConfirmationService]\n})\nexport class PaymentComponent implements OnInit {\n \n  private bradCrum: MenuItem[];\n  displayDialog: boolean;\n  car: any = {};\n  cols: any[];\n  status:any = [];\n  clonedCars: { [s: string]: Payment } = {};\n  paymentList:Invoice[];\n  constructor(private router:Router,private confirmationService: ConfirmationService,private messageService: MessageService) {\n    this.bradCrum = [\n      {label:'',icon: 'pi pi-home',command: (event) => {\n        this.router.navigate(['/dashboard'])}\n      },\n      {label:'Master',command: (event) => {\n        this.router.navigate(['/dashboard']);\n    }},\n      {label:'Payment'},\n  ];\n    this.status = [\n      {label:'Paid', value:1},\n      {label:'Pending', value:2},\n    ]\n   \n    this.getInvoice();\n    \n  }\n\n  ngOnInit() {}\n\n  getInvoice(){\n    // this.invoiceService.getInvoice()\n    // .subscribe((data:any)=>{\n    //   console.log('getInvoice',data);\n    //     this.paymentList = data;     \n    // },\n    // error =>{\n    //   console.log('getInvoice',error);\n    // })\n  }\n\n\n\n  showDialogToAdd() {\n    // this.newCar = true;\n    this.car = {};\n    this.displayDialog = true;\n  }\n\n  save(car) {\n    console.log(car);\n      this.onRowUpdate(car);\n    \n  }\n\n  delete(car,index){\n    console.log('delete',car,index);\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete this Payment?',\n      accept: () => {\n          //Actual logic to perform a confirmation\n          this.onRowDelete(car,index);\n      }\n  });\n  }\n  \n  onRowEdit(car: Invoice) {\n    console.log(car);\n    this.displayDialog = true;\n     this.car = {\n       id:car.id,\n  //      customer_id: car.customer_id,\n  // customer_name:  car.customer_name,\n  // sub_amount:  car.sub_amount,\n  discount:  car.discount,\n  grand_total:  car.grand_total,\n  payment_type:  car.payment_type,\n  status: car.status,\n     }\n  }\n\n  onRowDelete(car,index) {\n    console.log(car,index);\n    this.paymentList.splice(index, 1);\n    this.paymentList = [...this.paymentList];\n    this.messageService.add({severity:'success', summary:'Payment Deleted Successfully', detail:'Payment Deleted Successfully'});\n\n  }\n\n  onRowUpdate(user) {\n    console.log(user);\n    this.displayDialog = false;\n    var sliceIndex = _.findIndex(this.paymentList, function (o) { return o.id == user.id; });\n    console.log(sliceIndex);\n    if (sliceIndex > -1) {\n      // Replace item at index using native splice\n      this.paymentList.splice(sliceIndex, 1, user);\n    }\n    this.paymentList = [...this.paymentList];\n    this.messageService.add({severity:'success', summary:'Payment Updated Successfully', detail:'Payment Updated Successfully'});\n\n  }\n\n  onChangeStatus(event){\n    console.log(event);\n    let isChecked = event.checked;\n  }\n\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PaymentRoutingModule } from './payment-routing.module';\nimport { PaymentComponent } from './payment.component';\nimport {TableModule} from 'primeng/table';\nimport {ButtonModule} from 'primeng/button';\nimport {InputTextModule} from 'primeng/inputtext';\nimport { FormsModule } from '@angular/forms';\nimport { CardModule } from 'primeng/card';\nimport {DialogModule} from 'primeng/dialog';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {PasswordModule} from 'primeng/password';\nimport {BreadcrumbModule} from 'primeng/breadcrumb';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport {ToastModule} from 'primeng/toast';\nimport {InputSwitchModule} from 'primeng/inputswitch';\nimport {KeyFilterModule} from 'primeng/keyfilter';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\n\n@NgModule({\n  declarations: [PaymentComponent],\n  imports: [\n    CommonModule,\n    PaymentRoutingModule,\n    CardModule,\n    FormsModule,\n    InputTextModule,\n    TableModule,\n    ButtonModule,\n    DialogModule,\n    DropdownModule,\n    PasswordModule,\n    BreadcrumbModule,\n    ConfirmDialogModule,\n    ToastModule,\n    InputTextareaModule,\n    KeyFilterModule,\n    InputSwitchModule\n  ]\n})\nexport class PaymentModule { }\n"],"sourceRoot":"webpack:///"}