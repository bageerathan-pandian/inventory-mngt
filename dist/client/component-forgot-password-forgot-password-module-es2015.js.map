{"version":3,"sources":["./src/app/component/forgot-password/forgot-password.component.html","./src/app/component/forgot-password/forgot-password-routing.module.ts","./src/app/component/forgot-password/forgot-password.component.scss","./src/app/component/forgot-password/forgot-password.component.ts","./src/app/component/forgot-password/forgot-password.module.ts"],"names":[],"mappings":"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","file":"component-forgot-password-forgot-password-module-es2015.js","sourcesContent":["export default \"<!-- <app-header></app-header> -->\\r\\n<ngx-spinner  bdOpacity = 0.1  bdColor = \\\"rgba(255,255,255,0.9)\\\"  size = \\\"default\\\"  color = \\\"#060606\\\"  type = \\\"ball-clip-rotate\\\"  [fullScreen] = \\\"false\\\"  >\\r\\n    <p style=\\\"color: #000\\\" > Sending email... </p>\\r\\n</ngx-spinner>\\r\\n<div  class=\\\"ui-g-12\\\" style=\\\"padding: 5% 0;background: url(./assets/img/home-bg3.png) no-repeat center center;\\r\\nbackground-size: cover;height: 100%;\\\">\\r\\n  \\r\\n      <div class=\\\"ui-g-12 ui-md-4 ui-md-offset-4\\\">\\r\\n    \\r\\n    <p-messages class=\\\"ui-g-12\\\" styleClass=\\\"loagin-wrapper\\\" ></p-messages>\\r\\n    <!-- <div class=\\\"ui-g-12\\\"  style=\\\"text-align: center;position: relative;height: 100px;\\\">\\r\\n    <a routerLink=\\\"\\\">\\r\\n      <img src=\\\"Card\\\" src=\\\"./assets/img/comp_logo.png\\\" style=\\\"    max-height: 100%;  max-width: 100%;   left: 0;   right: 0;    top: 0;     bottom: 0;   margin: auto;\\\">\\r\\n    </a>\\r\\n</div> -->\\r\\n    \\r\\n        <p-card  class=\\\"login-form ui-g-12 ui-md-12\\\" *ngIf=\\\"!successRegister\\\">\\r\\n          <form [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"forgotPassword()\\\" style=\\\"text-align: center\\\">\\r\\n         \\r\\n          <div class=\\\"ui-g ui-fluid\\\">\\r\\n              <div class=\\\"ui-g-12 ui-md-12\\\">\\r\\n                  <h2>Forgot Your Password?</h2>\\r\\n                  <span>Please enter your Email to reset your password</span>\\r\\n              </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-12\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <span class=\\\"ui-inputgroup-addon\\\"><i class=\\\"pi pi-envelope\\\"></i></span>\\r\\n                        <input type=\\\"text\\\" pInputText placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required style=\\\"    width: 100%;\\\">              \\r\\n                   </div>\\r\\n                   <p  class=\\\"error-msg\\\" *ngIf=\\\"!forgotForm.controls['email'].valid && (forgotForm.controls['email'].dirty || forgotForm.controls['email'].touched)\\\">\\r\\n                      <em *ngIf=\\\"forgotForm.controls['email'].errors['required']\\\"> Recovery Email is required    </em>\\r\\n                      <em *ngIf=\\\"forgotForm.controls['email'].errors['pattern']\\\">  Invalid Email    </em>\\r\\n                   </p>\\r\\n               \\r\\n                </div>\\r\\n           \\r\\n        \\r\\n              \\r\\n            <div class=\\\"ui-g-12 ui-md-12\\\">\\r\\n              <button pButton type=\\\"submit\\\" label=\\\"Send Reset Password Link\\\"  class=\\\"ui-button-raised \\\" style=\\\"margin-right: .25em;    width: 100%;\\\" ></button>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n                <div style=\\\"text-align: center\\\">\\r\\n              <a  rel=\\\"noopener noreferrer\\\"  routerLink=\\\"/login\\\"  >Login?</a>\\r\\n                </div>\\r\\n        </form>\\r\\n      </p-card>\\r\\n      <p-card  class=\\\"login-form ui-g-12 ui-md-12\\\"  *ngIf=\\\"successRegister\\\" >\\r\\n        <div style=\\\"text-align: center\\\">\\r\\n            <i class=\\\"pi pi-check\\\" style=\\\"    color: #fff;   background: #08bd65;     border-radius: 100%;margin: 10px;font-size: 50px\\\"></i>\\r\\n        <h3>Password Reset Mail Sent</h3> \\r\\n        <p>An email has been sent to your rescue email address, <b>{{this.forgotForm.value.email}}</b> . Follow the direction in the email to reset your password. </p>\\r\\n          </div>\\r\\n      </p-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n  <!-- <div  class=\\\"ui-g-12 \\\">\\r\\n      <app-footer></app-footer>\\r\\n</div> -->\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:ForgotPasswordComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ForgotPasswordRoutingModule { }\r\n","export default \".login-form {\\n  margin-top: 20%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2ZvcmdvdC1wYXNzd29yZC9GOlxcYmFnZWVcXGludmVudG9yeS1tbmd0XFxjbGllbnQvc3JjXFxhcHBcXGNvbXBvbmVudFxcZm9yZ290LXBhc3N3b3JkXFxmb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudC9mb3Jnb3QtcGFzc3dvcmQvZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBV0ksZUFBQTtBQ1RKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50L2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybSB7XHJcbiAgLy8gICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAvLyB3aWR0aDogNDAwcHg7XHJcbiAgICAvLyBtYXgtaGVpZ2h0OiA0NDBweDtcclxuICAgIC8vIGhlaWdodDogYXV0bztcclxuICAgIC8vIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8vIHRvcDogMDtcclxuICAgIC8vIGJvdHRvbTogMDtcclxuICAgIC8vIGxlZnQ6IDA7XHJcbiAgICAvLyByaWdodDogMDtcclxuICAgIC8vIG1hcmdpbjogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDIwJTtcclxuICB9XHJcbiAgLy8gLmxvYWdpbi13cmFwcGVye1xyXG4gIC8vICAgbWFyZ2luLXRvcDogMTAlO1xyXG4gIC8vIH1cclxuICBcclxuICAiLCIubG9naW4tZm9ybSB7XG4gIG1hcmdpbi10b3A6IDIwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthLoginService } from 'src/app/shared/auth.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { SessionService } from 'src/app/shared/session.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  forgotForm: FormGroup;\r\n  successRegister: boolean = false;\r\n\r\n  constructor(private auth: AuthLoginService, private _fb: FormBuilder,private messageService: MessageService, private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    public sessionService: SessionService\r\n    ) {\r\n    if(this.sessionService.getItem('inventryLogedIn')){\r\n      this.router.navigate([\"/dashboard\"]);\r\n    }\r\n    this.forgotForm = this._fb.group({\r\n      // userName: [\"\", Validators.compose([Validators.required, Validators.minLength(6)])],\r\n      email:  ['',[Validators.required,Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')]],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n   public checkValidity(): void {\r\n    Object.keys(this.forgotForm.controls).forEach((key) => {\r\n      this.forgotForm.controls[key].markAsDirty();\r\n    });\r\n  }\r\n\r\n  \r\n forgotPassword() {\r\n    console.log(this.forgotForm.value);\r\n    if(this.forgotForm.invalid){\r\n      this.checkValidity()\r\n      return false\r\n    }\r\n    this.spinner.show()\r\n    this.auth.forgotPassword(this.forgotForm.value)\r\n    .subscribe((data:any)=>{\r\n      console.log(data);   \r\n      this.spinner.hide()\r\n      this.messageService.clear();  \r\n      if(data == 2){ \r\n        this.messageService.add({severity:'warn', summary:this.forgotForm.value.email, detail:' No user found with that email address.!'});\r\n        this.forgotForm.controls['email'].setErrors({ 'emailExist': true })\r\n        this.forgotForm.controls['email'].markAsDirty();     \r\n        // this. resetPassword()\r\n      }else if(data == 1){\r\n        this.successRegister = true;\r\n        this.forgotForm.controls['email'].setErrors({ 'emailExist': null })\r\n        this.forgotForm.controls['email'].updateValueAndValidity();\r\n      }else{\r\n        this.messageService.add({severity:'warn', summary:'Warning!', detail:'Please try again!'});\r\n        this.successRegister = false;\r\n        this.spinner.hide()\r\n      } \r\n    },\r\n    error =>{   \r\n      console.log('er',error);\r\n      this.messageService.add({severity:'error', summary:'Opps!', detail:'Sothing went wrong!'});\r\n      this.successRegister = false;\r\n      this.spinner.hide()\r\n    })\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ForgotPasswordRoutingModule } from './forgot-password-routing.module';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CardModule } from 'primeng/card';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { HeaderModule } from '../header/header.module';\r\nimport { FooterModule } from '../footer/footer.module';\r\n\r\n@NgModule({\r\n  declarations: [ForgotPasswordComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    CardModule,\r\n    MessageModule,\r\n    MessagesModule,\r\n    ButtonModule,\r\n    ForgotPasswordRoutingModule,\r\n    NgxSpinnerModule,\r\n    HeaderModule,\r\n    FooterModule\r\n  ]\r\n})\r\nexport class ForgotPasswordModule { }\r\n"],"sourceRoot":"webpack:///"}