{"version":3,"sources":["src/app/component/inventory-mngt/reports/purchase-report/purchase-report.component.html","src/app/component/inventory-mngt/reports/purchase-report/purchase-report-routing.module.ts","src/app/component/inventory-mngt/reports/purchase-report/purchase-report.component.scss","src/app/component/inventory-mngt/reports/purchase-report/purchase-report.component.ts","src/app/component/inventory-mngt/reports/purchase-report/purchase-report.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"\\r\\n\\r\\n<p-breadcrumb [model]=\\\"bradCrum\\\"></p-breadcrumb>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div style=\\\"margin-top: 15px;\\\">\\r\\n\\r\\n<p-card>\\r\\n  \\r\\n \\r\\n\\r\\n<p-table  #dt  [value]=\\\"invoiceList\\\"  [loading]=\\\"loading\\\"  [columns]=\\\"cols\\\" dataKey=\\\"_id\\\" [paginator]=\\\"true\\\"  [rowsPerPageOptions]=\\\"[10,50,100]\\\"  [globalFilterFields]=\\\"['_id','invoice_purchase_details_id.invoice_code']\\\"  [rows]=\\\"10\\\" >\\r\\n\\r\\n<ng-template pTemplate=\\\"caption\\\">\\r\\n  \\r\\n  <div class=\\\"ui-helper-clearfix\\\" style=\\\"text-align: left;width: 50%; float: left; margin-bottom: 10px;\\\">\\r\\n    <div style=\\\"width: 68%;padding: 0 1%; float: left;\\\">\\r\\n      <!-- <div id=\\\"reportrange\\\" style=\\\"background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc;\\\">\\r\\n        <i class=\\\"fa fa-calendar\\\"></i>&nbsp;\\r\\n        <span></span> <i class=\\\"fa fa-caret-down\\\"></i>\\r\\n      </div> -->\\r\\n      <input type=\\\"text\\\" pInputText [(ngModel)]=\\\"selectedDate\\\" \\r\\n      ngxDaterangepickerMd\\r\\n      [showCustomRangeLabel]=\\\"true\\\"\\r\\n      [alwaysShowCalendars]=\\\"true\\\"\\r\\n      [ranges]=\\\"ranges\\\"\\r\\n      [linkedCalendars]=\\\"true\\\" \\r\\n      [showCancel]=\\\"true\\\"\\r\\n       placeholder=\\\"Select please...\\\"\\r\\n        readonly\\r\\n        [locale]=\\\"{format: 'DD/MM/YYYY'}\\\"\\r\\n         (ngModelChange)=\\\"change($event)\\\" />\\r\\n    </div>\\r\\n    <div style=\\\"width: 28%;padding: 0 1%; float: left;\\\">\\r\\n             <!-- <button type=\\\"button\\\" pButton icon=\\\"pi pi-file-o\\\" iconPos=\\\"left\\\" label=\\\"CSV\\\" (click)=\\\"dt.exportCSV()\\\" style=\\\"margin-right: 0.5em;\\\"></button> -->\\r\\n             <button type=\\\"button\\\" pButton icon=\\\"pi pi-file-excel\\\" iconPos=\\\"left\\\" label=\\\"EXCEL\\\" (click)=\\\"exportExcel()\\\" style=\\\"margin-right: 0.5em;\\\" class=\\\"ui-button-success\\\"></button>\\r\\n             <!-- <button type=\\\"button\\\" pButton icon=\\\"pi pi-file-pdf\\\" iconPos=\\\"left\\\" label=\\\"PDF\\\" (click)=\\\"exportPdf()\\\" class=\\\"ui-button-warning\\\"  style=\\\"margin-right: 0.5em;\\\" ></button> -->\\r\\n             <!-- <button type=\\\"button\\\" pButton icon=\\\"pi pi-file\\\" iconPos=\\\"left\\\" label=\\\"CSV - Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\"  style=\\\"margin-right: 0.5em;\\\"  ></button> -->\\r\\n        \\r\\n    </div>\\r\\n    \\r\\n\\r\\n    </div>\\r\\n<div style=\\\"text-align: right\\\">        \\r\\n  <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i> \\r\\n  <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\"   style=\\\"width:auto\\\">\\r\\n</div>\\r\\n</ng-template>\\r\\n<ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n<tr>\\r\\n      <th style=\\\"width: 3em\\\">\\r\\n              <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\r\\n          </th>\\r\\n      <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\" pResizableColumn >\\r\\n              {{col.header}}\\r\\n              <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n\\r\\n          </th>\\r\\n</tr>\\r\\n\\r\\n</ng-template>\\r\\n<ng-template pTemplate=\\\"body\\\" let-rowData let-ri=\\\"rowIndex\\\">\\r\\n  <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n        <td>\\r\\n                <p-tableCheckbox [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n            </td>\\r\\n            <td>\\r\\n                  {{rowData.invoice_purchase_details_id.invoice_purchase_code}}\\r\\n            </td>\\r\\n            <td>\\r\\n                  {{rowData.invoice_purchase_details_id.invoice_date | date:'medium'}}\\r\\n            </td>\\r\\n            <td>\\r\\n                {{rowData.sub_total  | currency : 'INR':true}}\\r\\n        </td>\\r\\n        <td>\\r\\n            {{rowData.discount  | currency : 'INR':true}}\\r\\n    </td>\\r\\n    <td>\\r\\n        {{rowData.grand_total  | currency : 'INR':true}}\\r\\n</td>\\r\\n<td>\\r\\n  <!-- {{rowData.payment_type}} -->\\r\\n  <ng-container *ngIf=\\\"rowData.payment_type == 1; then thenPaymentTemplate; else elsePaymentTemplate\\\"></ng-container>\\r\\n  <ng-template #thenPaymentTemplate>\\r\\n    Cash\\r\\n  </ng-template>\\r\\n  <ng-template #elsePaymentTemplate>\\r\\n    Card\\r\\n  </ng-template>\\r\\n  \\r\\n\\r\\n</td>\\r\\n<td>\\r\\n{{rowData.updatedAt | date:'medium'}}\\r\\n</td>\\r\\n    <td>\\r\\n        <!-- <p-inputSwitch [(ngModel)]=\\\"rowData.payment_status\\\" (onChange)=\\\"onChangeStatus($event)\\\"></p-inputSwitch>  -->\\r\\n          <!-- {{rowData.payment_status}} -->\\r\\n          <ng-container *ngIf=\\\"rowData.payment_status == 1; then thenStatusTemplate; else elseStatusTemplate\\\"></ng-container>\\r\\n          <ng-template #thenStatusTemplate>\\r\\n            Paid\\r\\n          </ng-template>\\r\\n          <ng-template #elseStatusTemplate>\\r\\n            Pending\\r\\n          </ng-template>\\r\\n    </td>\\r\\n</tr>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template pTemplate=\\\"paginatorleft\\\" let-state>\\r\\nShowing {{(state.page  * state.rows) + 1}} to {{state.rows * (state.page + 1)}} of <strong>{{invoiceList?.length}}</strong> entries\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n</p-table>\\r\\n\\r\\n\\r\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\r\\n\\r\\n</p-card>\\r\\n</div>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PurchaseReportComponent } from './purchase-report.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:PurchaseReportComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PurchaseReportRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9pbnZlbnRvcnktbW5ndC9yZXBvcnRzL3B1cmNoYXNlLXJlcG9ydC9wdXJjaGFzZS1yZXBvcnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport * as moment from 'moment';\r\nimport { Router } from '@angular/router';\r\nimport { ReportService } from 'src/app/shared/report.service';\r\nimport { SessionService } from 'src/app/shared/session.service';\r\n\r\n@Component({\r\n  selector: 'app-purchase-report',\r\n  templateUrl: './purchase-report.component.html',\r\n  styleUrls: ['./purchase-report.component.scss']\r\n})\r\nexport class PurchaseReportComponent implements OnInit {\r\n\r\n  loading: boolean;\r\n  public bradCrum: MenuItem[];\r\n  cols: any[];\r\n  invoiceList: any = [];\r\n  reportListSheet: any = []\r\n  selectedDate = {start: moment().format(), end: moment().format()};\r\n  alwaysShowCalendars: boolean;\r\n  ranges: any = {\r\n    'Today': [moment().format(), moment().format()],\r\n    'Yesterday': [moment().subtract(1, 'days').format(), moment().subtract(1, 'days').format()],\r\n    'Last 7 Days': [moment().subtract(6, 'days').format(), moment().format()],\r\n    'Last 30 Days': [moment().subtract(29, 'days').format(), moment().format()],\r\n    'This Month': [moment().startOf('month').format(), moment().endOf('month').format()],\r\n    'Last Month': [moment().subtract(1, 'month').startOf('month').format(), moment().subtract(1, 'month').endOf('month').format()]\r\n  }\r\n  constructor(private router:Router,private reportService:ReportService, public sessionService: SessionService ) {\r\n      this.alwaysShowCalendars = true;\r\n    this.bradCrum = [\r\n      {label:'',icon: 'pi pi-home',command: (event) => {\r\n        this.router.navigate(['/inventory-mngt/dashboard'])}\r\n      },    \r\n      {label:'Reports',command: (event) => {\r\n        this.router.navigate(['/inventory-mngt/reports'])}\r\n      },\r\n      {label:'Purchase report'},\r\n  ];\r\n  \r\n    \r\n    this.cols = [\r\n      // { field: '_id', header: '#' },\r\n      { field: 'invoice_code', header: 'Code' },\r\n      { field: 'invoice_date', header: 'Invoice Date' },\r\n      { field: 'sub_total', header: 'Sub Total' },\r\n      { field: 'discount', header: 'Discount' },\r\n      { field: 'grand_total', header: 'Grand Total' },\r\n      { field: 'payment_type', header: 'Payment Type' },\r\n      { field: 'updatedAt', header: 'Updated Date' },\r\n      { field: 'payment_status', header: 'Status' }\r\n  ];\r\n\r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    console.log(this.selectedDate)\r\n    this.getPurchaseReportByCompany(this.selectedDate.start, this.selectedDate.end);\r\n  \r\n  }\r\n\r\n  change(event){\r\n    console.log(event)\r\n    this.getPurchaseReportByCompany(event.startDate, event.endDate);\r\n    \r\n  }\r\n\r\n  getPurchaseReportByCompany(from_date, to_date){\r\n    console.log(from_date, to_date)\r\n    this.loading = true\r\n    this.reportService.getPurchaseReportByCompany(from_date, to_date)\r\n    .subscribe((data:any)=>{\r\n      console.log('invoiceList',data);\r\n      this.invoiceList = data;\r\n      this.loading = false;   for(let sheetData of data){\r\n        this.reportListSheet.push({\r\n          'Invoice Code' : sheetData.invoice_purchase_details_id.invoice_purchase_code,\r\n          'Invoice Date' : sheetData.invoice_purchase_details_id.invoice_date,\r\n          'Stock Name' : sheetData.stock_details_id.stock_name,\r\n          'Stock Qty' : sheetData.stock_qty,\r\n          'Stock Price' : sheetData.stock_price,\r\n          'Discount' : sheetData.discount,\r\n          'Total Price' : sheetData.grand_total,\r\n          'Payment Type' : sheetData.payment_type,\r\n          'Updated date'  : sheetData.updatedAt,\r\n          'Payment Status' : sheetData.payment_status == 1 ? 'Paid' : 'Not Paid'\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\nexportExcel() {\r\n  import(\"xlsx\").then(xlsx => {\r\n      const worksheet = xlsx.utils.json_to_sheet(this.reportListSheet);\r\n      const workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n      const excelBuffer: any = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n      this.saveAsExcelFile(excelBuffer, \"purchaseReportTable\");\r\n  });\r\n}\r\n\r\nsaveAsExcelFile(buffer: any, fileName: string): void {\r\n  import(\"file-saver\").then(FileSaver => {\r\n      let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n      let EXCEL_EXTENSION = '.xlsx';\r\n      const data: Blob = new Blob([buffer], {\r\n          type: EXCEL_TYPE\r\n      });\r\n      FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  });\r\n}\r\n\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PurchaseReportComponent } from './purchase-report.component';\r\nimport { PurchaseReportRoutingModule } from './purchase-report-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\r\nimport { TableModule } from 'primeng/table';\r\nimport { CardModule } from 'primeng/card';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [PurchaseReportComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PurchaseReportRoutingModule,\r\n    FormsModule,\r\n    BreadcrumbModule,\r\n    TableModule,\r\n    CardModule,\r\n    ConfirmDialogModule,\r\n    InputTextModule,\r\n    ButtonModule,\r\n    NgxDaterangepickerMd.forRoot()\r\n  ]\r\n})\r\nexport class PurchaseReportModule { }\r\n"],"sourceRoot":"webpack:///","file":"purchase-report-purchase-report-module-es5.js"}