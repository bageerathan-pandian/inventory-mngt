{"version":3,"sources":["src/app/component/change-password/change-password.component.html","src/app/component/change-password/change-password-routing.module.ts","src/app/component/change-password/change-password.component.scss","src/app/component/change-password/change-password.component.ts","src/app/component/change-password/change-password.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- <pre>{{ auth.getUserData() | json }}</pre> -->\\n<p-toast position=\\\"top-right\\\"></p-toast>\\n\\n        <p-breadcrumb [model]=\\\"bradCrum\\\"></p-breadcrumb>\\n        <div style=\\\"margin-top: 15px;\\\">\\n\\n<p-messages class=\\\"ui-g-12\\\" styleClass=\\\"loagin-wrapper\\\" ></p-messages>\\n<p-card  class=\\\"ui-g-12\\\">\\n    <form [formGroup]=\\\"changePasswordForm\\\" > \\n    <div class=\\\"ui-g ui-fluid\\\" >\\n            <div class=\\\"ui-g-12\\\">\\n                <div class=\\\"ui-g-4\\\">\\n                    <label for=\\\"user_pwd\\\">Old Password</label>\\n                </div>\\n                <div class=\\\"ui-g-8\\\">\\n                    <input type=\\\"password\\\" id=\\\"user_pwd\\\" pPassword formControlName=\\\"user_pwd\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"ui-g-12\\\">\\n                <div class=\\\"ui-g-4\\\">\\n                    <label for=\\\"new_user_pwd\\\">New Password</label>\\n                </div>\\n                <div class=\\\"ui-g-8\\\">\\n                    <input type=\\\"password\\\" id=\\\"new_user_pwd\\\" pPassword formControlName=\\\"new_user_pwd\\\"  nopasswordmatch (focusout)=\\\"passwordMatch()\\\"/>\\n                </div>\\n            </div> <div class=\\\"ui-g-12\\\">\\n                <div class=\\\"ui-g-4\\\">\\n                    <label for=\\\"year\\\">Confirm Password</label>\\n                </div>\\n                <div class=\\\"ui-g-8\\\">\\n                    <input type=\\\"password\\\" pPassword formControlName=\\\"cnfirm_user_pwd\\\"  nopasswordmatch (focusout)=\\\"passwordMatch()\\\"/>\\n                </div>\\n            </div>\\n    </div>\\n    <p-footer>\\n        <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n            <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"delete(car)\\\" label=\\\"Delete\\\"></button> -->\\n            <button type=\\\"button\\\" pButton  icon=\\\"actionLoding ? 'pi pi-save' : 'pi pi-spin pi-spinner'\\\" class=\\\"ui-button-success\\\" (click)=\\\"updatePassword()\\\" label=\\\"Change Password\\\"></button>\\n        </div>\\n    </p-footer>\\n    </form>\\n</p-card>\\n        </div>\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\" #cd>\\n<p-footer>\\n        <button pButton type=\\\"button\\\" label=\\\"Yes\\\" class=\\\"ui-button-success\\\" (click)=\\\"cd.accept()\\\"></button>        \\n        <button pButton type=\\\"button\\\" label=\\\"No\\\" class=\\\"ui-button-danger\\\" (click)=\\\"cd.reject()\\\"></button>\\n    </p-footer>\\n</p-confirmDialog>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChangePasswordComponent } from './change-password.component';\n\n\nconst routes: Routes = [\n  {path:'',component:ChangePasswordComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChangePasswordRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { User } from 'src/app/model/user.model';\nimport { MessageService, ConfirmationService, MenuItem } from 'primeng/api';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss'],\n  providers:[ConfirmationService]\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  changePasswordForm: FormGroup\n  displayDialog: boolean\n  private bradCrum: MenuItem[];\n  constructor(private auth: AuthService, private _fb: FormBuilder, private messageService: MessageService,private router: Router, private confirmationService: ConfirmationService) {\n    \n   \n    this.changePasswordForm = this._fb.group({\n      _id: [this.auth.getUserData()._id],\n      user_pwd: ['',Validators.required],\n      new_user_pwd: ['',Validators.required],\n      cnfirm_user_pwd: ['',Validators.required],\n      company_details_id:[this.auth.getUserData().company_details_id._id,Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.bradCrum = [\n      {label:'',icon: 'pi pi-home',command: (event) => {\n        this.router.navigate(['/dashboard'])}\n      },\n      {\n        label: \"Change Password\",\n        command: event => {\n          this.router.navigate([\"/change-password\"]);\n        }\n      }\n    ];\n  }\n\n  public checkValidity(): void {\n    Object.keys(this.changePasswordForm.controls).forEach((key) => {\n        this.changePasswordForm.controls[key].markAsDirty();\n    });\n  }\n \n  checkOldPassword(){\n    this.messageService.clear();\n    if(this.changePasswordForm.value.user_pwd && (this.auth.getUserData().user_pwd != this.changePasswordForm.value.user_pwd)){\n        this.messageService.add({severity:'warn', summary:'Warning!', detail:'Old password is wrong!'});\n        this.changePasswordForm.controls['user_pwd'].setValue('');\n       }\n  }\n\n  passwordMatch() {\n    this.messageService.clear();\n    let newPassword = this.changePasswordForm.value.new_user_pwd;\n    let confirmPassword = this.changePasswordForm.value.cnfirm_user_pwd;\n    if (confirmPassword != '') {\n      if (newPassword != confirmPassword) {\n        console.log('not eq');\n        console.log(this.changePasswordForm);\n        this.changePasswordForm.controls['cnfirm_user_pwd'].setErrors({ 'nopasswordmatch': true })\n        this.changePasswordForm.controls['cnfirm_user_pwd'].markAsDirty();\n        this.messageService.add({severity:'warn', summary:'Warning!', detail:'Password not same'});\n      } else {\n        console.log('eq');        \n        this.changePasswordForm.controls['cnfirm_user_pwd'].setErrors({ 'nopasswordmatch': null })\n        this.changePasswordForm.controls['cnfirm_user_pwd'].updateValueAndValidity();\n      }\n    } else {\n    }\n\n  }\n\n  confirm() {\n    this.confirmationService.confirm({\n        message: 'You will be logged out shortly for security perposes. Please remember your new password before logged out.',\n        accept: () => {\n            //Actual logic to perform a confirmation\n            this.doUpdatePassword()\n        }\n    });\n}\n\n  updatePassword(){\n    console.log(this.changePasswordForm)\n    if(this.changePasswordForm.invalid){\n      this.checkValidity();\n      this.passwordMatch();\n      return false;\n    }\n    // this.submitAttempt = false;\n    this.confirm();\n  }\n\n  doUpdatePassword(){\n    this.auth.changePassword(this.changePasswordForm.value)\n    .subscribe((data:any)=>{\n    },\n    error => {\n    })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChangePasswordRoutingModule } from './change-password-routing.module';\nimport { ChangePasswordComponent } from './change-password.component';\nimport { CardModule } from 'primeng/card';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TableModule } from 'primeng/table';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { PasswordModule } from 'primeng/password';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ToastModule } from 'primeng/toast';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { ChartModule } from 'primeng/chart';\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport { FileUploadModule } from 'primeng/fileupload';\n\n\n@NgModule({\n  declarations: [ChangePasswordComponent],\n  imports: [\n    CommonModule,\n    ChangePasswordRoutingModule,   \n    CardModule,\n    FormsModule,\n    InputTextModule,\n    TableModule,\n    ButtonModule,\n    DialogModule,\n    DropdownModule,\n    PasswordModule,\n    BreadcrumbModule,\n    ConfirmDialogModule,\n    ToastModule,\n    InputSwitchModule,\n    ChartModule,\n    GooglePlaceModule,\n    InputMaskModule,\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    ImageCropperModule,\n    FileUploadModule\n  ]\n})\nexport class ChangePasswordModule { }\n"],"sourceRoot":"webpack:///"}