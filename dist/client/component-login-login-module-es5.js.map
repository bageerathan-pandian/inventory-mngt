{"version":3,"sources":["src/app/component/login/login.component.html","src/app/component/login/login-routing.module.ts","src/app/component/login/login.component.scss","src/app/component/login/login.component.ts","src/app/component/login/login.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- <p-toast position=\\\"top-right\\\"></p-toast> -->\\n<div  class=\\\"ui-g-12 ui-md-4 ui-md-offset-4\\\">\\n  \\n\\n\\n        <ngx-spinner  bdOpacity = 0.1  bdColor = \\\"rgba(255,255,255,0.9)\\\"  size = \\\"default\\\"  color = \\\"#060606\\\"  type = \\\"ball-clip-rotate\\\"  [fullScreen] = \\\"false\\\"  >\\n                <p style=\\\"color: #000\\\" > Authendicating... </p>\\n        </ngx-spinner>\\n    <p-messages class=\\\"ui-g-12\\\" styleClass=\\\"loagin-wrapper\\\" ></p-messages>\\n<div class=\\\"ui-g-12\\\"  style=\\\"text-align: center;position: relative;height: 100px;\\\">\\n        <a routerLink=\\\"/login\\\">\\n          <img src=\\\"Card\\\" src=\\\"./assets/img/comp_logo.png\\\" style=\\\"    max-height: 100%;  max-width: 100%;   left: 0;   right: 0;    top: 0;     bottom: 0;   margin: auto;\\\">\\n        </a>\\n    </div>\\n    <p-card  class=\\\"login-form ui-g-12 ui-md-12\\\" >\\n           \\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLogin()\\\" style=\\\"text-align: center\\\">\\n        <div class=\\\"ui-g ui-fluid\\\">\\n\\n                <div class=\\\"ui-g-12 ui-md-12\\\">\\n                    <h2>Login</h2>\\n                    <span>with your business Account</span>\\n                </div>\\n        \\n            <div class=\\\"ui-g-12 ui-md-12\\\">\\n                <div class=\\\"ui-inputgroup\\\">\\n                    <span class=\\\"ui-inputgroup-addon\\\"><i class=\\\"pi pi-envelope\\\"></i></span>\\n                    <input type=\\\"text\\\" pInputText placeholder=\\\"User Email\\\" formControlName=\\\"user_email\\\" required >              \\n               </div>\\n                <p class=\\\"error-msg\\\" *ngIf=\\\"!loginForm.controls['user_email'].valid && (loginForm.controls['user_email'].dirty || loginForm.controls['user_email'].touched)\\\">\\n                    <em *ngIf=\\\"loginForm.controls['user_email'].errors['required']\\\"> User Email is required    </em>\\n                    <em *ngIf=\\\"loginForm.controls['user_email'].errors['pattern']\\\">  Invalid Email    </em>\\n                 </p>\\n            \\n            </div>\\n      \\n            \\n      \\n            <div class=\\\"ui-g-12 ui-md-12\\\">\\n                <div class=\\\"ui-inputgroup\\\">\\n                    <span class=\\\"ui-inputgroup-addon\\\"><i class=\\\"pi pi-key\\\"></i></span>\\n                    <input type=\\\"text\\\" pInputText placeholder=\\\"Password\\\" formControlName=\\\"user_pwd\\\" required>         \\n                </div>\\n                <p class=\\\"error-msg\\\" *ngIf=\\\"!loginForm.controls['user_pwd'].valid && (loginForm.controls['user_pwd'].dirty || loginForm.controls['user_pwd'].touched)\\\">\\n                        <em *ngIf=\\\"loginForm.controls['user_pwd'].errors['required']\\\">Password is required  </em>\\n                     </p>\\n               \\n            </div>\\n            \\n            <div class=\\\"ui-g-6 ui-md-6\\\">\\n            <p-checkbox name=\\\"groupname\\\" label=\\\"Remember Me\\\" formControlName=\\\"rememberMe\\\"></p-checkbox>\\n          </div>\\n          </div>\\n        <p-footer>\\n            <button pButton type=\\\"submit\\\" label=\\\"Login\\\"  class=\\\"ui-button-raised \\\" style=\\\"margin-right: .25em;    width: 100%;\\\" ></button>\\n        </p-footer>\\n      </form>\\n      <p>------------------ Or ------------------</p>\\n      <p-footer>\\n                    <p >Don't have an account? <a  rel=\\\"noopener noreferrer\\\"  routerLink=\\\"/register\\\" >Register</a></p>\\n                \\n                  \\n                <a  rel=\\\"noopener noreferrer\\\"  routerLink=\\\"/forgot-password\\\" >Forgot Password?</a>\\n           \\n      </p-footer>\\n    </p-card>\\n    \\n    <div style=\\\"text-align: center\\\">\\n        <div>2019@ Ownwaysoft.com Made with <span class=\\\"color-red\\\">‚ù§</span>.</div>\\n        <div>Version : 1.0.0</div>\\n      </div>\\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {path:'',component:LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","export default \".login-form {\\n  text-align: center;\\n}\\n\\n.loagin-wrapper {\\n  margin-top: 10%;\\n}\\n\\n.error-msg {\\n  font-size: 10px;\\n  color: #f1061c;\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2xvZ2luL0U6XFxvd253YXlzb2Z0LmNvbVxcaW52ZW50b3J5LW1uZ3RcXGNsaWVudC9zcmNcXGFwcFxcY29tcG9uZW50XFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FDQ0Y7O0FEVUE7RUFDRSxlQUFBO0FDUEY7O0FEVUE7RUFDRSxlQUFBO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0FDUEoiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnQvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIC8vIHdpZHRoOiA0MDBweDtcclxuICAvLyBtYXgtaGVpZ2h0OiA0NDBweDtcclxuICAvLyBoZWlnaHQ6IGF1dG87XHJcbiAgLy8gcG9zaXRpb246IGFic29sdXRlO1xyXG4gIC8vIHRvcDogMDtcclxuICAvLyBib3R0b206IDA7XHJcbiAgLy8gbGVmdDogMDtcclxuICAvLyByaWdodDogMDtcclxuICAvLyBtYXJnaW46IGF1dG87XHJcbn1cclxuLmxvYWdpbi13cmFwcGVye1xyXG4gIG1hcmdpbi10b3A6IDEwJTtcclxufVxyXG5cclxuLmVycm9yLW1zZ3tcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgICBjb2xvcjogI2YxMDYxYztcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn0iLCIubG9naW4tZm9ybSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmxvYWdpbi13cmFwcGVyIHtcbiAgbWFyZ2luLXRvcDogMTAlO1xufVxuXG4uZXJyb3ItbXNnIHtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBjb2xvcjogI2YxMDYxYztcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthService } from \"src/app/shared/auth.service\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\ndeclare var io: any\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  showSpinner: boolean;\r\n  \r\n  private socket;\r\n  constructor(private auth: AuthService, private _fb: FormBuilder,private messageService: MessageService, private router: Router,private spinner: NgxSpinnerService) {\r\n    if(this.auth.isLogedIn()){\r\n      this.router.navigate([\"/dashboard\"]);\r\n    }\r\n    this.socket = io(environment.api_url);\r\n\r\n    this.loginForm = this._fb.group({\r\n      // userName: [\"\", Validators.compose([Validators.required, Validators.minLength(6)])],\r\n      user_email: [\"\", [Validators.required, Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')]],\r\n      user_pwd: [\"\", Validators.required],\r\n      rememberMe: [\"\"]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n \r\n  }\r\n\r\n  public checkValidity(): void {\r\n    Object.keys(this.loginForm.controls).forEach((key) => {\r\n        this.loginForm.controls[key].markAsDirty();\r\n    });\r\n  }\r\n\r\n  onLogin() {\r\n    if (this.loginForm.invalid) {\r\n      this.checkValidity();\r\n      return false;\r\n    }\r\n    console.log(this.loginForm.value);\r\n    this.showSpinner = true;\r\n    this.spinner.show();\r\n    this.auth.logIn(this.loginForm.value)\r\n    .subscribe((data:any)=>{\r\n      console.log('data',data);\r\n      this.showSpinner = false;\r\n      this.messageService.clear();\r\n      if(data.user.status == 0){\r\n        this.messageService.add({severity:'error', summary:'Opps!', detail:'Your account is deactivated by Company admin!'});\r\n        return false;\r\n      }\r\n      if(data.user.status == 2){\r\n        this.messageService.add({severity:'error', summary:'Opps!', detail:'Your account has been expired. Contact App!'});\r\n        return false;\r\n      }\r\n      if(data.token){\r\n        // setTimeout(() => {\r\n          this.spinner.hide();\r\n          this.socket.emit('loginTodo', data.user);\r\n          localStorage.setItem('secret_token',data.token);\r\n          localStorage.setItem('user_details',JSON.stringify(data.user));\r\n          localStorage.setItem('client_company_id',data.user.company_details_id._id);\r\n          this.messageService.add({severity:'success', summary:'Success!', detail:'Login success!'});\r\n          localStorage.setItem(\"inventryLogedIn\", \"1\");\r\n          this.router.navigate([\"/dashboard\"]);\r\n        //  }, 1000);\r\n        \r\n      }else{\r\n        this.messageService.clear();\r\n        this.messageService.add({severity:'warn', summary:'Warning!', detail:'Check your User Name/Password'});\r\n      }\r\n    \r\n    },\r\n    error =>{\r\n      console.log('er',error);\r\n      this.showSpinner = false;\r\n      this.messageService.add({severity:'error', summary:'Opps!', detail:'Sothing went wrong!'});\r\n      // localStorage.setItem(\"inventryLogedIn\", \"1\");\r\n      // this.router.navigate([\"/dashboard\"]);\r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport {CardModule} from 'primeng/card';\nimport {ButtonModule} from 'primeng/button';\nimport {InputTextModule} from 'primeng/inputtext';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MessagesModule} from 'primeng/messages';\nimport {MessageModule} from 'primeng/message';\nimport {ToastModule} from 'primeng/toast';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CardModule,\n    ButtonModule,\n    InputTextModule,\n    MessagesModule,\n    MessageModule,\n    ToastModule,\n    CheckboxModule,\n    NgxSpinnerModule\n  ]\n})\nexport class LoginModule { }\n"],"sourceRoot":"webpack:///"}