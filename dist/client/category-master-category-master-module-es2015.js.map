{"version":3,"sources":["./node_modules/primeng/components/inputswitch/inputswitch.js","./node_modules/primeng/dropdown.js","./node_modules/primeng/inputswitch.js","./node_modules/primeng/tooltip.js","./src/app/component/inventory-mngt/master/category-master/category-master.component.html","./src/app/component/inventory-mngt/master/category-master/category-master-routing.module.ts","./src/app/component/inventory-mngt/master/category-master/category-master.component.scss","./src/app/component/inventory-mngt/master/category-master/category-master.component.ts","./src/app/component/inventory-mngt/master/category-master/category-master.module.ts","./src/app/shared/category.service.ts","./src/app/shared/common.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,oEAAe;AACpC,eAAe,mBAAO,CAAC,0EAAiB;AACxC,cAAc,mBAAO,CAAC,uEAAgB;AACtC;AACA;AACA,gDAAgD,oBAAoB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yKAAyK;AAC5N;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;;;;;AC/HA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8FAAgC,G;;;;;;;;;;;;ACNjD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0GAAsC,G;;;;;;;;;;;;ACNvD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0FAA8B,G;;;;;;;;;;;;ACN/C;AAAe,wKAAyG,yYAAyY,WAAW,cAAc,qBAAqB,usBAAusB,YAAY,2SAA2S,mpBAAmpB,uBAAuB,yFAAyF,uBAAuB,+EAA+E,mCAAmC,q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","file":"category-master-category-master-module-es2015.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nexports.INPUTSWITCH_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return InputSwitch; }),\n    multi: true\n};\nvar InputSwitch = /** @class */ (function () {\n    function InputSwitch(cd) {\n        this.cd = cd;\n        this.onChange = new core_1.EventEmitter();\n        this.checked = false;\n        this.focused = false;\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n    }\n    InputSwitch.prototype.onClick = function (event, cb) {\n        if (!this.disabled && !this.readonly) {\n            this.toggle(event);\n            cb.focus();\n        }\n    };\n    InputSwitch.prototype.onInputChange = function (event) {\n        if (!this.readonly) {\n            var inputChecked = event.target.checked;\n            this.updateModel(event, inputChecked);\n        }\n    };\n    InputSwitch.prototype.toggle = function (event) {\n        this.updateModel(event, !this.checked);\n    };\n    InputSwitch.prototype.updateModel = function (event, value) {\n        this.checked = value;\n        this.onModelChange(this.checked);\n        this.onChange.emit({\n            originalEvent: event,\n            checked: this.checked\n        });\n    };\n    InputSwitch.prototype.onFocus = function (event) {\n        this.focused = true;\n    };\n    InputSwitch.prototype.onBlur = function (event) {\n        this.focused = false;\n        this.onModelTouched();\n    };\n    InputSwitch.prototype.writeValue = function (checked) {\n        this.checked = checked;\n        this.cd.markForCheck();\n    };\n    InputSwitch.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    InputSwitch.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    InputSwitch.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], InputSwitch.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], InputSwitch.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], InputSwitch.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], InputSwitch.prototype, \"inputId\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], InputSwitch.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], InputSwitch.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], InputSwitch.prototype, \"readonly\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], InputSwitch.prototype, \"onChange\", void 0);\n    InputSwitch = __decorate([\n        core_1.Component({\n            selector: 'p-inputSwitch',\n            template: \"\\n        <div [ngClass]=\\\"{'ui-inputswitch ui-widget': true, 'ui-inputswitch-checked': checked, 'ui-state-disabled': disabled, 'ui-inputswitch-readonly': readonly, 'ui-inputswitch-focus': focused}\\\" \\n            [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" (click)=\\\"onClick($event, cb)\\\" role=\\\"checkbox\\\" [attr.aria-checked]=\\\"checked\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [attr.tabindex]=\\\"tabindex\\\" [checked]=\\\"checked\\\" (change)=\\\"onInputChange($event)\\\"\\n                        (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\" [disabled]=\\\"disabled\\\" />\\n            </div>\\n            <span class=\\\"ui-inputswitch-slider\\\"></span>\\n        </div>\\n    \",\n            providers: [exports.INPUTSWITCH_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\n    ], InputSwitch);\n    return InputSwitch;\n}());\nexports.InputSwitch = InputSwitch;\nvar InputSwitchModule = /** @class */ (function () {\n    function InputSwitchModule() {\n    }\n    InputSwitchModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [InputSwitch],\n            declarations: [InputSwitch]\n        })\n    ], InputSwitchModule);\n    return InputSwitchModule;\n}());\nexports.InputSwitchModule = InputSwitchModule;\n//# sourceMappingURL=inputswitch.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dropdown/dropdown\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputswitch/inputswitch\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/tooltip/tooltip\"));","export default \"\\r\\n        <p-breadcrumb [model]=\\\"bradCrum\\\"></p-breadcrumb>\\r\\n        <div style=\\\"margin-top: 15px;\\\">\\r\\n      <p-card  >\\r\\n      <p-table  #dt1 [columns]=\\\"cols\\\" [loading]=\\\"loading\\\" [value]=\\\"categoryList\\\" dataKey=\\\"_id\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"   [rowsPerPageOptions]=\\\"[10,50,100]\\\" [globalFilterFields]=\\\"['category_code','category_name']\\\">\\r\\n          <ng-template pTemplate=\\\"caption\\\">\\r\\n             \\r\\n           \\r\\n              <div style=\\\"text-align: right;width: 50%; float: right; margin-bottom: 10px;\\\">        \\r\\n                  <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i> \\r\\n                  <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\" (input)=\\\"dt1.filterGlobal($event.target.value, 'contains')\\\"   style=\\\"width:auto\\\">\\r\\n              </div>\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n              <tr>\\r\\n                    <th style=\\\"width: 3em\\\">\\r\\n                            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\r\\n                        </th>\\r\\n                    <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\" pResizableColumn >\\r\\n                            {{col.header}}\\r\\n                            <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n\\r\\n                        </th>\\r\\n                 <th style=\\\"width: 10%;\\\">\\r\\n                    <button type=\\\"button\\\" pButton icon=\\\"pi pi-plus\\\" class=\\\"ui-button-success\\\"  iconPos=\\\"left\\\" (click)=\\\"showDialogToAdd()\\\" label=\\\"Add\\\"  pTooltip=\\\"Add new Category\\\" tooltipPosition=\\\"top\\\" ></button>\\r\\n\\r\\n            </th>\\r\\n              </tr>\\r\\n          </ng-template>\\r\\n          <ng-template pTemplate=\\\"body\\\" let-rowData  let-ri=\\\"rowIndex\\\" >\\r\\n            \\r\\n              <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n                    <td>\\r\\n                            <p-tableCheckbox [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                        </td>\\r\\n                  <td>\\r\\n                      {{rowData.category_code}}\\r\\n                  </td>\\r\\n                  <td>\\r\\n                              {{rowData.category_name}}\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    {{rowData.updatedAt | date:'medium'}}\\r\\n            </td>\\r\\n                  <td style=\\\"text-align: center\\\">\\r\\n                    <p-dropdown [options]=\\\"status\\\" placeholder=\\\"Status\\\" [(ngModel)]=\\\"rowData.status\\\" (onChange)=\\\"onChangeStatus($event)\\\"></p-dropdown>\\r\\n                </td>\\r\\n                <td style=\\\"text-align:center\\\">\\r\\n                    <button  pButton type=\\\"button\\\"  icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info\\\" (click)=\\\"showDialogToAdd(rowData)\\\" style=\\\"    margin: 0px 5px;\\\"></button>\\r\\n                    <!-- <button  pButton type=\\\"button\\\" pSaveEditableRow icon=\\\"pi pi-check\\\" class=\\\"ui-button-success\\\" style=\\\"margin-right: .5em\\\" (click)=\\\"onRowEditSave(rowData)\\\"></button> -->\\r\\n                    <button  pButton type=\\\"button\\\"  icon=\\\"pi pi-trash\\\" class=\\\"ui-button-danger\\\" (click)=\\\"delete(rowData, ri)\\\" style=\\\"    margin: 0px 5px;\\\"></button>\\r\\n                </td>\\r\\n              </tr>\\r\\n          </ng-template>\\r\\n           \\r\\n           <ng-template pTemplate=\\\"paginatorleft\\\" let-state>\\r\\n            Showing {{(state.page  * state.rows) + 1}} to {{state.rows * (state.page + 1)}} of <strong>{{categoryList?.length}}</strong> entries\\r\\n          </ng-template>\\r\\n      </p-table>\\r\\n\\r\\n      <!-- <p-dialog    [maximizable]=\\\"true\\\" [(visible)]=\\\"displayDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [resizable]=\\\"false\\\" [modal]=\\\"true\\\"  [style]=\\\"{width: '450px'}\\\">\\r\\n            <p-header>\\r\\n                    <span *ngIf=\\\"categoryForm.value._id\\\">Update</span>\\r\\n                    <span *ngIf=\\\"!categoryForm.value._id\\\">Add</span> Category\\r\\n            </p-header>\\r\\n        <form [formGroup]=\\\"categoryForm\\\">\\r\\n        <div class=\\\"ui-g ui-fluid\\\" >\\r\\n            <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-4\\\">\\r\\n                    <label > Code</label>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-8\\\">\\r\\n                    <input pInputText  formControlName=\\\"category_code\\\" disabled />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-4\\\">\\r\\n                    <label >Category Name</label>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-8\\\">\\r\\n                    <input pInputText  formControlName=\\\"category_name\\\" autofocus />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-4\\\">\\r\\n                    <label for=\\\"brand\\\">Status</label>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-8\\\">\\r\\n                    <p-dropdown [options]=\\\"status\\\" placeholder=\\\"Select Status\\\" formControlName=\\\"status\\\"></p-dropdown>\\r\\n    \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <p-footer>\\r\\n            <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\r\\n                <button type=\\\"button\\\" pButton  icon=\\\"pi pi-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"save()\\\" label=\\\"Save\\\"></button>\\r\\n            </div>\\r\\n        </p-footer>\\r\\n    </form>\\r\\n    </p-dialog> -->\\r\\n    \\r\\n    <p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\" #cd>\\r\\n            <p-footer>\\r\\n                    <button pButton type=\\\"button\\\" label=\\\"Yes\\\" class=\\\"ui-button-success\\\" (click)=\\\"cd.accept()\\\"></button>        \\r\\n                    <button pButton type=\\\"button\\\" label=\\\"No\\\" class=\\\"ui-button-danger\\\" (click)=\\\"cd.reject()\\\"></button>\\r\\n                </p-footer>\\r\\n            </p-confirmDialog>\\r\\n\\r\\n\\r\\n    </p-card>\\r\\n    </div>\\r\\n\\r\\n    <app-category-form [displayDialog1]=\\\"displayDialog1\\\" [catData]=\\\"catData\\\" (displayChangeEvent1)=\\\"onDialogClose1($event)\\\" (catEvent)=\\\"receiveCategory($event)\\\"></app-category-form>\\r\\n\\r\\n\\r\\n    <!-- <p-toast class=\\\"deletepopuplist\\\" position=\\\"center\\\" key=\\\"c\\\" (onClose)=\\\"onReject()\\\" [modal]=\\\"true\\\" [baseZIndex]=\\\"5000\\\">\\r\\n            <ng-template let-message pTemplate=\\\"message\\\">\\r\\n                <div style=\\\"text-align: center\\\">\\r\\n                    <img src=\\\"/assets/img/delete.png\\\" style=\\\"max-width: 40%;\\\">\\r\\n                    <h3 style=\\\"font-size: 26px;margin-top: 0;\\\">{{message.summary}}</h3>\\r\\n                    <p>{{message.detail}}</p>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g ui-fluid\\\">\\r\\n                    <div class=\\\"ui-g-6\\\">\\r\\n                        <button type=\\\"button\\\" pButton (click)=\\\"onConfirm()\\\" label=\\\"Yes\\\" class=\\\"ui-button-danger\\\" style=\\\"    padding: 0.429em 1em;\\\">\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"ui-g-6\\\">\\r\\n                        <button type=\\\"button\\\" pButton (click)=\\\"onReject()\\\" label=\\\"No\\\" class=\\\"ui-button-secondary\\\" style=\\\"    padding: 0.429em 1em;\\\"></button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </ng-template>\\r\\n        </p-toast> -->\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CategoryMasterComponent } from './category-master.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:CategoryMasterComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CategoryMasterRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9pbnZlbnRvcnktbW5ndC9tYXN0ZXIvY2F0ZWdvcnktbWFzdGVyL2NhdGVnb3J5LW1hc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { MenuItem, MessageService, ConfirmationService } from \"primeng/api\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Category } from 'src/app/model/category.model';\r\nimport * as _ from 'lodash';\r\nimport { CategoryService } from 'src/app/shared/category.service';\r\nimport { CommonService } from 'src/app/shared/common.service';\r\nimport { SessionService } from 'src/app/shared/session.service';\r\n\r\n@Component({\r\n  selector: \"app-category-master\",\r\n  templateUrl: \"./category-master.component.html\",\r\n  styleUrls: [\"./category-master.component.scss\"],\r\n  providers: [ConfirmationService]\r\n})\r\nexport class CategoryMasterComponent implements OnInit {\r\n  \r\n  loading: boolean;\r\n  public bradCrum: MenuItem[];\r\n  categoryList: Category[];\r\n  categoryListSheet: any[] = [];\r\n  displayDialog1: boolean;\r\n  status:any = [];\r\n  cols: any[];\r\n  columns: any[];\r\n  catData:any = []\r\n  constructor(private router:Router, private confirmationService: ConfirmationService,private messageService: MessageService,private categoryService:CategoryService, private commonService: CommonService,\r\n    public sessionService: SessionService\r\n    ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.bradCrum = [\r\n      {label:'',icon: 'pi pi-home',command: (event) => {\r\n        this.router.navigate(['/inventory-mngt/dashboard'])}\r\n      },\r\n      {\r\n        label: \"Master\",\r\n        command: event => {\r\n          this.router.navigate([\"/inventory-mngt/master\"]);\r\n        }\r\n      },\r\n      {\r\n        label: \"Category\",\r\n        command: event => {\r\n          this.router.navigate([\"/inventory-mngt/master/category\"]);\r\n        }\r\n      }\r\n    ];\r\n    this.status = [\r\n      {label:'Active', value:1},\r\n      {label:'De-Active', value:0},\r\n    ]\r\n   \r\n   \r\n    // if(this.user_details.role == '0'){\r\n    //   this.getCategory();\r\n    // }else{\r\n      this.getCategoryByCompany();\r\n    // }\r\n    this.cols = [\r\n      // { field: '_id', header: '#' },\r\n      { field: 'category_code', header: 'Code' },\r\n      { field: 'category_name', header: 'Category Name' },\r\n      { field: 'updatedAt', header: 'Updated Date' },\r\n      { field: 'status', header: 'Status' }\r\n      // { field: '', header: 'Action' }\r\n  ];\r\n\r\n  }\r\n\r\n  getCategory(){\r\n    this.loading = true\r\n    this.categoryService.getCategory()\r\n    .subscribe((data:any)=>{\r\n      console.log('categoryList',data);\r\n      this.categoryList = data;\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  getCategoryByCompany(){\r\n    this.loading = true\r\n    this.categoryService.getCategoryByCompany()\r\n    .subscribe((data:any)=>{\r\n      console.log('categoryList',data);\r\n      this.categoryList = data;\r\n      this.loading = false;\r\n    })\r\n  }\r\n \r\n  // showDialogToAdd() {\r\n  //   this.categoryForm.reset();\r\n  //   this.categoryForm.controls['category_code'].setValue(this.commonService.incrCode('c',this.categoryList.length));\r\n  //   this.categoryForm.controls['status'].setValue(1);\r\n  //   this.categoryForm.controls['company_details_id'].setValue(this.sessionService.getItem('company_id'))\r\n  //   this.displayDialog1 = true;\r\n  // }\r\n\r\n \r\n \r\n\r\n  delete(data,index){\r\n    console.log('delete',data,index);\r\n    \r\n    // this.messageService.clear();\r\n    // this.messageService.add({key: 'c', sticky: true, severity:'warn', summary:'Are you sure?', detail:'You want to delete this item'});\r\n\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure that you want to delete this category?',\r\n      accept: () => {\r\n          //Actual logic to perform a confirmation\r\n          this.onRowDelete(data,index);\r\n      }\r\n  });\r\n  }\r\n\r\n  onConfirm() {\r\n    this.messageService.clear('c');\r\n  }\r\n\r\n  onReject() {\r\n    this.messageService.clear('c');\r\n  }\r\n\r\n  onRowDelete(category,index) {\r\n    console.log(category,index);\r\n     this.categoryService.deleteCategory(category._id)\r\n    .subscribe((data:any)=>{\r\n      console.log('delete',data);\r\n      this.categoryList.splice(index, 1);\r\n      this.categoryList = [...this.categoryList];\r\n      this.messageService.add({severity:'success', summary:'Category Deleted Successfully', detail:'Category Deleted Successfully'});\r\n  \r\n    },\r\n    error =>{\r\n      console.log(error);\r\n      this.messageService.add({severity:'error', summary:'Oopss!', detail:'Something went wrong!'});\r\n\r\n    })\r\n  }\r\n\r\n\r\n  onChangeStatus(event,id){\r\n    console.log(event);\r\n    let isChecked = event.checked;\r\n    this.categoryService.updateStatus(event.checked,id)\r\n    .subscribe((data:any)=>{\r\n      this.messageService.add({severity:'success', summary:'Status Updated Successfully', detail:'Status Updated Successfully'});\r\n    },\r\n    error =>{\r\n      console.log(error);\r\n      this.messageService.add({severity:'error', summary:'Oopss!', detail:'Something went wrong!'}); \r\n\r\n    })\r\n  }\r\n\r\n  showDialogToAdd(Data) {\r\n    this.catData = Data;\r\n    this.displayDialog1 = true;\r\n  }\r\n\r\n  onDialogClose1(event){\r\n    console.log(event)  \r\n    this.displayDialog1 = false;\r\n    this.catData = null\r\n  }\r\n\r\n  receiveCategory(event){\r\n    console.log('receiveCategory',event) \r\n        \r\n    var sliceIndex = _.findIndex(this.categoryList, function (o) { return o._id == event._id; });\r\n    console.log(sliceIndex);\r\n    if (sliceIndex > -1) {\r\n      // Replace item at index using native splice\r\n      this.categoryList.splice(sliceIndex, 1, event);\r\n      this.categoryList = [...this.categoryList];\r\n    }else{\r\n      this.categoryList = [event,...this.categoryList];\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CategoryMasterRoutingModule } from './category-master-routing.module';\r\nimport { CategoryMasterComponent } from './category-master.component';\r\nimport {BreadcrumbModule} from 'primeng/breadcrumb';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {TableModule} from 'primeng/table';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CardModule } from 'primeng/card';\r\nimport {InputSwitchModule} from 'primeng/inputswitch';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { CategoryFormModule } from '../../shared/category-form/category-form.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CategoryMasterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CategoryMasterRoutingModule,\r\n    BreadcrumbModule,\r\n    ToastModule,\r\n    TableModule,\r\n    ButtonModule,\r\n    InputTextModule,\r\n    FormsModule,\r\n    CardModule,\r\n    InputSwitchModule,\r\n    DropdownModule,\r\n    ConfirmDialogModule,\r\n    DialogModule,\r\n    ReactiveFormsModule,\r\n    ProgressSpinnerModule,\r\n    TooltipModule,\r\n    CategoryFormModule\r\n  ]\r\n})\r\nexport class CategoryMasterModule { }\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SessionService } from './session.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  constructor(private httpClient:HttpClient, private sessionService: SessionService) { }\r\n\r\n  getCategory(){\r\n    return this.httpClient.get(environment.api_url + '/api/category');\r\n  }\r\n  \r\n  getCategoryByCompany(){\r\n    return this.httpClient.get(environment.api_url + '/api/category/get-by-company/'+this.sessionService.getItem('company_id'));\r\n  }\r\n\r\n  addCategory(data){\r\n    var body = JSON.stringify(data);\r\n    console.log('body',body);\r\n    var headerOption = new HttpHeaders({'Content-Type':'application/json'});\r\n    return this.httpClient.post(environment.api_url + '/api/category',body,{headers:headerOption});\r\n  }\r\n\r\n  updateCategory(data){\r\n    var body = JSON.stringify(data);\r\n    console.log('body',body);\r\n    var headerOption = new HttpHeaders({'Content-Type':'application/json'});\r\n    return this.httpClient.put(environment.api_url + '/api/category/'+ data._id ,body,{headers:headerOption});\r\n  }\r\n\r\n  deleteCategory(id){\r\n    return this.httpClient.delete(environment.api_url + '/api/category/'+ id);\r\n  }\r\n\r\n  updateStatus(status,id){\r\n    var body = JSON.stringify(status);\r\n    console.log('body',body);\r\n    var headerOption = new HttpHeaders({'Content-Type':'application/json'});\r\n    return this.httpClient.put(environment.api_url + '/api/category/status-update/'+ id ,body,{headers:headerOption});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n   \r\n  leftPad(type,number, targetLength) {\r\n    var output = number + '';\r\n    while (output.length < targetLength) {\r\n        output = '0' + output;\r\n    }\r\n    return type +'-'+ output;\r\n}\r\n\r\n  incrCode(type,count){\r\n    let cCode = Number(count) + 1\r\n    console.log('cCode',cCode);\r\n    return this.leftPad(type,cCode, 4) ;\r\n  }\r\n\r\n  \r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}