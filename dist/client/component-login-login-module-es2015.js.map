{"version":3,"sources":["./src/app/component/login/login.component.html","./src/app/component/login/login-routing.module.ts","./src/app/component/login/login.component.scss","./src/app/component/login/login.component.ts","./src/app/component/login/login.module.ts"],"names":[],"mappings":"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","file":"component-login-login-module-es2015.js","sourcesContent":["export default \"<!-- <p-toast position=\\\"top-right\\\"></p-toast> -->\\n<div  class=\\\"ui-g-12 ui-md-4 ui-md-offset-4\\\">\\n  \\n\\n\\n        <ngx-spinner  bdOpacity = 0.1  bdColor = \\\"rgba(255,255,255,0.9)\\\"  size = \\\"default\\\"  color = \\\"#060606\\\"  type = \\\"ball-clip-rotate\\\"  [fullScreen] = \\\"false\\\"  >\\n                <p style=\\\"color: #000\\\" > Authendicating... </p>\\n        </ngx-spinner>\\n    <p-messages class=\\\"ui-g-12\\\" styleClass=\\\"loagin-wrapper\\\" ></p-messages>\\n<div class=\\\"ui-g-12\\\"  style=\\\"text-align: center;position: relative;height: 100px;\\\">\\n        <a routerLink=\\\"/login\\\">\\n          <img src=\\\"Card\\\" src=\\\"./assets/img/comp_logo.png\\\" style=\\\"    max-height: 100%;  max-width: 100%;   left: 0;   right: 0;    top: 0;     bottom: 0;   margin: auto;\\\">\\n        </a>\\n    </div>\\n    <p-card  class=\\\"login-form ui-g-12 ui-md-12\\\" >\\n           \\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLogin()\\\" style=\\\"text-align: center\\\">\\n        <div class=\\\"ui-g ui-fluid\\\">\\n\\n                <div class=\\\"ui-g-12 ui-md-12\\\">\\n                    <h2>Login</h2>\\n                    <span>with your business Account</span>\\n                </div>\\n        \\n            <div class=\\\"ui-g-12 ui-md-12\\\">\\n                <div class=\\\"ui-inputgroup\\\">\\n                    <span class=\\\"ui-inputgroup-addon\\\"><i class=\\\"pi pi-envelope\\\"></i></span>\\n                    <input type=\\\"text\\\" pInputText placeholder=\\\"User Email\\\" formControlName=\\\"user_email\\\" required >              \\n               </div>\\n                <p class=\\\"error-msg\\\" *ngIf=\\\"!loginForm.controls['user_email'].valid && (loginForm.controls['user_email'].dirty || loginForm.controls['user_email'].touched)\\\">\\n                    <em *ngIf=\\\"loginForm.controls['user_email'].errors['required']\\\"> User Email is required    </em>\\n                    <em *ngIf=\\\"loginForm.controls['user_email'].errors['pattern']\\\">  Invalid Email    </em>\\n                 </p>\\n            \\n            </div>\\n      \\n            \\n      \\n            <div class=\\\"ui-g-12 ui-md-12\\\">\\n                <div class=\\\"ui-inputgroup\\\">\\n                    <span class=\\\"ui-inputgroup-addon\\\"><i class=\\\"pi pi-key\\\"></i></span>\\n                    <input type=\\\"text\\\" pInputText placeholder=\\\"Password\\\" formControlName=\\\"user_pwd\\\" required>         \\n                </div>\\n                <p class=\\\"error-msg\\\" *ngIf=\\\"!loginForm.controls['user_pwd'].valid && (loginForm.controls['user_pwd'].dirty || loginForm.controls['user_pwd'].touched)\\\">\\n                        <em *ngIf=\\\"loginForm.controls['user_pwd'].errors['required']\\\">Password is required  </em>\\n                     </p>\\n               \\n            </div>\\n            \\n            <div class=\\\"ui-g-6 ui-md-6\\\">\\n            <p-checkbox name=\\\"groupname\\\" label=\\\"Remember Me\\\" formControlName=\\\"rememberMe\\\"></p-checkbox>\\n          </div>\\n          </div>\\n        <p-footer>\\n            <button pButton type=\\\"submit\\\" label=\\\"Login\\\"  class=\\\"ui-button-raised \\\" style=\\\"margin-right: .25em;    width: 100%;\\\" ></button>\\n        </p-footer>\\n      </form>\\n      <p>------------------ Or ------------------</p>\\n      <p-footer>\\n                    <p >Don't have an account? <a  rel=\\\"noopener noreferrer\\\"  routerLink=\\\"/register\\\" >Register</a></p>\\n                \\n                  \\n                <a  rel=\\\"noopener noreferrer\\\"  routerLink=\\\"/forgot-password\\\" >Forgot Password?</a>\\n           \\n      </p-footer>\\n    </p-card>\\n    \\n    <div style=\\\"text-align: center\\\">\\n        <div>2019@ Ownwaysoft.com Made with <span class=\\\"color-red\\\">‚ù§</span>.</div>\\n        <div>Version : 1.0.0</div>\\n      </div>\\n</div>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {path:'',component:LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","export default \".login-form {\\n  text-align: center;\\n}\\n\\n.loagin-wrapper {\\n  margin-top: 10%;\\n}\\n\\n.error-msg {\\n  font-size: 10px;\\n  color: #f1061c;\\n  text-align: left;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2xvZ2luL0U6XFxvd253YXlzb2Z0LmNvbVxcaW52ZW50b3J5LW1uZ3RcXGNsaWVudC9zcmNcXGFwcFxcY29tcG9uZW50XFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0FDQ0Y7O0FEVUE7RUFDRSxlQUFBO0FDUEY7O0FEVUE7RUFDRSxlQUFBO0VBQ0UsY0FBQTtFQUNBLGdCQUFBO0FDUEoiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnQvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIC8vIHdpZHRoOiA0MDBweDtcclxuICAvLyBtYXgtaGVpZ2h0OiA0NDBweDtcclxuICAvLyBoZWlnaHQ6IGF1dG87XHJcbiAgLy8gcG9zaXRpb246IGFic29sdXRlO1xyXG4gIC8vIHRvcDogMDtcclxuICAvLyBib3R0b206IDA7XHJcbiAgLy8gbGVmdDogMDtcclxuICAvLyByaWdodDogMDtcclxuICAvLyBtYXJnaW46IGF1dG87XHJcbn1cclxuLmxvYWdpbi13cmFwcGVye1xyXG4gIG1hcmdpbi10b3A6IDEwJTtcclxufVxyXG5cclxuLmVycm9yLW1zZ3tcclxuICBmb250LXNpemU6IDEwcHg7XHJcbiAgICBjb2xvcjogI2YxMDYxYztcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn0iLCIubG9naW4tZm9ybSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmxvYWdpbi13cmFwcGVyIHtcbiAgbWFyZ2luLXRvcDogMTAlO1xufVxuXG4uZXJyb3ItbXNnIHtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBjb2xvcjogI2YxMDYxYztcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthService } from \"src/app/shared/auth.service\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\n\r\ndeclare var io: any\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  showSpinner: boolean;\r\n  \r\n  private socket;\r\n  constructor(private auth: AuthService, private _fb: FormBuilder,private messageService: MessageService, private router: Router,private spinner: NgxSpinnerService) {\r\n    if(this.auth.isLogedIn()){\r\n      this.router.navigate([\"/dashboard\"]);\r\n    }\r\n    this.socket = io(environment.api_url);\r\n\r\n    this.loginForm = this._fb.group({\r\n      // userName: [\"\", Validators.compose([Validators.required, Validators.minLength(6)])],\r\n      user_email: [\"\", [Validators.required, Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')]],\r\n      user_pwd: [\"\", Validators.required],\r\n      rememberMe: [\"\"]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n \r\n  }\r\n\r\n  public checkValidity(): void {\r\n    Object.keys(this.loginForm.controls).forEach((key) => {\r\n        this.loginForm.controls[key].markAsDirty();\r\n    });\r\n  }\r\n\r\n  onLogin() {\r\n    if (this.loginForm.invalid) {\r\n      this.checkValidity();\r\n      return false;\r\n    }\r\n    console.log(this.loginForm.value);\r\n    this.showSpinner = true;\r\n    this.spinner.show();\r\n    this.auth.logIn(this.loginForm.value)\r\n    .subscribe((data:any)=>{\r\n      console.log('data',data);\r\n      this.showSpinner = false;\r\n      this.messageService.clear();\r\n      if(data.user.status == 0){\r\n        this.messageService.add({severity:'error', summary:'Opps!', detail:'Your account is deactivated by Company admin!'});\r\n        return false;\r\n      }\r\n      if(data.user.status == 2){\r\n        this.messageService.add({severity:'error', summary:'Opps!', detail:'Your account has been expired. Contact App!'});\r\n        return false;\r\n      }\r\n      if(data.token){\r\n        // setTimeout(() => {\r\n          this.spinner.hide();\r\n          this.socket.emit('loginTodo', data.user);\r\n          localStorage.setItem('secret_token',data.token);\r\n          localStorage.setItem('user_details',JSON.stringify(data.user));\r\n          localStorage.setItem('client_company_id',data.user.company_details_id._id);\r\n          this.messageService.add({severity:'success', summary:'Success!', detail:'Login success!'});\r\n          localStorage.setItem(\"inventryLogedIn\", \"1\");\r\n          this.router.navigate([\"/dashboard\"]);\r\n        //  }, 1000);\r\n        \r\n      }else{\r\n        this.messageService.clear();\r\n        this.messageService.add({severity:'warn', summary:'Warning!', detail:'Check your User Name/Password'});\r\n      }\r\n    \r\n    },\r\n    error =>{\r\n      console.log('er',error);\r\n      this.showSpinner = false;\r\n      this.messageService.add({severity:'error', summary:'Opps!', detail:'Sothing went wrong!'});\r\n      // localStorage.setItem(\"inventryLogedIn\", \"1\");\r\n      // this.router.navigate([\"/dashboard\"]);\r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport {CardModule} from 'primeng/card';\nimport {ButtonModule} from 'primeng/button';\nimport {InputTextModule} from 'primeng/inputtext';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MessagesModule} from 'primeng/messages';\nimport {MessageModule} from 'primeng/message';\nimport {ToastModule} from 'primeng/toast';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CardModule,\n    ButtonModule,\n    InputTextModule,\n    MessagesModule,\n    MessageModule,\n    ToastModule,\n    CheckboxModule,\n    NgxSpinnerModule\n  ]\n})\nexport class LoginModule { }\n"],"sourceRoot":"webpack:///"}