{"version":3,"sources":["src/app/component/inventory-mngt/master/route-master/route-master.component.html","src/app/component/inventory-mngt/master/route-master/route-master-routing.module.ts","src/app/component/inventory-mngt/master/route-master/route-master.component.scss","src/app/component/inventory-mngt/master/route-master/route-master.component.ts","src/app/component/inventory-mngt/master/route-master/route-master.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<p-breadcrumb [model]=\\\"bradCrum\\\"></p-breadcrumb>\\n<div style=\\\"margin-top: 15px;\\\">\\n<p-card  >\\n<p-table  #dt1  [columns]=\\\"cols\\\" [loading]=\\\"loading\\\" [value]=\\\"routeList\\\" dataKey=\\\"_id\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\"   [rowsPerPageOptions]=\\\"[10,50,100]\\\" [globalFilterFields]=\\\"['_id','unit_code','unit_name']\\\">\\n  <ng-template pTemplate=\\\"caption\\\">\\n      <div class=\\\"ui-helper-clearfix\\\" >\\n\\n          <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-file-o\\\" iconPos=\\\"left\\\" label=\\\"All Data\\\" (click)=\\\"dt.exportCSV()\\\" style=\\\"float:left\\\"></button> -->\\n          <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-file\\\" iconPos=\\\"left\\\" label=\\\"Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\" style=\\\"float:right\\\"></button> -->\\n      </div>\\n      <div style=\\\"text-align: right\\\">        \\n          <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i> \\n          <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\" (input)=\\\"dt1.filterGlobal($event.target.value, 'contains')\\\"   style=\\\"width:auto\\\">\\n      </div>\\n  </ng-template>\\n  <ng-template  pTemplate=\\\"header\\\" let-columns>\\n      <tr>\\n            <th style=\\\"width: 3em\\\">\\n                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\n                </th>\\n            <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\" pResizableColumn >\\n                    {{col.header}}\\n                    <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\" ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\n\\n                </th>\\n         <th style=\\\"width: 10%;\\\">\\n            <button type=\\\"button\\\" pButton icon=\\\"pi pi-plus\\\" class=\\\"ui-button-success\\\"  iconPos=\\\"left\\\" (click)=\\\"showDialogToAdd()\\\" label=\\\"Add\\\" ></button>\\n\\n    </th>\\n      </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\" >\\n    \\n      <tr [pEditableRow]=\\\"rowData\\\">\\n            <td>\\n                    <p-tableCheckbox [value]=\\\"rowData\\\"></p-tableCheckbox>\\n                </td>\\n          <td>\\n              {{rowData.route_code}}\\n          </td>\\n          <td>\\n              <p-cellEditor>\\n                  <ng-template pTemplate=\\\"input\\\">\\n                      <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.route_name\\\" required>\\n                  </ng-template>\\n                  <ng-template pTemplate=\\\"output\\\">\\n                      {{rowData.route_name}}\\n                  </ng-template>\\n              </p-cellEditor>\\n          </td>\\n          <td>\\n            {{rowData.updatedAt | date:'medium'}}\\n    </td>\\n          <td style=\\\"text-align: center\\\">\\n            <p-dropdown [options]=\\\"status\\\" placeholder=\\\"Status\\\" [(ngModel)]=\\\"rowData.status\\\" (onChange)=\\\"onChangeStatus($event)\\\"></p-dropdown>\\n        </td>\\n        <td style=\\\"text-align:center\\\">\\n            <button  pButton type=\\\"button\\\" pInitEditableRow icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info\\\" (click)=\\\"onRowEdit(rowData)\\\" style=\\\"    margin: 0px 5px;\\\"></button>\\n            <!-- <button  pButton type=\\\"button\\\" pSaveEditableRow icon=\\\"pi pi-check\\\" class=\\\"ui-button-success\\\" style=\\\"margin-right: .5em\\\" (click)=\\\"onRowEditSave(rowData)\\\"></button> -->\\n            <button  pButton type=\\\"button\\\" pCancelEditableRow icon=\\\"pi pi-trash\\\" class=\\\"ui-button-danger\\\" (click)=\\\"delete(rowData, ri)\\\" style=\\\"    margin: 0px 5px;\\\"></button>\\n        </td>\\n      </tr>\\n  </ng-template>\\n   \\n   <ng-template pTemplate=\\\"paginatorleft\\\" let-state>\\n    Showing {{(state.page  * state.rows) + 1}} to {{state.rows * (state.page + 1)}} of <strong>{{routeList?.length}}</strong> entries\\n  </ng-template>\\n</p-table>\\n\\n<!-- <p-dialog  [maximizable]=\\\"true\\\" [(visible)]=\\\"displayDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [resizable]=\\\"false\\\" [modal]=\\\"true\\\"  [style]=\\\"{width: '450px'}\\\">\\n    <p-header>\\n            <span *ngIf=\\\"unitForm.value._id\\\">Update</span>\\n            <span *ngIf=\\\"!unitForm.value._id\\\">Add</span> Unit\\n    </p-header>\\n<form [formGroup]=\\\"unitForm\\\">\\n<div class=\\\"ui-g ui-fluid\\\" >\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"ui-g-4\\\">\\n            <label for=\\\"vin\\\">Code</label>\\n        </div>\\n        <div class=\\\"ui-g-8\\\">\\n            <input pInputText  formControlName=\\\"unit_code\\\" disabled />\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"ui-g-4\\\">\\n            <label for=\\\"vin\\\">Tax Name</label>\\n        </div>\\n        <div class=\\\"ui-g-8\\\">\\n            <input pInputText formControlName=\\\"unit_name\\\" autofocus />\\n        </div>\\n    </div>\\n    <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"ui-g-4\\\">\\n            <label for=\\\"brand\\\">Status</label>\\n        </div>\\n        <div class=\\\"ui-g-8\\\">\\n            <p-dropdown [options]=\\\"status\\\" placeholder=\\\"Select Status\\\" formControlName=\\\"status\\\"></p-dropdown>\\n\\n        </div>\\n    </div>\\n</div>\\n<p-footer>\\n    <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n        <button type=\\\"button\\\" pButton  icon=\\\"pi pi-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"save()\\\" label=\\\"Save\\\"></button>\\n    </div>\\n</p-footer>\\n</form>\\n</p-dialog> -->\\n\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\" #cd>\\n    <p-footer>\\n            <button pButton type=\\\"button\\\" label=\\\"Yes\\\" class=\\\"ui-button-success\\\" (click)=\\\"cd.accept()\\\"></button>        \\n            <button pButton type=\\\"button\\\" label=\\\"No\\\" class=\\\"ui-button-danger\\\" (click)=\\\"cd.reject()\\\"></button>\\n        </p-footer>\\n    </p-confirmDialog>\\n</p-card>\\n</div>\\n\\n<app-route-form [displayDialog2]=\\\"displayDialog2\\\" [routeData]=\\\"routeData\\\"  (displayChangeEvent2)=\\\"onDialogClose2($event)\\\"  (routeEvent)=\\\"receiveRoute($event)\\\"></app-route-form>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RouteMasterComponent } from './route-master.component';\n\n\nconst routes: Routes = [\n  {path:'',component:RouteMasterComponent}\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RouteMasterRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9pbnZlbnRvcnktbW5ndC9tYXN0ZXIvcm91dGUtbWFzdGVyL3JvdXRlLW1hc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MenuItem, ConfirmationService, MessageService } from 'primeng/api';\nimport { Router } from '@angular/router';\nimport { Unit } from 'src/app/model/unit.model';\n\nimport * as _ from 'lodash';\nimport { CommonService } from 'src/app/shared/common.service';\nimport { SessionService } from 'src/app/shared/session.service';\nimport { Route } from '@angular/compiler/src/core';\nimport { RouteService } from 'src/app/shared/route.service';\n\n\n@Component({\n  selector: 'app-route-master',\n  templateUrl: './route-master.component.html',\n  styleUrls: ['./route-master.component.scss']\n})\nexport class RouteMasterComponent implements OnInit {\n\n  loading: boolean;\n  public bradCrum: MenuItem[];\n  routeList: Unit[];\n  displayDialog2: boolean;\n  car: any = {};\n  status: any = [];\n  cols: any[];\n  routeData: any = []\n  constructor(private router: Router, private confirmationService: ConfirmationService, private messageService: MessageService, private routeService: RouteService, private commonService: CommonService,\n    public sessionService: SessionService\n  ) {\n  }\n\n  ngOnInit() {\n\n    this.bradCrum = [\n      {\n        label: '', icon: 'pi pi-home', command: (event) => {\n          this.router.navigate(['/inventory-mngt/dashboard'])\n        }\n      },\n      {\n        label: \"Master\",\n        command: event => {\n          this.router.navigate([\"/inventory-mngt/master\"]);\n        }\n      },\n      {\n        label: \"Route\",\n        command: event => {\n          this.router.navigate([\"/inventory-mngt/master/route\"]);\n        }\n      }\n    ];\n    this.status = [\n      { label: 'Active', value: 1 },\n      { label: 'De-Active', value: 0 },\n    ]\n\n\n    // if(this.user_details.role == '0'){\n    //   this.getTax();\n    // }else{\n    this.getRouteByCompany();\n    // }\n    this.cols = [\n      // { field: '_id', header: '#' },\n      { field: 'route_code', header: 'Code' },\n      { field: 'route_name', header: 'Route Name' },\n      { field: 'updatedAt', header: 'Updated Date' },\n      { field: 'status', header: 'Status' }\n      // { field: '', header: 'Action' }\n    ];\n  }\n\n  getRoute() {\n    this.loading = true\n    this.routeService.getRoute()\n      .subscribe((data: any) => {\n        console.log('routeList', data);\n        this.routeList = data;\n        this.loading = false;\n      })\n  }\n\n  getRouteByCompany() {\n    this.loading = true\n    this.routeService.getRouteByCompany()\n      .subscribe((data: any) => {\n        console.log('routeList', data);\n        this.routeList = data;\n        this.loading = false;\n      })\n  }\n\n\n  showDialogToAdd() {\n    // this.unitForm.reset();\n    // this.unitForm.controls['unit_code'].setValue(this.commonService.incrCode('u',this.routeList.length));\n    // this.unitForm.controls['status'].setValue(1);\n    // this.unitForm.controls['company_details_id'].setValue(this.sessionService.getItem('company_id'))\n    this.displayDialog2 = true;\n  }\n\n\n\n\n  delete(data, index) {\n    console.log('delete', data, index);\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete this Route?',\n      accept: () => {\n        //Actual logic to perform a confirmation\n        this.onRowDelete(data, index);\n      }\n    });\n  }\n\n\n  onRowEdit(route: Route) {\n    console.log(route);\n    this.displayDialog2 = true;\n    this.routeData = route\n    // this.unitForm.controls['_id'].setValue(unit._id);\n    // this.unitForm.controls['unit_code'].setValue(unit.unit_code);\n    // this.unitForm.controls['unit_name'].setValue(unit.unit_name);\n    // this.unitForm.controls['status'].setValue(unit.status);\n  }\n\n  onRowDelete(tax, index) {\n    console.log(tax, index);\n    this.routeService.deleteRoute(tax._id)\n      .subscribe((data: any) => {\n        console.log('delete', data);\n        this.routeList.splice(index, 1);\n        this.routeList = [...this.routeList];\n        this.messageService.add({ severity: 'success', summary: 'Route Deleted Successfully', detail: 'Route Deleted Successfully' });\n\n      },\n        error => {\n          console.log(error);\n          this.messageService.add({ severity: 'error', summary: 'Oopss!', detail: 'Something went wrong!' });\n\n        })\n  }\n\n\n  onChangeStatus(event, id) {\n    console.log(event);\n    let isChecked = event.checked;\n    this.routeService.updateStatus(event.checked, id)\n      .subscribe((data: any) => {\n        this.messageService.add({ severity: 'success', summary: 'Status Updated Successfully', detail: 'Status Updated Successfully' });\n      },\n        error => {\n          console.log(error);\n          this.messageService.add({ severity: 'error', summary: 'Oopss!', detail: 'Something went wrong!' });\n\n        })\n  }\n\n\n\n  onDialogClose2(event) {\n    console.log(event)\n    this.displayDialog2 = false;\n  }\n\n  receiveRoute(event) {\n    console.log('receiveRoute', event)\n\n    var sliceIndex = _.findIndex(this.routeList, function (o) { return o._id == event._id; });\n    console.log(sliceIndex);\n    if (sliceIndex > -1) {\n      // Replace item at index using native splice\n      this.routeList.splice(sliceIndex, 1, event);\n      this.routeList = [...this.routeList];\n    } else {\n      this.routeList = [event, ...this.routeList];\n    }\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouteMasterRoutingModule } from './route-master-routing.module';\nimport { RouteMasterComponent } from './route-master.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CardModule } from 'primeng/card';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TableModule } from 'primeng/table';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ToastModule } from 'primeng/toast';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport {MultiSelectModule} from 'primeng/multiselect';\nimport { RouteFormModule } from '../../shared/route-form/route-form.module';\n\n\n@NgModule({\n  declarations: [RouteMasterComponent],\n  imports: [\n    CommonModule,\n    RouteMasterRoutingModule,\n    HttpClientModule,\n    CardModule,\n    FormsModule,\n    InputTextModule,\n    TableModule,\n    ButtonModule,\n    DialogModule,\n    DropdownModule,\n    BreadcrumbModule,\n    ConfirmDialogModule,\n    ToastModule,\n    InputSwitchModule,\n    ProgressSpinnerModule,\n    ReactiveFormsModule,\n    MultiSelectModule,\n    RouteFormModule\n  ]\n})\nexport class RouteMasterModule { }\n"],"sourceRoot":"webpack:///","file":"route-master-route-master-module-es5.js"}