{"version":3,"sources":["src/app/component/forgot-password/forgot-password.component.html","src/app/component/forgot-password/forgot-password-routing.module.ts","src/app/component/forgot-password/forgot-password.component.scss","src/app/component/forgot-password/forgot-password.component.ts","src/app/component/forgot-password/forgot-password.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- <app-header></app-header> -->\\r\\n<ngx-spinner  bdOpacity = 0.1  bdColor = \\\"rgba(255,255,255,0.9)\\\"  size = \\\"default\\\"  color = \\\"#060606\\\"  type = \\\"ball-clip-rotate\\\"  [fullScreen] = \\\"false\\\"  >\\r\\n    <p style=\\\"color: #000\\\" > Sending email... </p>\\r\\n</ngx-spinner>\\r\\n<div  class=\\\"ui-g-12\\\" style=\\\"padding: 5% 0;background: url(./assets/img/home-bg3.png) no-repeat center center;\\r\\nbackground-size: cover;height: 100%;\\\">\\r\\n  \\r\\n      <div class=\\\"ui-g-12 ui-md-4 ui-md-offset-4\\\">\\r\\n    \\r\\n    <p-messages class=\\\"ui-g-12\\\" styleClass=\\\"loagin-wrapper\\\" ></p-messages>\\r\\n    <!-- <div class=\\\"ui-g-12\\\"  style=\\\"text-align: center;position: relative;height: 100px;\\\">\\r\\n    <a routerLink=\\\"\\\">\\r\\n      <img src=\\\"Card\\\" src=\\\"./assets/img/comp_logo.png\\\" style=\\\"    max-height: 100%;  max-width: 100%;   left: 0;   right: 0;    top: 0;     bottom: 0;   margin: auto;\\\">\\r\\n    </a>\\r\\n</div> -->\\r\\n    \\r\\n        <p-card  class=\\\"login-form ui-g-12 ui-md-12\\\" *ngIf=\\\"!successRegister\\\">\\r\\n          <form [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"forgotPassword()\\\" style=\\\"text-align: center\\\">\\r\\n         \\r\\n          <div class=\\\"ui-g ui-fluid\\\">\\r\\n              <div class=\\\"ui-g-12 ui-md-12\\\">\\r\\n                  <h2>Forgot Your Password?</h2>\\r\\n                  <span>Please enter your Email to reset your password</span>\\r\\n              </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-12\\\">\\r\\n                    <div class=\\\"ui-inputgroup\\\">\\r\\n                        <span class=\\\"ui-inputgroup-addon\\\"><i class=\\\"pi pi-envelope\\\"></i></span>\\r\\n                        <input type=\\\"text\\\" pInputText placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required style=\\\"    width: 100%;\\\">              \\r\\n                   </div>\\r\\n                   <p  class=\\\"error-msg\\\" *ngIf=\\\"!forgotForm.controls['email'].valid && (forgotForm.controls['email'].dirty || forgotForm.controls['email'].touched)\\\">\\r\\n                      <em *ngIf=\\\"forgotForm.controls['email'].errors['required']\\\"> Recovery Email is required    </em>\\r\\n                      <em *ngIf=\\\"forgotForm.controls['email'].errors['pattern']\\\">  Invalid Email    </em>\\r\\n                   </p>\\r\\n               \\r\\n                </div>\\r\\n           \\r\\n        \\r\\n              \\r\\n            <div class=\\\"ui-g-12 ui-md-12\\\">\\r\\n              <button pButton type=\\\"submit\\\" label=\\\"Send Reset Password Link\\\"  class=\\\"ui-button-raised \\\" style=\\\"margin-right: .25em;    width: 100%;\\\" ></button>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n                <div style=\\\"text-align: center\\\">\\r\\n              <a  rel=\\\"noopener noreferrer\\\"  routerLink=\\\"/login\\\"  >Login?</a>\\r\\n                </div>\\r\\n        </form>\\r\\n      </p-card>\\r\\n      <p-card  class=\\\"login-form ui-g-12 ui-md-12\\\"  *ngIf=\\\"successRegister\\\" >\\r\\n        <div style=\\\"text-align: center\\\">\\r\\n            <i class=\\\"pi pi-check\\\" style=\\\"    color: #fff;   background: #08bd65;     border-radius: 100%;margin: 10px;font-size: 50px\\\"></i>\\r\\n        <h3>Password Reset Mail Sent</h3> \\r\\n        <p>An email has been sent to your rescue email address, <b>{{this.forgotForm.value.email}}</b> . Follow the direction in the email to reset your password. </p>\\r\\n          </div>\\r\\n      </p-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n  <!-- <div  class=\\\"ui-g-12 \\\">\\r\\n      <app-footer></app-footer>\\r\\n</div> -->\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:ForgotPasswordComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ForgotPasswordRoutingModule { }\r\n","export default \".login-form {\\n  margin-top: 20%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50L2ZvcmdvdC1wYXNzd29yZC9GOlxcYmFnZWVcXGludmVudG9yeS1tbmd0XFxjbGllbnQvc3JjXFxhcHBcXGNvbXBvbmVudFxcZm9yZ290LXBhc3N3b3JkXFxmb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NvbXBvbmVudC9mb3Jnb3QtcGFzc3dvcmQvZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBV0ksZUFBQTtBQ1RKIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50L2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybSB7XHJcbiAgLy8gICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAvLyB3aWR0aDogNDAwcHg7XHJcbiAgICAvLyBtYXgtaGVpZ2h0OiA0NDBweDtcclxuICAgIC8vIGhlaWdodDogYXV0bztcclxuICAgIC8vIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8vIHRvcDogMDtcclxuICAgIC8vIGJvdHRvbTogMDtcclxuICAgIC8vIGxlZnQ6IDA7XHJcbiAgICAvLyByaWdodDogMDtcclxuICAgIC8vIG1hcmdpbjogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDIwJTtcclxuICB9XHJcbiAgLy8gLmxvYWdpbi13cmFwcGVye1xyXG4gIC8vICAgbWFyZ2luLXRvcDogMTAlO1xyXG4gIC8vIH1cclxuICBcclxuICAiLCIubG9naW4tZm9ybSB7XG4gIG1hcmdpbi10b3A6IDIwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthLoginService } from 'src/app/shared/auth.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { SessionService } from 'src/app/shared/session.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  forgotForm: FormGroup;\r\n  successRegister: boolean = false;\r\n\r\n  constructor(private auth: AuthLoginService, private _fb: FormBuilder,private messageService: MessageService, private router: Router,\r\n    private spinner: NgxSpinnerService,\r\n    public sessionService: SessionService\r\n    ) {\r\n    if(this.sessionService.getItem('inventryLogedIn')){\r\n      this.router.navigate([\"/dashboard\"]);\r\n    }\r\n    this.forgotForm = this._fb.group({\r\n      // userName: [\"\", Validators.compose([Validators.required, Validators.minLength(6)])],\r\n      email:  ['',[Validators.required,Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')]],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n   public checkValidity(): void {\r\n    Object.keys(this.forgotForm.controls).forEach((key) => {\r\n      this.forgotForm.controls[key].markAsDirty();\r\n    });\r\n  }\r\n\r\n  \r\n forgotPassword() {\r\n    console.log(this.forgotForm.value);\r\n    if(this.forgotForm.invalid){\r\n      this.checkValidity()\r\n      return false\r\n    }\r\n    this.spinner.show()\r\n    this.auth.forgotPassword(this.forgotForm.value)\r\n    .subscribe((data:any)=>{\r\n      console.log(data);   \r\n      this.spinner.hide()\r\n      this.messageService.clear();  \r\n      if(data == 2){ \r\n        this.messageService.add({severity:'warn', summary:this.forgotForm.value.email, detail:' No user found with that email address.!'});\r\n        this.forgotForm.controls['email'].setErrors({ 'emailExist': true })\r\n        this.forgotForm.controls['email'].markAsDirty();     \r\n        // this. resetPassword()\r\n      }else if(data == 1){\r\n        this.successRegister = true;\r\n        this.forgotForm.controls['email'].setErrors({ 'emailExist': null })\r\n        this.forgotForm.controls['email'].updateValueAndValidity();\r\n      }else{\r\n        this.messageService.add({severity:'warn', summary:'Warning!', detail:'Please try again!'});\r\n        this.successRegister = false;\r\n        this.spinner.hide()\r\n      } \r\n    },\r\n    error =>{   \r\n      console.log('er',error);\r\n      this.messageService.add({severity:'error', summary:'Opps!', detail:'Sothing went wrong!'});\r\n      this.successRegister = false;\r\n      this.spinner.hide()\r\n    })\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ForgotPasswordRoutingModule } from './forgot-password-routing.module';\r\nimport { ForgotPasswordComponent } from './forgot-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CardModule } from 'primeng/card';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { HeaderModule } from '../header/header.module';\r\nimport { FooterModule } from '../footer/footer.module';\r\n\r\n@NgModule({\r\n  declarations: [ForgotPasswordComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    CardModule,\r\n    MessageModule,\r\n    MessagesModule,\r\n    ButtonModule,\r\n    ForgotPasswordRoutingModule,\r\n    NgxSpinnerModule,\r\n    HeaderModule,\r\n    FooterModule\r\n  ]\r\n})\r\nexport class ForgotPasswordModule { }\r\n"],"sourceRoot":"webpack:///","file":"component-forgot-password-forgot-password-module-es5.js"}