{"version":3,"sources":["node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js"],"names":[],"mappings":"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","sourcesContent":["/*!\n * \n *             jsPDF AutoTable plugin v3.2.13\n *             \n *             Copyright (c) 2014 Simon Bengtsson, https://github.com/simonbengtsson/jsPDF-AutoTable\n *             Licensed under the MIT License.\n *             http://opensource.org/licenses/mit-license\n *             \n *             * /if (typeof window === 'object') window.jspdfAutoTableVersion = '\" + newVersion + \"';/*\"\n *         \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jspdf\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jspdf\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"jspdf\")) : factory(root[\"jsPDF\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar defaultsDocument = null;\nvar previousTableState;\nvar tableState = null;\nexports.globalDefaults = {};\nexports.documentDefaults = {};\nfunction default_1() {\n    return tableState;\n}\nexports.default = default_1;\nfunction getGlobalOptions() {\n    return exports.globalDefaults;\n}\nexports.getGlobalOptions = getGlobalOptions;\nfunction getDocumentOptions() {\n    return exports.documentDefaults;\n}\nexports.getDocumentOptions = getDocumentOptions;\nvar TableState = /** @class */ (function () {\n    function TableState(doc) {\n        this.doc = doc;\n    }\n    TableState.prototype.pageHeight = function () {\n        return this.pageSize().height;\n    };\n    TableState.prototype.pageWidth = function () {\n        return this.pageSize().width;\n    };\n    TableState.prototype.pageSize = function () {\n        var pageSize = this.doc.internal.pageSize;\n        // JSPDF 1.4 uses get functions instead of properties on pageSize\n        if (pageSize.width == null) {\n            pageSize = {\n                width: pageSize.getWidth(),\n                height: pageSize.getHeight(),\n            };\n        }\n        return pageSize;\n    };\n    TableState.prototype.scaleFactor = function () {\n        return this.doc.internal.scaleFactor;\n    };\n    TableState.prototype.pageNumber = function () {\n        var pageInfo = this.doc.internal.getCurrentPageInfo();\n        if (!pageInfo) {\n            // Only recent versions of jspdf has pageInfo\n            return this.doc.internal.getNumberOfPages();\n        }\n        return pageInfo.pageNumber;\n    };\n    return TableState;\n}());\nfunction setupState(doc) {\n    previousTableState = tableState;\n    tableState = new TableState(doc);\n    if (doc !== defaultsDocument) {\n        defaultsDocument = doc;\n        exports.documentDefaults = {};\n    }\n}\nexports.setupState = setupState;\nfunction resetState() {\n    tableState = previousTableState;\n}\nexports.resetState = resetState;\nfunction setDefaults(defaults, doc) {\n    if (doc === void 0) { doc = null; }\n    if (doc) {\n        exports.documentDefaults = defaults || {};\n        defaultsDocument = doc;\n    }\n    else {\n        exports.globalDefaults = defaults || {};\n    }\n}\nexports.setDefaults = setDefaults;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = __webpack_require__(2);\nvar state_1 = __webpack_require__(0);\nvar polyfills_1 = __webpack_require__(3);\nfunction getStringWidth(text, styles) {\n    applyStyles(styles);\n    var textArr = Array.isArray(text) ? text : [text];\n    var widestLineWidth = textArr\n        .map(function (text) { return state_1.default().doc.getTextWidth(text); })\n        // Shave off a few digits for potential improvement in width calculation\n        .map(function (val) { return Math.floor(val * 10000) / 10000; })\n        .reduce(function (a, b) { return Math.max(a, b); }, 0);\n    var fontSize = styles.fontSize / state_1.default().scaleFactor();\n    return widestLineWidth;\n}\nexports.getStringWidth = getStringWidth;\n/**\n * Ellipsize the text to fit in the width\n */\nfunction ellipsize(text, width, styles, ellipsizeStr) {\n    if (ellipsizeStr === void 0) { ellipsizeStr = '...'; }\n    if (Array.isArray(text)) {\n        var value_1 = [];\n        text.forEach(function (str, i) {\n            value_1[i] = ellipsize(str, width, styles, ellipsizeStr);\n        });\n        return value_1;\n    }\n    var precision = 10000 * state_1.default().scaleFactor();\n    width = Math.ceil(width * precision) / precision;\n    if (width >= getStringWidth(text, styles)) {\n        return text;\n    }\n    while (width < getStringWidth(text + ellipsizeStr, styles)) {\n        if (text.length <= 1) {\n            break;\n        }\n        text = text.substring(0, text.length - 1);\n    }\n    return text.trim() + ellipsizeStr;\n}\nexports.ellipsize = ellipsize;\nfunction addTableBorder() {\n    var table = state_1.default().table;\n    var styles = {\n        lineWidth: table.settings.tableLineWidth,\n        lineColor: table.settings.tableLineColor,\n    };\n    applyStyles(styles);\n    var fs = getFillStyle(styles);\n    if (fs) {\n        state_1.default().doc.rect(table.pageStartX, table.pageStartY, table.width, table.cursor.y - table.pageStartY, fs);\n    }\n}\nexports.addTableBorder = addTableBorder;\nfunction getFillStyle(styles) {\n    var drawLine = styles.lineWidth > 0;\n    var drawBackground = styles.fillColor || styles.fillColor === 0;\n    if (drawLine && drawBackground) {\n        return 'DF'; // Fill then stroke\n    }\n    else if (drawLine) {\n        return 'S'; // Only stroke (transparent background)\n    }\n    else if (drawBackground) {\n        return 'F'; // Only fill, no stroke\n    }\n    else {\n        return false;\n    }\n}\nexports.getFillStyle = getFillStyle;\nfunction applyUserStyles() {\n    applyStyles(state_1.default().table.userStyles);\n}\nexports.applyUserStyles = applyUserStyles;\nfunction applyStyles(styles) {\n    var doc = state_1.default().doc;\n    var styleModifiers = {\n        fillColor: doc.setFillColor,\n        textColor: doc.setTextColor,\n        fontStyle: doc.setFontStyle,\n        lineColor: doc.setDrawColor,\n        lineWidth: doc.setLineWidth,\n        font: doc.setFont,\n        fontSize: doc.setFontSize,\n    };\n    Object.keys(styleModifiers).forEach(function (name) {\n        var style = styles[name];\n        var modifier = styleModifiers[name];\n        if (typeof style !== 'undefined') {\n            if (Array.isArray(style)) {\n                modifier.apply(this, style);\n            }\n            else {\n                modifier(style);\n            }\n        }\n    });\n}\nexports.applyStyles = applyStyles;\n// This is messy, only keep array and number format the next major version\nfunction marginOrPadding(value, defaultValue) {\n    var newValue = {};\n    if (Array.isArray(value)) {\n        if (value.length >= 4) {\n            newValue = {\n                top: value[0],\n                right: value[1],\n                bottom: value[2],\n                left: value[3],\n            };\n        }\n        else if (value.length === 3) {\n            newValue = {\n                top: value[0],\n                right: value[1],\n                bottom: value[2],\n                left: value[1],\n            };\n        }\n        else if (value.length === 2) {\n            newValue = {\n                top: value[0],\n                right: value[1],\n                bottom: value[0],\n                left: value[1],\n            };\n        }\n        else if (value.length === 1) {\n            value = value[0];\n        }\n        else {\n            value = defaultValue;\n        }\n    }\n    else if (typeof value === 'object') {\n        if (value['vertical']) {\n            value['top'] = value['vertical'];\n            value['bottom'] = value['vertical'];\n        }\n        if (value['horizontal']) {\n            value['right'] = value['horizontal'];\n            value['left'] = value['horizontal'];\n        }\n        for (var _i = 0, _a = ['top', 'right', 'bottom', 'left']; _i < _a.length; _i++) {\n            var side = _a[_i];\n            newValue[side] =\n                value[side] || value[side] === 0 ? value[side] : defaultValue;\n        }\n    }\n    if (typeof value === 'number') {\n        newValue = { top: value, right: value, bottom: value, left: value };\n    }\n    return newValue;\n}\nexports.marginOrPadding = marginOrPadding;\nfunction styles(styles) {\n    styles = Array.isArray(styles) ? styles : [styles];\n    return polyfills_1.assign.apply(void 0, __spreadArrays([config_1.defaultStyles()], styles));\n}\nexports.styles = styles;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Ratio between font size and font height. The number comes from jspdf's source code\n */\nexports.FONT_ROW_RATIO = 1.15;\nvar state_1 = __webpack_require__(0);\nfunction defaultConfig() {\n    return {\n        // Html content\n        html: null,\n        // Custom content\n        head: null,\n        body: null,\n        foot: null,\n        // Properties\n        includeHiddenHtml: false,\n        startY: null,\n        margin: 40 / state_1.default().scaleFactor(),\n        pageBreak: 'auto',\n        rowPageBreak: 'auto',\n        tableWidth: 'auto',\n        showHead: 'everyPage',\n        showFoot: 'everyPage',\n        tableLineWidth: 0,\n        tableLineColor: 200,\n        tableId: null,\n        // Styling\n        theme: 'striped',\n        useCss: false,\n        styles: {},\n        headStyles: {},\n        bodyStyles: {},\n        footStyles: {},\n        alternateRowStyles: {},\n        columnStyles: {},\n        // Hooks\n        // Use to change the content of the cell before width calculations etc are performed\n        didParseCell: function (data) { },\n        willDrawCell: function (data) { },\n        // Use to draw additional content such as images in table cells\n        didDrawCell: function (data) { },\n        // Use to draw additional content to each page such as headers and footers\n        didDrawPage: function (data) { },\n    };\n}\nexports.defaultConfig = defaultConfig;\n// Base style for all themes\nfunction defaultStyles() {\n    return {\n        font: 'helvetica',\n        fontStyle: 'normal',\n        overflow: 'linebreak',\n        fillColor: false,\n        textColor: 20,\n        halign: 'left',\n        valign: 'top',\n        fontSize: 10,\n        cellPadding: 5 / state_1.default().scaleFactor(),\n        lineColor: 200,\n        lineWidth: 0 / state_1.default().scaleFactor(),\n        cellWidth: 'auto',\n        minCellHeight: 0,\n    };\n}\nexports.defaultStyles = defaultStyles;\n/**\n * Styles for the themes (overriding the default styles)\n */\nfunction getTheme(name) {\n    var themes = {\n        striped: {\n            table: { fillColor: 255, textColor: 80, fontStyle: 'normal' },\n            head: { textColor: 255, fillColor: [41, 128, 185], fontStyle: 'bold' },\n            body: {},\n            foot: { textColor: 255, fillColor: [41, 128, 185], fontStyle: 'bold' },\n            alternateRow: { fillColor: 245 },\n        },\n        grid: {\n            table: {\n                fillColor: 255,\n                textColor: 80,\n                fontStyle: 'normal',\n                lineWidth: 0.1,\n            },\n            head: {\n                textColor: 255,\n                fillColor: [26, 188, 156],\n                fontStyle: 'bold',\n                lineWidth: 0,\n            },\n            body: {},\n            foot: {\n                textColor: 255,\n                fillColor: [26, 188, 156],\n                fontStyle: 'bold',\n                lineWidth: 0,\n            },\n            alternateRow: {},\n        },\n        plain: {\n            head: { fontStyle: 'bold' },\n            foot: { fontStyle: 'bold' },\n        },\n    };\n    return themes[name];\n}\nexports.getTheme = getTheme;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/*\n * Include common small polyfills instead of requiring the user to to do it\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nfunction assign(target) {\n    'use strict';\n    var varArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        varArgs[_i - 1] = arguments[_i];\n    }\n    if (target == null) {\n        // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var to = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n        if (nextSource != null) {\n            // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                    to[nextKey] = nextSource[nextKey];\n                }\n            }\n        }\n    }\n    return to;\n}\nexports.assign = assign;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = __webpack_require__(2);\nvar state_1 = __webpack_require__(0);\nvar HookData_1 = __webpack_require__(10);\nvar common_1 = __webpack_require__(1);\nvar assign = __webpack_require__(5);\nvar CellHooks = /** @class */ (function () {\n    function CellHooks() {\n        this.didParseCell = [];\n        this.willDrawCell = [];\n        this.didDrawCell = [];\n        this.didDrawPage = [];\n    }\n    return CellHooks;\n}());\nvar Table = /** @class */ (function () {\n    function Table() {\n        this.columns = [];\n        this.head = [];\n        this.body = [];\n        this.foot = [];\n        this.height = 0;\n        this.width = 0;\n        this.preferredWidth = 0;\n        this.wrappedWidth = 0;\n        this.minWidth = 0;\n        this.headHeight = 0;\n        this.footHeight = 0;\n        this.startPageNumber = 1;\n        this.pageNumber = 1;\n        // Deprecated, use pageNumber instead\n        // Not using getter since:\n        // https://github.com/simonbengtsson/jsPDF-AutoTable/issues/596\n        this.pageCount = 1;\n        this.styles = {\n            styles: {},\n            headStyles: {},\n            bodyStyles: {},\n            footStyles: {},\n            alternateRowStyles: {},\n            columnStyles: {},\n        };\n        this.cellHooks = new CellHooks();\n    }\n    Table.prototype.allRows = function () {\n        return this.head.concat(this.body).concat(this.foot);\n    };\n    Table.prototype.callCellHooks = function (handlers, cell, row, column) {\n        for (var _i = 0, handlers_1 = handlers; _i < handlers_1.length; _i++) {\n            var handler = handlers_1[_i];\n            if (handler(new HookData_1.CellHookData(cell, row, column)) === false) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Table.prototype.callEndPageHooks = function () {\n        common_1.applyUserStyles();\n        for (var _i = 0, _a = this.cellHooks.didDrawPage; _i < _a.length; _i++) {\n            var handler = _a[_i];\n            handler(new HookData_1.HookData());\n        }\n    };\n    Table.prototype.margin = function (side) {\n        return common_1.marginOrPadding(this.settings.margin, config_1.defaultConfig().margin)[side];\n    };\n    return Table;\n}());\nexports.Table = Table;\nvar Row = /** @class */ (function () {\n    function Row(raw, index, section) {\n        this.cells = {};\n        this.height = 0;\n        this.maxCellHeight = 0;\n        this.spansMultiplePages = false;\n        this.raw = raw;\n        if (raw._element) {\n            this.raw = raw._element;\n        }\n        this.index = index;\n        this.section = section;\n    }\n    Row.prototype.canEntireRowFit = function (height) {\n        return this.maxCellHeight <= height;\n    };\n    Row.prototype.getMinimumRowHeight = function () {\n        var _this = this;\n        return state_1.default().table.columns.reduce(function (acc, column) {\n            var cell = _this.cells[column.index];\n            if (!cell)\n                return 0;\n            var fontHeight = (cell.styles.fontSize / state_1.default().scaleFactor()) * config_1.FONT_ROW_RATIO;\n            var vPadding = cell.padding('vertical');\n            var oneRowHeight = vPadding + fontHeight;\n            return oneRowHeight > acc ? oneRowHeight : acc;\n        }, 0);\n    };\n    return Row;\n}());\nexports.Row = Row;\nvar Cell = /** @class */ (function () {\n    function Cell(raw, themeStyles, section) {\n        this.contentHeight = 0;\n        this.contentWidth = 0;\n        this.wrappedWidth = 0;\n        this.minWidth = 0;\n        this.textPos = {};\n        this.height = 0;\n        this.width = 0;\n        this.rowSpan = (raw && raw.rowSpan) || 1;\n        this.colSpan = (raw && raw.colSpan) || 1;\n        this.styles = assign(themeStyles, (raw && raw.styles) || {});\n        this.section = section;\n        var text;\n        var content = raw && raw.content != null ? raw.content : raw;\n        content = content && content.title != null ? content.title : content;\n        this.raw = raw && raw._element ? raw._element : raw;\n        // Stringify 0 and false, but not undefined or null\n        text = content != null ? '' + content : '';\n        var splitRegex = /\\r\\n|\\r|\\n/g;\n        this.text = text.split(splitRegex);\n    }\n    Cell.prototype.getContentHeight = function () {\n        var lineCount = Array.isArray(this.text) ? this.text.length : 1;\n        var fontHeight = (this.styles.fontSize / state_1.default().scaleFactor()) * config_1.FONT_ROW_RATIO;\n        return lineCount * fontHeight + this.padding('vertical');\n    };\n    Cell.prototype.padding = function (name) {\n        var padding = common_1.marginOrPadding(this.styles.cellPadding, common_1.styles([]).cellPadding);\n        if (name === 'vertical') {\n            return padding.top + padding.bottom;\n        }\n        else if (name === 'horizontal') {\n            return padding.left + padding.right;\n        }\n        else {\n            return padding[name];\n        }\n    };\n    return Cell;\n}());\nexports.Cell = Cell;\nvar Column = /** @class */ (function () {\n    function Column(dataKey, raw, index) {\n        this.preferredWidth = 0;\n        this.minWidth = 0;\n        this.wrappedWidth = 0;\n        this.width = 0;\n        this.dataKey = dataKey;\n        this.raw = raw;\n        this.index = index;\n    }\n    return Column;\n}());\nexports.Column = Column;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cssParser_1 = __webpack_require__(13);\nvar state_1 = __webpack_require__(0);\nfunction parseHtml(input, includeHiddenHtml, useCss) {\n    if (includeHiddenHtml === void 0) { includeHiddenHtml = false; }\n    if (useCss === void 0) { useCss = false; }\n    var tableElement;\n    if (typeof input === 'string') {\n        tableElement = window.document.querySelector(input);\n    }\n    else {\n        tableElement = input;\n    }\n    if (!tableElement) {\n        console.error('Html table could not be found with input: ', input);\n        return;\n    }\n    var head = parseTableSection(window, tableElement.tHead, includeHiddenHtml, useCss);\n    var body = [];\n    for (var i = 0; i < tableElement.tBodies.length; i++) {\n        body = body.concat(parseTableSection(window, tableElement.tBodies[i], includeHiddenHtml, useCss));\n    }\n    var foot = parseTableSection(window, tableElement.tFoot, includeHiddenHtml, useCss);\n    return { head: head, body: body, foot: foot };\n}\nexports.parseHtml = parseHtml;\nfunction parseTableSection(window, sectionElement, includeHidden, useCss) {\n    var results = [];\n    if (!sectionElement) {\n        return results;\n    }\n    for (var i = 0; i < sectionElement.rows.length; i++) {\n        var row = sectionElement.rows[i];\n        var resultRow = [];\n        var rowStyles = useCss\n            ? cssParser_1.parseCss(row, state_1.default().scaleFactor(), [\n                'cellPadding',\n                'lineWidth',\n                'lineColor',\n            ])\n            : {};\n        for (var i_1 = 0; i_1 < row.cells.length; i_1++) {\n            var cell = row.cells[i_1];\n            var style = window.getComputedStyle(cell);\n            if (includeHidden || style.display !== 'none') {\n                var cellStyles = useCss ? cssParser_1.parseCss(cell, state_1.default().scaleFactor()) : {};\n                resultRow.push({\n                    rowSpan: cell.rowSpan,\n                    colSpan: cell.colSpan,\n                    styles: useCss ? cellStyles : null,\n                    _element: cell,\n                    content: parseCellContent(cell),\n                });\n            }\n        }\n        if (resultRow.length > 0 &&\n            (includeHidden || rowStyles.display !== 'none')) {\n            resultRow._element = row;\n            results.push(resultRow);\n        }\n    }\n    return results;\n}\nfunction parseCellContent(orgCell) {\n    // Work on cloned node to make sure no changes are applied to html table\n    var cell = orgCell.cloneNode(true);\n    // Remove extra space and line breaks in markup to make it more similar to\n    // what would be shown in html\n    cell.innerHTML = cell.innerHTML.replace(/\\n/g, '').replace(/ +/g, ' ');\n    // Preserve <br> tags as line breaks in the pdf\n    cell.innerHTML = cell.innerHTML\n        .split('<br>')\n        .map(function (part) { return part.trim(); })\n        .join('\\n');\n    // innerText for ie\n    return cell.innerText || cell.textContent || '';\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tableDrawer_1 = __webpack_require__(9);\nvar widthCalculator_1 = __webpack_require__(11);\nvar inputParser_1 = __webpack_require__(12);\nvar state_1 = __webpack_require__(0);\n__webpack_require__(15);\nvar common_1 = __webpack_require__(1);\nvar htmlParser_1 = __webpack_require__(6);\nvar jsPDF = __webpack_require__(7);\nfunction autoTable() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    state_1.setupState(this);\n    // 1. Parse and unify user input\n    var table = inputParser_1.parseInput(args);\n    // 2. Calculate preliminary table, column, row and cell dimensions\n    widthCalculator_1.calculateWidths(table);\n    // 3. Output table to pdf\n    tableDrawer_1.drawTable(table);\n    table.finalY = table.cursor.y;\n    this.previousAutoTable = table;\n    this.lastAutoTable = table;\n    this.autoTable.previous = table; // Deprecated\n    common_1.applyUserStyles();\n    state_1.resetState();\n    return this;\n}\njsPDF.API.autoTable = autoTable;\n// Assign false to enable `doc.lastAutoTable.finalY || 40` sugar;\njsPDF.API.lastAutoTable = false;\njsPDF.API.previousAutoTable = false; // deprecated in v3\njsPDF.API.autoTable.previous = false; // deprecated in v3\njsPDF.API.autoTableSetDefaults = function (defaults) {\n    state_1.setDefaults(defaults, this);\n    return this;\n};\njsPDF.autoTableSetDefaults = function (defaults, doc) {\n    state_1.setDefaults(defaults, doc);\n    return this;\n};\njsPDF.API.autoTableHtmlToJson = function (tableElem, includeHiddenElements) {\n    includeHiddenElements = includeHiddenElements || false;\n    if (!tableElem || !(tableElem instanceof HTMLTableElement)) {\n        console.error('A HTMLTableElement has to be sent to autoTableHtmlToJson');\n        return null;\n    }\n    var _a = htmlParser_1.parseHtml(tableElem, includeHiddenElements, false), head = _a.head, body = _a.body, foot = _a.foot;\n    var firstRow = head[0] || body[0] || foot[0];\n    return { columns: firstRow, rows: body, data: body };\n};\n/**\n * @deprecated\n */\njsPDF.API.autoTableEndPosY = function () {\n    console.error('Use of deprecated function: autoTableEndPosY. Use doc.previousAutoTable.finalY instead.');\n    var prev = this.previousAutoTable;\n    if (prev.cursor && typeof prev.cursor.y === 'number') {\n        return prev.cursor.y;\n    }\n    else {\n        return 0;\n    }\n};\n/**\n * @deprecated\n */\njsPDF.API.autoTableAddPageContent = function (hook) {\n    console.error('Use of deprecated function: autoTableAddPageContent. Use jsPDF.autoTableSetDefaults({didDrawPage: () => {}}) instead.');\n    if (!jsPDF.API.autoTable.globalDefaults) {\n        jsPDF.API.autoTable.globalDefaults = {};\n    }\n    jsPDF.API.autoTable.globalDefaults.addPageContent = hook;\n    return this;\n};\n/**\n * @deprecated\n */\njsPDF.API.autoTableAddPage = function () {\n    console.error('Use of deprecated function: autoTableAddPage. Use doc.addPage()');\n    this.addPage();\n    return this;\n};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = __webpack_require__(2);\nvar common_1 = __webpack_require__(1);\nvar models_1 = __webpack_require__(4);\nvar state_1 = __webpack_require__(0);\nvar assign = __webpack_require__(5);\nfunction drawTable(table) {\n    var settings = table.settings;\n    table.cursor = {\n        x: table.margin('left'),\n        y: settings.startY == null ? table.margin('top') : settings.startY,\n    };\n    var minTableBottomPos = settings.startY +\n        table.margin('bottom') +\n        table.headHeight +\n        table.footHeight;\n    if (settings.pageBreak === 'avoid') {\n        minTableBottomPos += table.height;\n    }\n    if (settings.pageBreak === 'always' ||\n        (settings.startY != null &&\n            settings.startY !== false &&\n            minTableBottomPos > state_1.default().pageHeight())) {\n        nextPage(state_1.default().doc);\n        table.cursor.y = table.margin('top');\n    }\n    table.pageStartX = table.cursor.x;\n    table.pageStartY = table.cursor.y;\n    table.startPageNumber = state_1.default().pageNumber();\n    // An empty row used to cached cells those break through page\n    common_1.applyUserStyles();\n    if (settings.showHead === true ||\n        settings.showHead === 'firstPage' ||\n        settings.showHead === 'everyPage') {\n        table.head.forEach(function (row) { return printRow(row); });\n    }\n    common_1.applyUserStyles();\n    table.body.forEach(function (row, index) {\n        printFullRow(row, index === table.body.length - 1);\n    });\n    common_1.applyUserStyles();\n    if (settings.showFoot === true ||\n        settings.showFoot === 'lastPage' ||\n        settings.showFoot === 'everyPage') {\n        table.foot.forEach(function (row) { return printRow(row); });\n    }\n    common_1.addTableBorder();\n    table.callEndPageHooks();\n}\nexports.drawTable = drawTable;\nfunction getRemainingLineCount(cell, remainingPageSpace) {\n    var fontHeight = (cell.styles.fontSize / state_1.default().scaleFactor()) * config_1.FONT_ROW_RATIO;\n    var vPadding = cell.padding('vertical');\n    var remainingLines = Math.floor((remainingPageSpace - vPadding) / fontHeight);\n    return Math.max(0, remainingLines);\n}\nfunction modifyRowToFit(row, remainingPageSpace, table) {\n    var remainderRow = new models_1.Row(row.raw, -1, row.section);\n    remainderRow.spansMultiplePages = true;\n    row.spansMultiplePages = true;\n    row.height = 0;\n    row.maxCellHeight = 0;\n    for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {\n        var column = _a[_i];\n        var cell = row.cells[column.index];\n        if (!cell)\n            continue;\n        if (!Array.isArray(cell.text)) {\n            cell.text = [cell.text];\n        }\n        var remainderCell = new models_1.Cell(cell.raw, {}, cell.section);\n        remainderCell = assign(remainderCell, cell);\n        remainderCell.textPos = assign({}, cell.textPos);\n        remainderCell.text = [];\n        var remainingLineCount = getRemainingLineCount(cell, remainingPageSpace);\n        if (cell.text.length > remainingLineCount) {\n            remainderCell.text = cell.text.splice(remainingLineCount, cell.text.length);\n        }\n        cell.contentHeight = cell.getContentHeight();\n        if (cell.contentHeight > row.height) {\n            row.height = cell.contentHeight;\n            row.maxCellHeight = cell.contentHeight;\n        }\n        remainderCell.contentHeight = remainderCell.getContentHeight();\n        if (remainderCell.contentHeight > remainderRow.height) {\n            remainderRow.height = remainderCell.contentHeight;\n            remainderRow.maxCellHeight = remainderCell.contentHeight;\n        }\n        remainderRow.cells[column.index] = remainderCell;\n    }\n    for (var _b = 0, _c = table.columns; _b < _c.length; _b++) {\n        var column = _c[_b];\n        var remainderCell = remainderRow.cells[column.index];\n        if (remainderCell) {\n            remainderCell.height = remainderRow.height;\n        }\n        var cell = row.cells[column.index];\n        if (cell) {\n            cell.height = row.height;\n        }\n    }\n    return remainderRow;\n}\nfunction shouldPrintOnCurrentPage(row, remainingPageSpace, table) {\n    var pageHeight = state_1.default().pageHeight();\n    var marginHeight = table.margin('top') - table.margin('bottom');\n    var maxTableHeight = pageHeight - marginHeight;\n    var minRowFits = row.getMinimumRowHeight() < remainingPageSpace;\n    if (row.getMinimumRowHeight() > maxTableHeight) {\n        console.error(\"Will not be able to print row \" + row.index + \" correctly since it's minimum height is larger than page height\");\n        return true;\n    }\n    var rowHasRowSpanCell = table.columns.filter(function (column) {\n        var cell = row.cells[column.index];\n        if (!cell)\n            return false;\n        return cell.rowSpan > 1;\n    }).length > 0;\n    if (!minRowFits) {\n        return false;\n    }\n    var rowHigherThanPage = row.maxCellHeight > maxTableHeight;\n    if (rowHigherThanPage) {\n        if (rowHasRowSpanCell) {\n            console.error(\"The content of row \" + row.index + \" will not be drawn correctly since drawing rows with a height larger than the page height and has cells with rowspans is not supported.\");\n        }\n        return true;\n    }\n    if (rowHasRowSpanCell) {\n        // Currently a new page is required whenever a rowspan row don't fit a page.\n        return false;\n    }\n    if (table.settings.rowPageBreak === 'avoid') {\n        return false;\n    }\n    // In all other cases print the row on current page\n    return true;\n}\nfunction printFullRow(row, isLastRow) {\n    var table = state_1.default().table;\n    var remainingPageSpace = getRemainingPageSpace(isLastRow);\n    if (row.canEntireRowFit(remainingPageSpace)) {\n        printRow(row);\n    }\n    else {\n        if (shouldPrintOnCurrentPage(row, remainingPageSpace, table)) {\n            var remainderRow = modifyRowToFit(row, remainingPageSpace, table);\n            printRow(row);\n            addPage();\n            printFullRow(remainderRow, isLastRow);\n        }\n        else {\n            addPage();\n            printFullRow(row, isLastRow);\n        }\n    }\n}\nfunction printRow(row) {\n    var table = state_1.default().table;\n    table.cursor.x = table.margin('left');\n    row.y = table.cursor.y;\n    row.x = table.cursor.x;\n    for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {\n        var column = _a[_i];\n        var cell = row.cells[column.index];\n        if (!cell) {\n            table.cursor.x += column.width;\n            continue;\n        }\n        common_1.applyStyles(cell.styles);\n        cell.x = table.cursor.x;\n        cell.y = row.y;\n        if (cell.styles.valign === 'top') {\n            cell.textPos.y = table.cursor.y + cell.padding('top');\n        }\n        else if (cell.styles.valign === 'bottom') {\n            cell.textPos.y = table.cursor.y + cell.height - cell.padding('bottom');\n        }\n        else {\n            cell.textPos.y = table.cursor.y + cell.height / 2;\n        }\n        if (cell.styles.halign === 'right') {\n            cell.textPos.x = cell.x + cell.width - cell.padding('right');\n        }\n        else if (cell.styles.halign === 'center') {\n            cell.textPos.x = cell.x + cell.width / 2;\n        }\n        else {\n            cell.textPos.x = cell.x + cell.padding('left');\n        }\n        if (table.callCellHooks(table.cellHooks.willDrawCell, cell, row, column) ===\n            false) {\n            table.cursor.x += column.width;\n            continue;\n        }\n        var fillStyle = common_1.getFillStyle(cell.styles);\n        if (fillStyle) {\n            state_1.default().doc.rect(cell.x, table.cursor.y, cell.width, cell.height, fillStyle);\n        }\n        state_1.default().doc.autoTableText(cell.text, cell.textPos.x, cell.textPos.y, {\n            halign: cell.styles.halign,\n            valign: cell.styles.valign,\n            maxWidth: Math.ceil(cell.width - cell.padding('left') - cell.padding('right')),\n        });\n        table.callCellHooks(table.cellHooks.didDrawCell, cell, row, column);\n        table.cursor.x += column.width;\n    }\n    table.cursor.y += row.height;\n}\nfunction getRemainingPageSpace(isLastRow) {\n    var table = state_1.default().table;\n    var bottomContentHeight = table.margin('bottom');\n    var showFoot = table.settings.showFoot;\n    if (showFoot === true ||\n        showFoot === 'everyPage' ||\n        (showFoot === 'lastPage' && isLastRow)) {\n        bottomContentHeight += table.footHeight;\n    }\n    return state_1.default().pageHeight() - table.cursor.y - bottomContentHeight;\n}\nfunction addPage() {\n    var table = state_1.default().table;\n    common_1.applyUserStyles();\n    if (table.settings.showFoot === true ||\n        table.settings.showFoot === 'everyPage') {\n        table.foot.forEach(function (row) { return printRow(row); });\n    }\n    table.finalY = table.cursor.y;\n    // Add user content just before adding new page ensure it will\n    // be drawn above other things on the page\n    table.callEndPageHooks();\n    common_1.addTableBorder();\n    nextPage(state_1.default().doc);\n    table.pageNumber++;\n    table.pageCount++;\n    table.cursor = { x: table.margin('left'), y: table.margin('top') };\n    table.pageStartX = table.cursor.x;\n    table.pageStartY = table.cursor.y;\n    if (table.settings.showHead === true ||\n        table.settings.showHead === 'everyPage') {\n        table.head.forEach(function (row) { return printRow(row); });\n    }\n}\nexports.addPage = addPage;\nfunction nextPage(doc) {\n    var current = state_1.default().pageNumber();\n    doc.setPage(current + 1);\n    var newCurrent = state_1.default().pageNumber();\n    if (newCurrent === current) {\n        doc.addPage();\n    }\n}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar state_1 = __webpack_require__(0);\nvar HookData = /** @class */ (function () {\n    function HookData() {\n        var table = state_1.default().table;\n        this.table = table;\n        this.pageNumber = table.pageNumber;\n        this.pageCount = this.pageNumber;\n        this.settings = table.settings;\n        this.cursor = table.cursor;\n        this.doc = state_1.default().doc;\n    }\n    return HookData;\n}());\nexports.HookData = HookData;\nvar CellHookData = /** @class */ (function (_super) {\n    __extends(CellHookData, _super);\n    function CellHookData(cell, row, column) {\n        var _this = _super.call(this) || this;\n        _this.cell = cell;\n        _this.row = row;\n        _this.column = column;\n        _this.section = row.section;\n        return _this;\n    }\n    return CellHookData;\n}(HookData));\nexports.CellHookData = CellHookData;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = __webpack_require__(1);\nvar state_1 = __webpack_require__(0);\n/**\n * Calculate the column widths\n */\nfunction calculateWidths(table) {\n    var columnMinWidth = 10 / state_1.default().scaleFactor();\n    if (columnMinWidth * table.columns.length > table.width) {\n        console.error('Columns could not fit on page');\n    }\n    else if (table.minWidth > table.width) {\n        // Would be nice to improve the user experience of this\n        console.error(\"Column widths too wide and can't fit page\");\n    }\n    var copy = table.columns.slice(0);\n    distributeWidth(copy, table.width, table.wrappedWidth);\n    applyColSpans(table);\n    fitContent(table);\n    applyRowSpans(table);\n}\nexports.calculateWidths = calculateWidths;\nfunction applyRowSpans(table) {\n    var rowSpanCells = {};\n    var colRowSpansLeft = 1;\n    var all = table.allRows();\n    for (var rowIndex = 0; rowIndex < all.length; rowIndex++) {\n        var row = all[rowIndex];\n        for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            var data = rowSpanCells[column.index];\n            if (colRowSpansLeft > 1) {\n                colRowSpansLeft--;\n                delete row.cells[column.index];\n            }\n            else if (data) {\n                data.cell.height += row.height;\n                if (data.cell.height > row.maxCellHeight) {\n                    data.row.maxCellHeight = data.cell.height;\n                }\n                colRowSpansLeft = data.cell.colSpan;\n                delete row.cells[column.index];\n                data.left--;\n                if (data.left <= 1) {\n                    delete rowSpanCells[column.index];\n                }\n            }\n            else {\n                var cell = row.cells[column.index];\n                if (!cell) {\n                    continue;\n                }\n                cell.height = row.height;\n                if (cell.rowSpan > 1) {\n                    var remaining = all.length - rowIndex;\n                    var left = cell.rowSpan > remaining ? remaining : cell.rowSpan;\n                    rowSpanCells[column.index] = { cell: cell, left: left, row: row };\n                }\n            }\n        }\n        if (row.section === 'head') {\n            table.headHeight += row.maxCellHeight;\n        }\n        if (row.section === 'foot') {\n            table.footHeight += row.maxCellHeight;\n        }\n        table.height += row.height;\n    }\n}\nfunction applyColSpans(table) {\n    var all = table.allRows();\n    for (var rowIndex = 0; rowIndex < all.length; rowIndex++) {\n        var row = all[rowIndex];\n        var colSpanCell = null;\n        var combinedColSpanWidth = 0;\n        var colSpansLeft = 0;\n        for (var columnIndex = 0; columnIndex < table.columns.length; columnIndex++) {\n            var column = table.columns[columnIndex];\n            var cell = null;\n            // Width and colspan\n            colSpansLeft -= 1;\n            if (colSpansLeft > 1 && table.columns[columnIndex + 1]) {\n                combinedColSpanWidth += column.width;\n                delete row.cells[column.index];\n                continue;\n            }\n            else if (colSpanCell) {\n                cell = colSpanCell;\n                delete row.cells[column.index];\n                colSpanCell = null;\n            }\n            else {\n                cell = row.cells[column.index];\n                if (!cell)\n                    continue;\n                colSpansLeft = cell.colSpan;\n                combinedColSpanWidth = 0;\n                if (cell.colSpan > 1) {\n                    colSpanCell = cell;\n                    combinedColSpanWidth += column.width;\n                    continue;\n                }\n            }\n            cell.width = column.width + combinedColSpanWidth;\n        }\n    }\n}\nfunction fitContent(table) {\n    var rowSpanHeight = { count: 0, height: 0 };\n    for (var _i = 0, _a = table.allRows(); _i < _a.length; _i++) {\n        var row = _a[_i];\n        for (var _b = 0, _c = table.columns; _b < _c.length; _b++) {\n            var column = _c[_b];\n            var cell = row.cells[column.index];\n            if (!cell)\n                continue;\n            common_1.applyStyles(cell.styles);\n            var textSpace = cell.width - cell.padding('horizontal');\n            if (cell.styles.overflow === 'linebreak') {\n                // Add one pt to textSpace to fix rounding error\n                cell.text = state_1.default().doc.splitTextToSize(cell.text, textSpace + 1 / (state_1.default().scaleFactor() || 1), { fontSize: cell.styles.fontSize });\n            }\n            else if (cell.styles.overflow === 'ellipsize') {\n                cell.text = common_1.ellipsize(cell.text, textSpace, cell.styles);\n            }\n            else if (cell.styles.overflow === 'hidden') {\n                cell.text = common_1.ellipsize(cell.text, textSpace, cell.styles, '');\n            }\n            else if (typeof cell.styles.overflow === 'function') {\n                cell.text = cell.styles.overflow(cell.text, textSpace);\n            }\n            cell.contentHeight = cell.getContentHeight();\n            if (cell.styles.minCellHeight > cell.contentHeight) {\n                cell.contentHeight = cell.styles.minCellHeight;\n            }\n            var realContentHeight = cell.contentHeight / cell.rowSpan;\n            if (cell.rowSpan > 1 &&\n                rowSpanHeight.count * rowSpanHeight.height <\n                    realContentHeight * cell.rowSpan) {\n                rowSpanHeight = { height: realContentHeight, count: cell.rowSpan };\n            }\n            else if (rowSpanHeight && rowSpanHeight.count > 0) {\n                if (rowSpanHeight.height > realContentHeight) {\n                    realContentHeight = rowSpanHeight.height;\n                }\n            }\n            if (realContentHeight > row.height) {\n                row.height = realContentHeight;\n                row.maxCellHeight = realContentHeight;\n            }\n        }\n        rowSpanHeight.count--;\n    }\n}\nfunction distributeWidth(autoColumns, availableSpace, wrappedAutoColumnsWidth) {\n    var diffWidth = availableSpace - wrappedAutoColumnsWidth;\n    for (var i = 0; i < autoColumns.length; i++) {\n        var column = autoColumns[i];\n        var ratio = column.wrappedWidth / wrappedAutoColumnsWidth;\n        var suggestedChange = diffWidth * ratio;\n        var suggestedWidth = column.wrappedWidth + suggestedChange;\n        var hasCustomWidth = false;\n        for (var _i = 0, _a = state_1.default().table.allRows(); _i < _a.length; _i++) {\n            var row = _a[_i];\n            var cell = row.cells[column.index];\n            if (cell && typeof cell.styles.cellWidth === 'number') {\n                hasCustomWidth = true;\n                break;\n            }\n        }\n        if (suggestedWidth < column.minWidth || hasCustomWidth) {\n            // Add 1 to minWidth as linebreaks calc otherwise sometimes made two rows\n            column.width = column.minWidth + 1 / state_1.default().scaleFactor();\n            wrappedAutoColumnsWidth -= column.wrappedWidth;\n            availableSpace -= column.width;\n            autoColumns.splice(i, 1);\n            distributeWidth(autoColumns, availableSpace, wrappedAutoColumnsWidth);\n            break;\n        }\n        column.width = suggestedWidth;\n    }\n}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar models_1 = __webpack_require__(4);\nvar config_1 = __webpack_require__(2);\nvar htmlParser_1 = __webpack_require__(6);\nvar polyfills_1 = __webpack_require__(3);\nvar common_1 = __webpack_require__(1);\nvar state_1 = __webpack_require__(0);\nvar inputValidator_1 = __webpack_require__(14);\n/**\n * Create models from the user input\n */\nfunction parseInput(args) {\n    var tableOptions = parseUserArguments(args);\n    var globalOptions = state_1.getGlobalOptions();\n    var documentOptions = state_1.getDocumentOptions();\n    var allOptions = [globalOptions, documentOptions, tableOptions];\n    inputValidator_1.default(allOptions);\n    var table = new models_1.Table();\n    state_1.default().table = table;\n    table.id = tableOptions.tableId;\n    var doc = state_1.default().doc;\n    table.userStyles = {\n        // Setting to black for versions of jspdf without getTextColor\n        textColor: doc.getTextColor ? doc.getTextColor() : 0,\n        fontSize: doc.internal.getFontSize(),\n        fontStyle: doc.internal.getFont().fontStyle,\n        font: doc.internal.getFont().fontName,\n    };\n    var _loop_1 = function (styleProp) {\n        var styles = allOptions.map(function (opts) { return opts[styleProp] || {}; });\n        table.styles[styleProp] = polyfills_1.assign.apply(void 0, __spreadArrays([{}], styles));\n    };\n    // Merge styles one level deeper\n    for (var _i = 0, _a = Object.keys(table.styles); _i < _a.length; _i++) {\n        var styleProp = _a[_i];\n        _loop_1(styleProp);\n    }\n    // Append hooks\n    for (var _b = 0, allOptions_1 = allOptions; _b < allOptions_1.length; _b++) {\n        var opts = allOptions_1[_b];\n        for (var _c = 0, _d = Object.keys(table.cellHooks); _c < _d.length; _c++) {\n            var hookName = _d[_c];\n            if (opts && typeof opts[hookName] === 'function') {\n                table.cellHooks[hookName].push(opts[hookName]);\n            }\n        }\n    }\n    table.settings = polyfills_1.assign.apply(void 0, __spreadArrays([{}, config_1.defaultConfig()], allOptions));\n    table.settings.margin = common_1.marginOrPadding(table.settings.margin, config_1.defaultConfig().margin);\n    if (table.settings.theme === 'auto') {\n        table.settings.theme = table.settings.useCss ? 'plain' : 'striped';\n    }\n    if (table.settings.startY === false) {\n        delete table.settings.startY;\n    }\n    var previous = state_1.default().doc.previousAutoTable;\n    var isSamePageAsPrevious = previous &&\n        previous.startPageNumber + previous.pageNumber - 1 === state_1.default().pageNumber();\n    if (table.settings.startY == null && isSamePageAsPrevious) {\n        table.settings.startY = previous.finalY + 20 / state_1.default().scaleFactor();\n    }\n    var htmlContent = {};\n    if (table.settings.html) {\n        htmlContent =\n            htmlParser_1.parseHtml(table.settings.html, table.settings.includeHiddenHtml, table.settings.useCss) || {};\n    }\n    table.settings.head = htmlContent.head || table.settings.head || [];\n    table.settings.body = htmlContent.body || table.settings.body || [];\n    table.settings.foot = htmlContent.foot || table.settings.foot || [];\n    parseContent(table);\n    table.minWidth = table.columns.reduce(function (total, col) { return total + col.minWidth; }, 0);\n    table.wrappedWidth = table.columns.reduce(function (total, col) { return total + col.wrappedWidth; }, 0);\n    if (typeof table.settings.tableWidth === 'number') {\n        table.width = table.settings.tableWidth;\n    }\n    else if (table.settings.tableWidth === 'wrap') {\n        table.width = table.wrappedWidth;\n    }\n    else {\n        table.width =\n            state_1.default().pageWidth() - table.margin('left') - table.margin('right');\n    }\n    return table;\n}\nexports.parseInput = parseInput;\nfunction parseUserArguments(args) {\n    // Normal initialization on format doc.autoTable(options)\n    if (args.length === 1) {\n        return args[0];\n    }\n    else {\n        // Deprecated initialization on format doc.autoTable(columns, body, [options])\n        var opts = args[2] || {};\n        opts.body = args[1];\n        opts.columns = args[0];\n        opts.columns.forEach(function (col) {\n            // Support v2 title prop in v3\n            if (typeof col === 'object' && col.header == null) {\n                col.header = col.title;\n            }\n        });\n        return opts;\n    }\n}\nfunction parseContent(table) {\n    var settings = table.settings;\n    table.columns = getTableColumns(settings);\n    var _loop_2 = function (sectionName) {\n        var rowSpansLeftForColumn = {};\n        var sectionRows = settings[sectionName];\n        if (sectionRows.length === 0 &&\n            settings.columns &&\n            sectionName !== 'body') {\n            // If no head or foot is set, try generating one with content in columns\n            var sectionRow = generateSectionRowFromColumnData(table, sectionName);\n            if (sectionRow) {\n                sectionRows.push(sectionRow);\n            }\n        }\n        sectionRows.forEach(function (rawRow, rowIndex) {\n            var skippedRowForRowSpans = 0;\n            var row = new models_1.Row(rawRow, rowIndex, sectionName);\n            table[sectionName].push(row);\n            var colSpansAdded = 0;\n            var columnSpansLeft = 0;\n            for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                if (rowSpansLeftForColumn[column.index] == null ||\n                    rowSpansLeftForColumn[column.index].left === 0) {\n                    if (columnSpansLeft === 0) {\n                        var rawCell = void 0;\n                        if (Array.isArray(rawRow)) {\n                            rawCell =\n                                rawRow[column.index - colSpansAdded - skippedRowForRowSpans];\n                        }\n                        else {\n                            rawCell = rawRow[column.dataKey];\n                        }\n                        var styles = cellStyles(sectionName, column, rowIndex);\n                        var cell = new models_1.Cell(rawCell, styles, sectionName);\n                        // dataKey is not used internally anymore but keep for backwards compat in hooks\n                        row.cells[column.dataKey] = cell;\n                        row.cells[column.index] = cell;\n                        columnSpansLeft = cell.colSpan - 1;\n                        rowSpansLeftForColumn[column.index] = {\n                            left: cell.rowSpan - 1,\n                            times: columnSpansLeft,\n                        };\n                    }\n                    else {\n                        columnSpansLeft--;\n                        colSpansAdded++;\n                    }\n                }\n                else {\n                    rowSpansLeftForColumn[column.index].left--;\n                    columnSpansLeft = rowSpansLeftForColumn[column.index].times;\n                    skippedRowForRowSpans++;\n                }\n            }\n        });\n    };\n    for (var _i = 0, _a = ['head', 'body', 'foot']; _i < _a.length; _i++) {\n        var sectionName = _a[_i];\n        _loop_2(sectionName);\n    }\n    table.allRows().forEach(function (row) {\n        for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            var cell = row.cells[column.index];\n            if (!cell)\n                continue;\n            table.callCellHooks(table.cellHooks.didParseCell, cell, row, column);\n            cell.contentWidth =\n                cell.padding('horizontal') + common_1.getStringWidth(cell.text, cell.styles);\n            if (typeof cell.styles.cellWidth === 'number') {\n                cell.minWidth = cell.styles.cellWidth;\n                cell.wrappedWidth = cell.styles.cellWidth;\n            }\n            else if (cell.styles.cellWidth === 'wrap') {\n                cell.minWidth = cell.contentWidth;\n                cell.wrappedWidth = cell.contentWidth;\n            }\n            else {\n                // auto\n                var defaultMinWidth = 10 / state_1.default().scaleFactor();\n                cell.minWidth = cell.styles.minCellWidth || defaultMinWidth;\n                cell.wrappedWidth = cell.contentWidth;\n                if (cell.minWidth > cell.wrappedWidth) {\n                    cell.wrappedWidth = cell.minWidth;\n                }\n            }\n        }\n    });\n    table.allRows().forEach(function (row) {\n        for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            var cell = row.cells[column.index];\n            // For now we ignore the minWidth and wrappedWidth of colspan cells when calculating colspan widths.\n            // Could probably be improved upon however.\n            if (cell && cell.colSpan === 1) {\n                if (cell.wrappedWidth > column.wrappedWidth) {\n                    column.wrappedWidth = cell.wrappedWidth;\n                }\n                if (cell.minWidth > column.minWidth) {\n                    column.minWidth = cell.minWidth;\n                }\n            }\n            else {\n                // Respect cellWidth set in columnStyles even if there is no cells for this column\n                // or of it the column only have colspan cells. Since the width of colspan cells\n                // does not affect the width of columns, setting columnStyles cellWidth enables the\n                // user to at least do it manually.\n                // Note that this is not perfect for now since for example row and table styles are\n                // not accounted for\n                var columnStyles = table.styles.columnStyles[column.dataKey] ||\n                    table.styles.columnStyles[column.index] ||\n                    {};\n                var cellWidth = columnStyles.cellWidth;\n                if (cellWidth && typeof cellWidth === 'number') {\n                    column.minWidth = cellWidth;\n                    column.wrappedWidth = cellWidth;\n                }\n            }\n            if (cell) {\n                // Make sure all columns get at least min width even though width calculations are not based on them\n                if (cell.colSpan > 1 && !column.minWidth) {\n                    column.minWidth = cell.minWidth;\n                }\n                if (cell.colSpan > 1 && !column.wrappedWidth) {\n                    column.wrappedWidth = cell.minWidth;\n                }\n                table.callCellHooks(table.cellHooks.didParseCell, cell, row, column);\n            }\n        }\n    });\n}\nfunction generateSectionRowFromColumnData(table, sectionName) {\n    var sectionRow = {};\n    table.columns.forEach(function (col) {\n        var columnData = col.raw;\n        if (sectionName === 'head') {\n            var val = columnData && columnData.header ? columnData.header : columnData;\n            if (val) {\n                sectionRow[col.dataKey] = val;\n            }\n        }\n        else if (sectionName === 'foot' && columnData.footer) {\n            sectionRow[col.dataKey] = columnData.footer;\n        }\n    });\n    return Object.keys(sectionRow).length > 0 ? sectionRow : null;\n}\nfunction getTableColumns(settings) {\n    if (settings.columns) {\n        var cols = settings.columns.map(function (input, index) {\n            var key = input.dataKey || input.key || index;\n            return new models_1.Column(key, input, index);\n        });\n        return cols;\n    }\n    else {\n        var firstRow_1 = settings.head[0] || settings.body[0] || settings.foot[0] || [];\n        var columns_1 = [];\n        Object.keys(firstRow_1)\n            .filter(function (key) { return key !== '_element'; })\n            .forEach(function (key) {\n            var colSpan = firstRow_1[key] && firstRow_1[key].colSpan ? firstRow_1[key].colSpan : 1;\n            for (var i = 0; i < colSpan; i++) {\n                var id = void 0;\n                if (Array.isArray(firstRow_1)) {\n                    id = columns_1.length;\n                }\n                else {\n                    id = key + (i > 0 ? \"_\" + i : '');\n                }\n                columns_1.push(new models_1.Column(id, id, columns_1.length));\n            }\n        });\n        return columns_1;\n    }\n}\nfunction cellStyles(sectionName, column, rowIndex) {\n    var table = state_1.default().table;\n    var theme = config_1.getTheme(table.settings.theme);\n    var otherStyles = [\n        theme.table,\n        theme[sectionName],\n        table.styles.styles,\n        table.styles[sectionName + \"Styles\"],\n    ];\n    var columnStyles = table.styles.columnStyles[column.dataKey] ||\n        table.styles.columnStyles[column.index] ||\n        {};\n    var colStyles = sectionName === 'body' ? columnStyles : {};\n    var rowStyles = sectionName === 'body' && rowIndex % 2 === 0\n        ? polyfills_1.assign({}, theme.alternateRow, table.styles.alternateRowStyles)\n        : {};\n    return polyfills_1.assign.apply(void 0, __spreadArrays([config_1.defaultStyles()], __spreadArrays(otherStyles, [rowStyles, colStyles])));\n}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Limitations\n// - No support for border spacing\n// - No support for transparency\nvar common_1 = __webpack_require__(1);\nvar state_1 = __webpack_require__(0);\nfunction parseCss(element, scaleFactor, ignored) {\n    if (ignored === void 0) { ignored = []; }\n    var result = {};\n    var style = window.getComputedStyle(element);\n    function assign(name, value, accepted) {\n        if (accepted === void 0) { accepted = []; }\n        if ((accepted.length === 0 || accepted.indexOf(value) !== -1) &&\n            ignored.indexOf(name) === -1) {\n            if (value === 0 || value) {\n                result[name] = value;\n            }\n        }\n    }\n    var pxScaleFactor = 96 / 72;\n    assign('fillColor', parseColor(element, 'backgroundColor'));\n    assign('fontStyle', parseFontStyle(style));\n    assign('textColor', parseColor(element, 'color'));\n    assign('halign', style.textAlign, ['left', 'right', 'center', 'justify']);\n    assign('valign', style.verticalAlign, ['middle', 'bottom', 'top']);\n    assign('fontSize', parseInt(style.fontSize || '') / pxScaleFactor);\n    assign('cellPadding', parsePadding([\n        style.paddingTop,\n        style.paddingRight,\n        style.paddingBottom,\n        style.paddingLeft,\n    ], style.fontSize, style.lineHeight, scaleFactor));\n    // style.borderWidth only works in chrome (borderTopWidth etc works in firefox and ie as well)\n    assign('lineWidth', parseInt(style.borderTopWidth || '') / pxScaleFactor / scaleFactor);\n    assign('lineColor', parseColor(element, 'borderTopColor'));\n    var font = (style.fontFamily || '').toLowerCase();\n    if (state_1.default().doc.getFontList()[font]) {\n        assign('font', font);\n    }\n    return result;\n}\nexports.parseCss = parseCss;\nfunction parseFontStyle(style) {\n    var res = '';\n    if (style.fontWeight === 'bold' ||\n        style.fontWeight === 'bolder' ||\n        parseInt(style.fontWeight) >= 700) {\n        res += 'bold';\n    }\n    if (style.fontStyle === 'italic' || style.fontStyle === 'oblique') {\n        res += 'italic';\n    }\n    return res;\n}\nfunction parseColor(element, colorProp) {\n    var cssColor = realColor(element, colorProp);\n    if (!cssColor)\n        return null;\n    var rgba = cssColor.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d*\\.?\\d*))?\\)$/);\n    if (!rgba || !Array.isArray(rgba)) {\n        return null;\n    }\n    var color = [parseInt(rgba[1]), parseInt(rgba[2]), parseInt(rgba[3])];\n    var alpha = parseInt(rgba[4]);\n    if (alpha === 0 || isNaN(color[0]) || isNaN(color[1]) || isNaN(color[2])) {\n        return null;\n    }\n    return color;\n}\nfunction realColor(elem, colorProp) {\n    if (!elem)\n        return null;\n    var bg = window.getComputedStyle(elem)[colorProp];\n    if (bg === 'rgba(0, 0, 0, 0)' ||\n        bg === 'transparent' ||\n        bg === 'initial' ||\n        bg === 'inherit') {\n        return realColor(elem.parentElement, colorProp);\n    }\n    else {\n        return bg;\n    }\n}\nfunction parsePadding(val, fontSize, lineHeight, scaleFactor) {\n    if (!val)\n        return null;\n    var pxScaleFactor = 96 / (72 / scaleFactor);\n    var linePadding = (parseInt(lineHeight) - parseInt(fontSize)) / scaleFactor / 2;\n    var padding = val.map(function (n) {\n        return parseInt(n) / pxScaleFactor;\n    });\n    padding = common_1.marginOrPadding(padding, 0);\n    if (linePadding > padding.top) {\n        padding.top = linePadding;\n    }\n    if (linePadding > padding.bottom) {\n        padding.bottom = linePadding;\n    }\n    return padding;\n}\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = __webpack_require__(1);\nfunction default_1(allOptions) {\n    var _loop_1 = function (settings) {\n        if (settings && typeof settings !== 'object') {\n            console.error('The options parameter should be of type object, is: ' + typeof settings);\n        }\n        if (typeof settings.extendWidth !== 'undefined') {\n            settings.tableWidth = settings.extendWidth ? 'auto' : 'wrap';\n            console.error('Use of deprecated option: extendWidth, use tableWidth instead.');\n        }\n        if (typeof settings.margins !== 'undefined') {\n            if (typeof settings.margin === 'undefined')\n                settings.margin = settings.margins;\n            console.error('Use of deprecated option: margins, use margin instead.');\n        }\n        if (settings.startY && typeof settings.startY !== 'number') {\n            console.error('Invalid value for startY option', settings.startY);\n            delete settings.startY;\n        }\n        if (!settings.didDrawPage &&\n            (settings.afterPageContent ||\n                settings.beforePageContent ||\n                settings.afterPageAdd)) {\n            console.error('The afterPageContent, beforePageContent and afterPageAdd hooks are deprecated. Use didDrawPage instead');\n            settings.didDrawPage = function (data) {\n                common_1.applyUserStyles();\n                if (settings.beforePageContent)\n                    settings.beforePageContent(data);\n                common_1.applyUserStyles();\n                if (settings.afterPageContent)\n                    settings.afterPageContent(data);\n                common_1.applyUserStyles();\n                if (settings.afterPageAdd && data.pageNumber > 1) {\n                    data.afterPageAdd(data);\n                }\n                common_1.applyUserStyles();\n            };\n        }\n        ;\n        [\n            'createdHeaderCell',\n            'drawHeaderRow',\n            'drawRow',\n            'drawHeaderCell',\n        ].forEach(function (name) {\n            if (settings[name]) {\n                console.error(\"The \\\"\" + name + \"\\\" hook has changed in version 3.0, check the changelog for how to migrate.\");\n            }\n        });\n        [\n            ['showFoot', 'showFooter'],\n            ['showHead', 'showHeader'],\n            ['didDrawPage', 'addPageContent'],\n            ['didParseCell', 'createdCell'],\n            ['headStyles', 'headerStyles'],\n        ].forEach(function (_a) {\n            var current = _a[0], deprecated = _a[1];\n            if (settings[deprecated]) {\n                console.error(\"Use of deprecated option \" + deprecated + \". Use \" + current + \" instead\");\n                settings[current] = settings[deprecated];\n            }\n        });\n        [\n            ['padding', 'cellPadding'],\n            ['lineHeight', 'rowHeight'],\n            'fontSize',\n            'overflow',\n        ].forEach(function (o) {\n            var deprecatedOption = typeof o === 'string' ? o : o[0];\n            var style = typeof o === 'string' ? o : o[1];\n            if (typeof settings[deprecatedOption] !== 'undefined') {\n                if (typeof settings.styles[style] === 'undefined') {\n                    settings.styles[style] = settings[deprecatedOption];\n                }\n                console.error('Use of deprecated option: ' +\n                    deprecatedOption +\n                    ', use the style ' +\n                    style +\n                    ' instead.');\n            }\n        });\n        for (var _i = 0, _a = [\n            'styles',\n            'bodyStyles',\n            'headStyles',\n            'footStyles',\n        ]; _i < _a.length; _i++) {\n            var styleProp = _a[_i];\n            checkStyles(settings[styleProp] || {});\n        }\n        var columnStyles = settings['columnStyles'] || {};\n        for (var _b = 0, _c = Object.keys(columnStyles); _b < _c.length; _b++) {\n            var key = _c[_b];\n            checkStyles(columnStyles[key] || {});\n        }\n    };\n    for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\n        var settings = allOptions_1[_i];\n        _loop_1(settings);\n    }\n}\nexports.default = default_1;\nfunction checkStyles(styles) {\n    if (styles.rowHeight) {\n        console.error('Use of deprecated style rowHeight. It is renamed to minCellHeight.');\n        if (!styles.minCellHeight) {\n            styles.minCellHeight = styles.rowHeight;\n        }\n    }\n    else if (styles.columnWidth) {\n        console.error('Use of deprecated style columnWidth. It is renamed to cellWidth.');\n        if (!styles.cellWidth) {\n            styles.cellWidth = styles.columnWidth;\n        }\n    }\n}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar jsPDF = __webpack_require__(7);\n/**\n * Improved text function with halign and valign support\n * Inspiration from: http://stackoverflow.com/questions/28327510/align-text-right-using-jspdf/28433113#28433113\n */\njsPDF.API.autoTableText = function (text, x, y, styles) {\n    styles = styles || {};\n    var FONT_ROW_RATIO = 1.15;\n    if (typeof x !== 'number' || typeof y !== 'number') {\n        console.error('The x and y parameters are required. Missing for text: ', text);\n    }\n    var k = this.internal.scaleFactor;\n    var fontSize = this.internal.getFontSize() / k;\n    var splitRegex = /\\r\\n|\\r|\\n/g;\n    var splitText = null;\n    var lineCount = 1;\n    if (styles.valign === 'middle' ||\n        styles.valign === 'bottom' ||\n        styles.halign === 'center' ||\n        styles.halign === 'right') {\n        splitText = typeof text === 'string' ? text.split(splitRegex) : text;\n        lineCount = splitText.length || 1;\n    }\n    // Align the top\n    y += fontSize * (2 - FONT_ROW_RATIO);\n    if (styles.valign === 'middle')\n        y -= (lineCount / 2) * fontSize * FONT_ROW_RATIO;\n    else if (styles.valign === 'bottom')\n        y -= lineCount * fontSize * FONT_ROW_RATIO;\n    if (styles.halign === 'center' || styles.halign === 'right') {\n        var alignSize = fontSize;\n        if (styles.halign === 'center')\n            alignSize *= 0.5;\n        if (lineCount >= 1) {\n            for (var iLine = 0; iLine < splitText.length; iLine++) {\n                this.text(splitText[iLine], x - this.getStringUnitWidth(splitText[iLine]) * alignSize, y);\n                y += fontSize * FONT_ROW_RATIO;\n            }\n            return this;\n        }\n        x -= this.getStringUnitWidth(text) * alignSize;\n    }\n    if (styles.halign === 'justify') {\n        this.text(text, x, y, {\n            maxWidth: styles.maxWidth || 100,\n            align: 'justify',\n        });\n    }\n    else {\n        this.text(text, x, y);\n    }\n    return this;\n};\n\n\n/***/ })\n/******/ ]);\n});"],"sourceRoot":"webpack:///","file":"jspdf-autotable-es5.js"}