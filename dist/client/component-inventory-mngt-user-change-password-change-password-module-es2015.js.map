{"version":3,"sources":["./node_modules/primeng/breadcrumb.js","./node_modules/primeng/components/breadcrumb/breadcrumb.js","./node_modules/primeng/components/password/password.js","./node_modules/primeng/password.js","./src/app/component/inventory-mngt/user/change-password/change-password.component.html","./src/app/component/inventory-mngt/user/change-password/change-password-routing.module.ts","./src/app/component/inventory-mngt/user/change-password/change-password.component.scss","./src/app/component/inventory-mngt/user/change-password/change-password.component.ts","./src/app/component/inventory-mngt/user/change-password/change-password.module.ts","./src/app/shared/validations/old-password-match.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sGAAoC,G;;;;;;;;;;;;ACNxC;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,oEAAe;AACpC,eAAe,mBAAO,CAAC,0EAAiB;AACxC,eAAe,mBAAO,CAAC,0EAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kbAAkb,kCAAkC,4cAA4c,YAAY,yGAAyG,kCAAkC,wqBAAwqB,kCAAkC,8TAA8T,YAAY,qQAAqQ,YAAY,6GAA6G,kCAAkC,8TAA8T,YAAY;AACrzF,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;AC3Ea;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,oEAAe;AACpC,eAAe,mBAAO,CAAC,0EAAiB;AACxC,mBAAmB,mBAAO,CAAC,8EAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;;;;;;AC9NA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8FAAgC,G;;;;;;;;;;;;ACNjD;AAAe,4EAAa,6BAA6B,oKAAoK,wvFAAwvF,8LAA8L,2nB;;;;;;;;;;;;;;;;;;;ACA1mG;AACc;AACe;AAGtE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,kFAAuB,EAAC;CAC5C,CAAC;AAMF,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;CAAI;AAA/B,2BAA2B;IAJvC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,2BAA2B,CAAI;AAAJ;;;;;;;;;;;;;ACbxC;AAAe,6GAA8C,+M;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AACkB;AACL;AACa;AACnC;AAC6B;AACG;AACT;AAQhE,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAKlC,YAAoB,IAAsB,EAAU,GAAgB,EAAU,cAA8B,EAAS,MAAc,EAAU,mBAAwC,EAC5K,cAA8B;QADnB,SAAI,GAAJ,IAAI,CAAkB;QAAU,QAAG,GAAH,GAAG,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QAC5K,mBAAc,GAAd,cAAc,CAAgB;QAIrC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACvC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACzC,QAAQ,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAClC,YAAY,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACtC,eAAe,EAAE,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACzC,kBAAkB,EAAC,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,EAAC,yDAAU,CAAC,QAAQ,CAAC;SACnF,EAAE;YACD,SAAS,EAAE,CAAC,8FAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,EAAC,2FAAS,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;SACxH,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG;YACd,EAAC,KAAK,EAAC,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;oBAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,CAAC,CAAC;gBAAA,CAAC;aACrD;YACD;gBACE,KAAK,EAAE,iBAAiB;gBACxB,OAAO,EAAE,KAAK,CAAC,EAAE;oBACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iCAAiC,CAAC,CAAC,CAAC;gBAC5D,CAAC;aACF;SACF,CAAC;IACJ,CAAC;IAEM,aAAa;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC1D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACxD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;IACtB,iCAAiC;IACjC,gIAAgI;IAChI,yGAAyG;IACzG,mEAAmE;IACnE,SAAS;IACT,IAAI;IAEJ,oBAAoB;IACpB,iCAAiC;IACjC,kEAAkE;IAClE,yEAAyE;IACzE,iCAAiC;IACjC,4CAA4C;IAC5C,+BAA+B;IAC/B,8CAA8C;IAC9C,mGAAmG;IACnG,2EAA2E;IAC3E,oGAAoG;IACpG,eAAe;IACf,mCAAmC;IACnC,mGAAmG;IACnG,sFAAsF;IACtF,QAAQ;IACR,aAAa;IACb,MAAM;IAEN,IAAI;IAEJ,OAAO;QACL,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC7B,OAAO,EAAE,4GAA4G;YACrH,MAAM,EAAE,GAAG,EAAE;gBACT,wCAAwC;gBACxC,IAAI,CAAC,gBAAgB,EAAE;YAC3B,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAEC,cAAc;QACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACpC,IAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAC;YACjC,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,wBAAwB;YACxB,OAAO,KAAK,CAAC;SACd;QACD,8BAA8B;QAC9B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;aACtD,SAAS,CAAC,CAAC,IAAQ,EAAC,EAAE;YACrB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAC,SAAS,EAAE,OAAO,EAAC,UAAU,EAAE,MAAM,EAAC,gCAAgC,EAAC,CAAC,CAAC;YAC3G,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAC,OAAO,EAAE,OAAO,EAAC,OAAO,EAAE,MAAM,EAAC,qBAAqB,EAAC,CAAC,CAAC;QAC7F,CAAC,CAAC;IACJ,CAAC;CAGF;;YAnG2B,4EAAgB;YAAe,0DAAW;YAA0B,0DAAc;YAAiB,sDAAM;YAA+B,+DAAmB;YAC5J,6EAAc;;AAN5B,uBAAuB;IANnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,+QAA+C;QAE/C,SAAS,EAAC,CAAC,+DAAmB,CAAC;;KAChC,CAAC;2EAM0B,4EAAgB,EAAe,0DAAW,EAA0B,0DAAc,EAAiB,sDAAM,EAA+B,+DAAmB;QAC5J,6EAAc;GAN5B,uBAAuB,CAwGnC;AAxGmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfK;AACM;AAEgC;AACT;AAC5B;AACwB;AACd;AACN;AACA;AACI;AACI;AACM;AAChB;AACA;AACoB;AAChB;AACF;AAwB9C,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAAI;AAAxB,oBAAoB;IArBhC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,kFAAuB,CAAC;QACvC,OAAO,EAAE;YACP,4DAAY;YACZ,2FAA2B;YAC3B,uDAAU;YACV,0DAAW;YACX,iEAAe;YACf,2DAAY;YACZ,2DAAY;YACZ,gEAAc;YACd,oEAAgB;YAChB,0EAAmB;YACnB,0DAAW;YACX,0DAAW;YACX,kEAAmB;YACnB,8EAAqB;YACrB,8DAAa;YACb,gEAAc;SACf;KACF,CAAC;GACW,oBAAoB,CAAI;AAAJ;;;;;;;;;;;;;;;;;ACvCjC,kDAAkD;AAC3C,SAAS,QAAQ,CAAC,WAAmB,EAAE,mBAA2B;IACrE,OAAO,CAAC,SAAoB,EAAE,EAAE;QAC5B,MAAM,OAAO,GAAG,WAAW,CAAC;QAC5B,MAAM,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAEhE,IAAI,eAAe,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC5D,gFAAgF;YAChF,OAAO;SACV;QAED,mDAAmD;QACnD,IAAI,OAAO,KAAK,eAAe,CAAC,KAAK,EAAE;YACnC,eAAe,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAC9C,iCAAiC;SACpC;aAAM;YACH,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAChC,4CAA4C;SAC/C;IACL,CAAC;AACL,CAAC","file":"component-inventory-mngt-user-change-password-change-password-module-es2015.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/breadcrumb/breadcrumb\"));","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar router_1 = require(\"@angular/router\");\nvar Breadcrumb = /** @class */ (function () {\n    function Breadcrumb() {\n    }\n    Breadcrumb.prototype.itemClick = function (event, item) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        if (!item.url) {\n            event.preventDefault();\n        }\n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n    };\n    Breadcrumb.prototype.onHomeClick = function (event) {\n        if (this.home) {\n            this.itemClick(event, this.home);\n        }\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array)\n    ], Breadcrumb.prototype, \"model\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Breadcrumb.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Breadcrumb.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Breadcrumb.prototype, \"home\", void 0);\n    Breadcrumb = __decorate([\n        core_1.Component({\n            selector: 'p-breadcrumb',\n            template: \"\\n        <div [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-breadcrumb ui-widget ui-widget-header ui-helper-clearfix ui-corner-all'\\\">\\n            <ul>\\n                <li class=\\\"ui-breadcrumb-home\\\" *ngIf=\\\"home\\\">\\n                    <a *ngIf=\\\"!home.routerLink\\\" [href]=\\\"home.url||'#'\\\" class=\\\"ui-menuitem-link\\\" (click)=\\\"itemClick($event, home)\\\" \\n                        [ngClass]=\\\"{'ui-state-disabled':home.disabled}\\\" [attr.target]=\\\"home.target\\\" [attr.title]=\\\"home.title\\\" [attr.id]=\\\"home.id\\\"[attr.tabindex]=\\\"home.tabindex ? home.tabindex : '0'\\\">\\n                        <span [ngClass]=\\\"home.icon||'pi pi-home'\\\"></span>\\n                    </a>\\n                    <a *ngIf=\\\"home.routerLink\\\" [routerLink]=\\\"home.routerLink\\\" [queryParams]=\\\"home.queryParams\\\" [routerLinkActive]=\\\"'ui-state-active'\\\" [routerLinkActiveOptions]=\\\"home.routerLinkActiveOptions||{exact:false}\\\" class=\\\"ui-menuitem-link\\\" (click)=\\\"itemClick($event, home)\\\" \\n                        [ngClass]=\\\"{'ui-state-disabled':home.disabled}\\\" [attr.target]=\\\"home.target\\\" [attr.title]=\\\"home.title\\\" [attr.id]=\\\"home.id\\\" [attr.tabindex]=\\\"home.tabindex ? home.tabindex : '0'\\\">\\n                        <span [ngClass]=\\\"home.icon||'pi pi-home'\\\"></span>\\n                    </a>\\n                </li>\\n                <li class=\\\"ui-breadcrumb-chevron pi pi-chevron-right\\\" *ngIf=\\\"model&&home\\\"></li>\\n                <ng-template ngFor let-item let-end=\\\"last\\\" [ngForOf]=\\\"model\\\">\\n                    <li role=\\\"menuitem\\\">\\n                        <a *ngIf=\\\"!item.routerLink\\\" [href]=\\\"item.url||'#'\\\" class=\\\"ui-menuitem-link\\\" (click)=\\\"itemClick($event, item)\\\" \\n                            [ngClass]=\\\"{'ui-state-disabled':item.disabled}\\\" [attr.target]=\\\"item.target\\\" [attr.title]=\\\"item.title\\\" [attr.id]=\\\"item.id\\\" [attr.tabindex]=\\\"item.tabindex ? item.tabindex : '0'\\\">\\n                            <span *ngIf=\\\"item.icon\\\" class=\\\"ui-menuitem-icon\\\" [ngClass]=\\\"item.icon\\\"></span>\\n                            <span class=\\\"ui-menuitem-text\\\">{{item.label}}</span>\\n                        </a>\\n                        <a *ngIf=\\\"item.routerLink\\\" [routerLink]=\\\"item.routerLink\\\" [queryParams]=\\\"item.queryParams\\\" [routerLinkActive]=\\\"'ui-state-active'\\\"  [routerLinkActiveOptions]=\\\"item.routerLinkActiveOptions||{exact:false}\\\" class=\\\"ui-menuitem-link\\\" (click)=\\\"itemClick($event, item)\\\" \\n                            [ngClass]=\\\"{'ui-state-disabled':item.disabled}\\\" [attr.target]=\\\"item.target\\\" [attr.title]=\\\"item.title\\\" [attr.id]=\\\"item.id\\\" [attr.tabindex]=\\\"item.tabindex ? item.tabindex : '0'\\\">\\n                            <span *ngIf=\\\"item.icon\\\" class=\\\"ui-menuitem-icon\\\" [ngClass]=\\\"item.icon\\\"></span>\\n                            <span class=\\\"ui-menuitem-text\\\">{{item.label}}</span>\\n                        </a>\\n                    </li>\\n                    <li class=\\\"ui-breadcrumb-chevron pi pi-chevron-right\\\" *ngIf=\\\"!end\\\"></li>\\n                </ng-template>\\n            </ul>\\n        </div>\\n    \"\n        })\n    ], Breadcrumb);\n    return Breadcrumb;\n}());\nexports.Breadcrumb = Breadcrumb;\nvar BreadcrumbModule = /** @class */ (function () {\n    function BreadcrumbModule() {\n    }\n    BreadcrumbModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule, router_1.RouterModule],\n            exports: [Breadcrumb, router_1.RouterModule],\n            declarations: [Breadcrumb]\n        })\n    ], BreadcrumbModule);\n    return BreadcrumbModule;\n}());\nexports.BreadcrumbModule = BreadcrumbModule;\n//# sourceMappingURL=breadcrumb.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar Password = /** @class */ (function () {\n    function Password(el, zone) {\n        this.el = el;\n        this.zone = zone;\n        this.promptLabel = 'Enter a password';\n        this.weakLabel = 'Weak';\n        this.mediumLabel = 'Medium';\n        this.strongLabel = 'Strong';\n        this.feedback = true;\n    }\n    Object.defineProperty(Password.prototype, \"showPassword\", {\n        set: function (show) {\n            this.el.nativeElement.type = show ? 'text' : 'password';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Password.prototype.ngDoCheck = function () {\n        this.updateFilledState();\n    };\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    Password.prototype.onInput = function (e) {\n        this.updateFilledState();\n    };\n    Password.prototype.updateFilledState = function () {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    };\n    Password.prototype.createPanel = function () {\n        this.panel = document.createElement('div');\n        this.panel.className = 'ui-password-panel ui-widget ui-state-highlight ui-corner-all';\n        this.meter = document.createElement('div');\n        this.meter.className = 'ui-password-meter';\n        this.info = document.createElement('div');\n        this.info.className = 'ui-password-info';\n        this.info.textContent = this.promptLabel;\n        this.panel.appendChild(this.meter);\n        this.panel.appendChild(this.info);\n        this.panel.style.minWidth = domhandler_1.DomHandler.getOuterWidth(this.el.nativeElement) + 'px';\n        document.body.appendChild(this.panel);\n    };\n    Password.prototype.onFocus = function (e) {\n        var _this = this;\n        if (this.feedback) {\n            if (!this.panel) {\n                this.createPanel();\n            }\n            this.panel.style.zIndex = String(++domhandler_1.DomHandler.zindex);\n            this.zone.runOutsideAngular(function () {\n                setTimeout(function () {\n                    domhandler_1.DomHandler.addClass(_this.panel, 'ui-password-panel-visible');\n                    domhandler_1.DomHandler.removeClass(_this.panel, 'ui-password-panel-hidden');\n                }, 1);\n                domhandler_1.DomHandler.absolutePosition(_this.panel, _this.el.nativeElement);\n            });\n        }\n    };\n    Password.prototype.onBlur = function (e) {\n        var _this = this;\n        if (this.feedback) {\n            domhandler_1.DomHandler.addClass(this.panel, 'ui-password-panel-hidden');\n            domhandler_1.DomHandler.removeClass(this.panel, 'ui-password-panel-visible');\n            this.zone.runOutsideAngular(function () {\n                setTimeout(function () {\n                    _this.ngOnDestroy();\n                }, 150);\n            });\n        }\n    };\n    Password.prototype.onKeyup = function (e) {\n        if (this.feedback) {\n            var value = e.target.value, label = null, meterPos = null;\n            if (value.length === 0) {\n                label = this.promptLabel;\n                meterPos = '0px 0px';\n            }\n            else {\n                var score = this.testStrength(value);\n                if (score < 30) {\n                    label = this.weakLabel;\n                    meterPos = '0px -10px';\n                }\n                else if (score >= 30 && score < 80) {\n                    label = this.mediumLabel;\n                    meterPos = '0px -20px';\n                }\n                else if (score >= 80) {\n                    label = this.strongLabel;\n                    meterPos = '0px -30px';\n                }\n            }\n            this.meter.style.backgroundPosition = meterPos;\n            this.info.textContent = label;\n        }\n    };\n    Password.prototype.testStrength = function (str) {\n        var grade = 0;\n        var val;\n        val = str.match('[0-9]');\n        grade += this.normalize(val ? val.length : 1 / 4, 1) * 25;\n        val = str.match('[a-zA-Z]');\n        grade += this.normalize(val ? val.length : 1 / 2, 3) * 10;\n        val = str.match('[!@#$%^&*?_~.,;=]');\n        grade += this.normalize(val ? val.length : 1 / 6, 1) * 35;\n        val = str.match('[A-Z]');\n        grade += this.normalize(val ? val.length : 1 / 6, 1) * 30;\n        grade *= str.length / 8;\n        return grade > 100 ? 100 : grade;\n    };\n    Password.prototype.normalize = function (x, y) {\n        var diff = x - y;\n        if (diff <= 0)\n            return x / y;\n        else\n            return 1 + 0.5 * (x / (x + y / 4));\n    };\n    Object.defineProperty(Password.prototype, \"disabled\", {\n        get: function () {\n            return this.el.nativeElement.disabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Password.prototype.ngOnDestroy = function () {\n        if (this.panel) {\n            document.body.removeChild(this.panel);\n            this.panel = null;\n            this.meter = null;\n            this.info = null;\n        }\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Password.prototype, \"promptLabel\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Password.prototype, \"weakLabel\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Password.prototype, \"mediumLabel\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Password.prototype, \"strongLabel\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Password.prototype, \"feedback\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], Password.prototype, \"showPassword\", null);\n    __decorate([\n        core_1.HostListener('input', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Password.prototype, \"onInput\", null);\n    __decorate([\n        core_1.HostListener('focus', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Password.prototype, \"onFocus\", null);\n    __decorate([\n        core_1.HostListener('blur', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Password.prototype, \"onBlur\", null);\n    __decorate([\n        core_1.HostListener('keyup', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Password.prototype, \"onKeyup\", null);\n    Password = __decorate([\n        core_1.Directive({\n            selector: '[pPassword]',\n            host: {\n                '[class.ui-inputtext]': 'true',\n                '[class.ui-corner-all]': 'true',\n                '[class.ui-state-default]': 'true',\n                '[class.ui-widget]': 'true',\n                '[class.ui-state-filled]': 'filled'\n            }\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.NgZone])\n    ], Password);\n    return Password;\n}());\nexports.Password = Password;\nvar PasswordModule = /** @class */ (function () {\n    function PasswordModule() {\n    }\n    PasswordModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [Password],\n            declarations: [Password]\n        })\n    ], PasswordModule);\n    return PasswordModule;\n}());\nexports.PasswordModule = PasswordModule;\n//# sourceMappingURL=password.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/password/password\"));","export default \"<!-- <pre>{{ auth.getUserData() | json }}</pre> -->\\r\\n<p-toast position=\\\"top-right\\\"></p-toast>\\r\\n\\r\\n        <p-breadcrumb [model]=\\\"bradCrum\\\"></p-breadcrumb>\\r\\n        <div style=\\\"margin-top: 15px;\\\">\\r\\n\\r\\n<p-messages class=\\\"ui-g-12\\\" styleClass=\\\"loagin-wrapper\\\" ></p-messages>\\r\\n<p-card  class=\\\"ui-g-12\\\">\\r\\n    <form [formGroup]=\\\"changePasswordForm\\\" > \\r\\n    <div class=\\\"ui-g ui-fluid\\\" >\\r\\n            <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-4\\\">\\r\\n                    <label for=\\\"user_pwd\\\">Old Password</label>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-8\\\">\\r\\n                    <input type=\\\"password\\\" id=\\\"user_pwd\\\" pPassword formControlName=\\\"user_pwd\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <p  class=\\\"error-msg\\\" *ngIf=\\\"!changePasswordForm.controls['user_pwd'].valid && (changePasswordForm.controls['user_pwd'].dirty || changePasswordForm.controls['user_pwd'].touched)\\\">\\r\\n                <em *ngIf=\\\"changePasswordForm.controls['user_pwd'].errors['required']\\\"> Old password is required    </em>\\r\\n                <em *ngIf=\\\"changePasswordForm.controls['cnfirm_user_pwd'].errors['oldMatch']\\\">  Old password incorrect    </em>\\r\\n            </p>\\r\\n            <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-4\\\">\\r\\n                    <label for=\\\"new_user_pwd\\\">New Password</label>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-8\\\">\\r\\n                    <input type=\\\"password\\\" id=\\\"new_user_pwd\\\" pPassword formControlName=\\\"new_user_pwd\\\"  />\\r\\n                </div>\\r\\n            </div>\\r\\n            <p  class=\\\"error-msg\\\" *ngIf=\\\"!changePasswordForm.controls['new_user_pwd'].valid && (changePasswordForm.controls['new_user_pwd'].dirty || changePasswordForm.controls['new_user_pwd'].touched)\\\">\\r\\n                <em *ngIf=\\\"changePasswordForm.controls['new_user_pwd'].errors['required']\\\"> New password is required    </em>\\r\\n             </p>\\r\\n            <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-4\\\">\\r\\n                    <label for=\\\"year\\\">Confirm Password</label>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-8\\\">\\r\\n                    <input type=\\\"password\\\" pPassword formControlName=\\\"cnfirm_user_pwd\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <p  class=\\\"error-msg\\\" *ngIf=\\\"!changePasswordForm.controls['cnfirm_user_pwd'].valid && (changePasswordForm.controls['cnfirm_user_pwd'].dirty || changePasswordForm.controls['cnfirm_user_pwd'].touched)\\\">\\r\\n                <em *ngIf=\\\"changePasswordForm.controls['cnfirm_user_pwd'].errors['required']\\\"> Confirm password is required    </em>\\r\\n                <em *ngIf=\\\"changePasswordForm.controls['cnfirm_user_pwd'].errors['mustMatch']\\\">  Confirm password not match    </em>\\r\\n             </p>\\r\\n    </div>\\r\\n    <p-footer>\\r\\n        <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\"  style=\\\"text-align: center;\\\">\\r\\n            <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-close\\\" (click)=\\\"delete(car)\\\" label=\\\"Delete\\\"></button> -->\\r\\n            <button type=\\\"button\\\" style=\\\"width: 20%;\\\" pButton  icon=\\\"actionLoding ? 'pi pi-save' : 'pi pi-spin pi-spinner'\\\" class=\\\"ui-button-success\\\" (click)=\\\"updatePassword()\\\" label=\\\"Change Password\\\"></button>\\r\\n        </div>\\r\\n    </p-footer>\\r\\n    </form>\\r\\n</p-card>\\r\\n        </div>\\r\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\" #cd>\\r\\n<p-footer>\\r\\n        <button pButton type=\\\"button\\\" label=\\\"Yes\\\" class=\\\"ui-button-success\\\" (click)=\\\"cd.accept()\\\"></button>        \\r\\n        <button pButton type=\\\"button\\\" label=\\\"No\\\" class=\\\"ui-button-danger\\\" (click)=\\\"cd.reject()\\\"></button>\\r\\n    </p-footer>\\r\\n</p-confirmDialog>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:ChangePasswordComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChangePasswordRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9pbnZlbnRvcnktbW5ndC91c2VyL2NoYW5nZS1wYXNzd29yZC9jaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { AuthLoginService } from 'src/app/shared/auth.service';\r\nimport { MessageService, ConfirmationService, MenuItem } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { MustMatch } from 'src/app/shared/validations/password-match';\r\nimport { oldMatch } from 'src/app/shared/validations/old-password-match';\r\nimport { SessionService } from 'src/app/shared/session.service';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss'],\r\n  providers:[ConfirmationService]\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  changePasswordForm: FormGroup\r\n  displayDialog: boolean\r\n  public bradCrum: MenuItem[];\r\n  constructor(private auth: AuthLoginService, private _fb: FormBuilder, private messageService: MessageService,private router: Router, private confirmationService: ConfirmationService,\r\n    public sessionService: SessionService\r\n    ) {\r\n    \r\n   \r\n    this.changePasswordForm = this._fb.group({\r\n      _id: [this.sessionService.getItem('_id')],\r\n      user_pwd: ['',Validators.required],\r\n      new_user_pwd: ['',Validators.required],\r\n      cnfirm_user_pwd: ['',Validators.required],\r\n      company_details_id:[this.sessionService.getItem('company_id'),Validators.required]   \r\n    }, {\r\n      validator: [oldMatch(this.sessionService.getItem('user_pwd'), 'user_pwd'),MustMatch('new_user_pwd', 'cnfirm_user_pwd')]\r\n    }); \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bradCrum = [\r\n      {label:'',icon: 'pi pi-home',command: (event) => {\r\n        this.router.navigate(['/inventory-mngt/dashboard'])}\r\n      },\r\n      {\r\n        label: \"Change Password\",\r\n        command: event => {\r\n          this.router.navigate([\"/inventory-mngt/change-password\"]);\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  public checkValidity(): void {\r\n    Object.keys(this.changePasswordForm.controls).forEach((key) => {\r\n        this.changePasswordForm.controls[key].markAsDirty();\r\n    });\r\n  }\r\n \r\n  // checkOldPassword(){\r\n  //   this.messageService.clear();\r\n  //   if(this.changePasswordForm.value.user_pwd && (this.auth.getUserData().user_pwd != this.changePasswordForm.value.user_pwd)){\r\n  //       this.messageService.add({severity:'warn', summary:'Warning!', detail:'Old password is wrong!'});\r\n  //       this.changePasswordForm.controls['user_pwd'].setValue('');\r\n  //      }\r\n  // }\r\n\r\n  // passwordMatch() {\r\n  //   this.messageService.clear();\r\n  //   let newPassword = this.changePasswordForm.value.new_user_pwd;\r\n  //   let confirmPassword = this.changePasswordForm.value.cnfirm_user_pwd;\r\n  //   if (confirmPassword != '') {\r\n  //     if (newPassword != confirmPassword) {\r\n  //       console.log('not eq');\r\n  //       console.log(this.changePasswordForm);\r\n  //       this.changePasswordForm.controls['cnfirm_user_pwd'].setErrors({ 'nopasswordmatch': true })\r\n  //       this.changePasswordForm.controls['cnfirm_user_pwd'].markAsDirty();\r\n  //       this.messageService.add({severity:'warn', summary:'Warning!', detail:'Password not same'});\r\n  //     } else {\r\n  //       console.log('eq');        \r\n  //       this.changePasswordForm.controls['cnfirm_user_pwd'].setErrors({ 'nopasswordmatch': null })\r\n  //       this.changePasswordForm.controls['cnfirm_user_pwd'].updateValueAndValidity();\r\n  //     }\r\n  //   } else {\r\n  //   }\r\n\r\n  // }\r\n\r\n  confirm() {\r\n    this.confirmationService.confirm({\r\n        message: 'You will be logged out shortly for security perposes. Please remember your new password before logged out.',\r\n        accept: () => {\r\n            //Actual logic to perform a confirmation\r\n            this.doUpdatePassword()\r\n        }\r\n    });\r\n}\r\n\r\n  updatePassword(){\r\n    console.log(this.changePasswordForm)\r\n    if(this.changePasswordForm.invalid){\r\n      this.checkValidity();\r\n      // this.passwordMatch();\r\n      return false;\r\n    }\r\n    // this.submitAttempt = false;\r\n    this.confirm();\r\n  }\r\n\r\n  doUpdatePassword(){\r\n    this.auth.changePassword(this.changePasswordForm.value)\r\n    .subscribe((data:any)=>{\r\n      this.messageService.add({severity:'success', summary:'Success!', detail:'Password changed successfully!'});\r\n      this.auth.logOut()\r\n    },\r\n    error => {\r\n      console.log('er',error);\r\n      this.messageService.add({severity:'error', summary:'Opps!', detail:'Sothing went wrong!'});\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ChangePasswordRoutingModule } from './change-password-routing.module';\r\nimport { ChangePasswordComponent } from './change-password.component';\r\nimport { CardModule } from 'primeng/card';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport {MessagesModule} from 'primeng/messages';\r\nimport {MessageModule} from 'primeng/message';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ChangePasswordComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ChangePasswordRoutingModule,   \r\n    CardModule,\r\n    FormsModule,\r\n    InputTextModule,\r\n    ButtonModule,\r\n    DialogModule,\r\n    PasswordModule,\r\n    BreadcrumbModule,\r\n    ConfirmDialogModule,\r\n    ToastModule,\r\n    ChartModule,\r\n    ReactiveFormsModule,\r\n    ProgressSpinnerModule,\r\n    MessageModule,\r\n    MessagesModule,\r\n  ]\r\n})\r\nexport class ChangePasswordModule { }\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function oldMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = controlName;\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.oldMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control !== matchingControl.value) {\r\n            matchingControl.setErrors({ oldMatch: true });\r\n            // matchingControl.markAsDirty();\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n            // matchingControl.updateValueAndValidity();\r\n        }\r\n    }\r\n}"],"sourceRoot":"webpack:///"}