{"version":3,"sources":["./node_modules/ngx-google-places-autocomplete/bundles/ngx-google-places-autocomplete.umd.js","./node_modules/primeng/checkbox.js","./node_modules/primeng/components/checkbox/checkbox.js","./node_modules/primeng/components/inputswitch/inputswitch.js","./node_modules/primeng/dropdown.js","./node_modules/primeng/inputswitch.js","./src/app/component/inventory-mngt/master/customer-master/customer-master.component.html","./src/app/component/inventory-mngt/master/customer-master/customer-master-routing.module.ts","./src/app/component/inventory-mngt/master/customer-master/customer-master.component.scss","./src/app/component/inventory-mngt/master/customer-master/customer-master.component.ts","./src/app/component/inventory-mngt/master/customer-master/customer-master.module.ts","./src/app/shared/common.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA,CAAC,KAA4D,oBAAoB,mBAAO,CAAC,oEAAe;AACxG,CAAC,SACwJ;AACzJ,CAAC,0CAA0C;;AAE3C;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,mCAAmC,EAAE;AACrC;AACA,qDAAqD,mBAAmB;AACxE;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,uDAAuD;AACvD,SAAS,kCAAkC;AAC3C,SAAS,8BAA8B;AACvC,MAAM;AACN;AACA,qBAAqB,gDAAgD;AACrE,6BAA6B,6BAA6B;AAC1D;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;;AAEA,8CAA8C,cAAc;;AAE5D,CAAC;;;;;;;;;;;;;ACnJD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8FAAgC,G;;;;;;;;;;;;ACNpC;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,oEAAe;AACpC,eAAe,mBAAO,CAAC,0EAAiB;AACxC,cAAc,mBAAO,CAAC,uEAAgB;AACtC;AACA;AACA,gDAAgD,iBAAiB,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,4BAA4B,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,2DAA2D,4TAA4T,yBAAyB,4QAA4Q,gFAAgF,uQAAuQ,2GAA2G,6DAA6D,OAAO;AACzuC;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;;;;;;ACnLa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,oEAAe;AACpC,eAAe,mBAAO,CAAC,0EAAiB;AACxC,cAAc,mBAAO,CAAC,uEAAgB;AACtC;AACA;AACA,gDAAgD,oBAAoB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yKAAyK;AAC5N;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;;;;;AC/HA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,8FAAgC,G;;;;;;;;;;;;ACNjD;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0GAAsC,G;;;;;;;;;;;;ACNvD;AAAe,oJAAqF,wuBAAwuB,mBAAmB,w0BAAw0B,YAAY,oWAAoW,6+BAA6+B,uBAAuB,uFAAuF,uBAAuB,uFAAuF,0BAA0B,uFAAuF,eAAe,uFAAuF,mCAAmC,uFAAuF,wBAAwB,uFAAuF,uCAAuC,uFAAuF,mCAAmC,2jBAA2jB,oaAAoa,qMAAqM,gCAAgC,MAAM,+BAA+B,iCAAiC,sBAAsB,+PAA+P,eAAe,ooG;;;;;;;;;;;;;;;;;;;ACA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","file":"customer-master-customer-master-module-es2015.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng['ngx-google-places-autocomplete'] = global.ng['ngx-google-places-autocomplete'] || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\nvar Options = (function () {\n    /**\n     * @param {?=} opt\n     */\n    function Options(opt) {\n        if (!opt)\n            return;\n        Object.assign(this, opt);\n    }\n    return Options;\n}());\n\nvar GooglePlaceDirective = (function () {\n    /**\n     * @param {?} el\n     * @param {?} ngZone\n     */\n    function GooglePlaceDirective(el, ngZone) {\n        this.el = el;\n        this.ngZone = ngZone;\n        this.onAddressChange = new _angular_core.EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.ngAfterViewInit = function () {\n        if (!this.options)\n            this.options = new Options();\n        this.initialize();\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.isGoogleLibExists = function () {\n        return !(!google || !google.maps || !google.maps.places);\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.initialize = function () {\n        var _this = this;\n        if (!this.isGoogleLibExists())\n            throw new Error(\"Google maps library can not be found\");\n        this.autocomplete = new google.maps.places.Autocomplete(this.el.nativeElement, this.options);\n        if (!this.autocomplete)\n            throw new Error(\"Autocomplete is not initialized\");\n        if (!this.autocomplete.addListener != null) {\n            this.eventListener = this.autocomplete.addListener('place_changed', function () {\n                _this.handleChangeEvent();\n            });\n        }\n        this.el.nativeElement.addEventListener('keydown', function (event) {\n            if (!event.key) {\n                return;\n            }\n            var /** @type {?} */ key = event.key.toLowerCase();\n            if (key == 'enter' && event.target === _this.el.nativeElement) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        });\n        // according to https://gist.github.com/schoenobates/ef578a02ac8ab6726487\n        if (window && window.navigator && window.navigator.userAgent && navigator.userAgent.match(/(iPad|iPhone|iPod)/g)) {\n            setTimeout(function () {\n                var /** @type {?} */ containers = document.getElementsByClassName('pac-container');\n                if (containers) {\n                    var /** @type {?} */ arr = Array.from(containers);\n                    if (arr) {\n                        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n                            var container = arr_1[_i];\n                            if (!container)\n                                continue;\n                            container.addEventListener('touchend', function (e) {\n                                e.stopImmediatePropagation();\n                            });\n                        }\n                    }\n                }\n            }, 500);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.reset = function () {\n        this.autocomplete.setComponentRestrictions(this.options.componentRestrictions);\n        this.autocomplete.setTypes(this.options.types);\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.handleChangeEvent = function () {\n        var _this = this;\n        this.ngZone.run(function () {\n            _this.place = _this.autocomplete.getPlace();\n            if (_this.place && _this.place.place_id) {\n                _this.onAddressChange.emit(_this.place);\n            }\n        });\n    };\n    GooglePlaceDirective.decorators = [\n        { type: _angular_core.Directive, args: [{\n                    selector: '[ngx-google-places-autocomplete]',\n                    exportAs: 'ngx-places'\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    GooglePlaceDirective.ctorParameters = function () { return [\n        { type: _angular_core.ElementRef, },\n        { type: _angular_core.NgZone, },\n    ]; };\n    GooglePlaceDirective.propDecorators = {\n        'options': [{ type: _angular_core.Input, args: ['options',] },],\n        'onAddressChange': [{ type: _angular_core.Output },],\n    };\n    return GooglePlaceDirective;\n}());\n\nvar GooglePlaceModule = (function () {\n    function GooglePlaceModule() {\n    }\n    GooglePlaceModule.decorators = [\n        { type: _angular_core.NgModule, args: [{\n                    declarations: [GooglePlaceDirective],\n                    exports: [GooglePlaceDirective]\n                },] },\n    ];\n    /**\n     * @nocollapse\n     */\n    GooglePlaceModule.ctorParameters = function () { return []; };\n    return GooglePlaceModule;\n}());\n\nexports.GooglePlaceModule = GooglePlaceModule;\nexports.GooglePlaceDirective = GooglePlaceDirective;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/checkbox/checkbox\"));","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nexports.CHECKBOX_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return Checkbox; }),\n    multi: true\n};\nvar Checkbox = /** @class */ (function () {\n    function Checkbox(cd) {\n        this.cd = cd;\n        this.checkboxIcon = 'pi pi-check';\n        this.onChange = new core_1.EventEmitter();\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n        this.focused = false;\n        this.checked = false;\n    }\n    Checkbox.prototype.onClick = function (event, checkbox, focus) {\n        event.preventDefault();\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.checked = !this.checked;\n        this.updateModel();\n        if (focus) {\n            checkbox.focus();\n        }\n    };\n    Checkbox.prototype.updateModel = function () {\n        if (!this.binary) {\n            if (this.checked)\n                this.addValue();\n            else\n                this.removeValue();\n            this.onModelChange(this.model);\n            if (this.formControl) {\n                this.formControl.setValue(this.model);\n            }\n        }\n        else {\n            this.onModelChange(this.checked);\n        }\n        this.onChange.emit(this.checked);\n    };\n    Checkbox.prototype.handleChange = function (event) {\n        if (!this.readonly) {\n            this.checked = event.target.checked;\n            this.updateModel();\n        }\n    };\n    Checkbox.prototype.isChecked = function () {\n        if (this.binary)\n            return this.model;\n        else\n            return this.model && this.model.indexOf(this.value) > -1;\n    };\n    Checkbox.prototype.removeValue = function () {\n        var _this = this;\n        this.model = this.model.filter(function (val) { return val !== _this.value; });\n    };\n    Checkbox.prototype.addValue = function () {\n        if (this.model)\n            this.model = this.model.concat([this.value]);\n        else\n            this.model = [this.value];\n    };\n    Checkbox.prototype.onFocus = function (event) {\n        this.focused = true;\n    };\n    Checkbox.prototype.onBlur = function (event) {\n        this.focused = false;\n        this.onModelTouched();\n    };\n    Checkbox.prototype.writeValue = function (model) {\n        this.model = model;\n        this.checked = this.isChecked();\n        this.cd.markForCheck();\n    };\n    Checkbox.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    Checkbox.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    Checkbox.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Checkbox.prototype, \"value\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Checkbox.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"binary\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"label\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Checkbox.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"inputId\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Checkbox.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"labelStyleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", forms_1.FormControl)\n    ], Checkbox.prototype, \"formControl\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Checkbox.prototype, \"checkboxIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Checkbox.prototype, \"readonly\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Checkbox.prototype, \"onChange\", void 0);\n    Checkbox = __decorate([\n        core_1.Component({\n            selector: 'p-checkbox',\n            template: \"\\n        <div [ngStyle]=\\\"style\\\" [ngClass]=\\\"{'ui-chkbox ui-widget': true,'ui-chkbox-readonly': readonly}\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [name]=\\\"name\\\" [readonly]=\\\"readonly\\\" [value]=\\\"value\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\"\\n                [ngClass]=\\\"{'ui-state-focus':focused}\\\" (change)=\\\"handleChange($event)\\\" [disabled]=\\\"disabled\\\" [attr.tabindex]=\\\"tabindex\\\">\\n            </div>\\n            <div class=\\\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\\\" (click)=\\\"onClick($event,cb,true)\\\"\\n                        [ngClass]=\\\"{'ui-state-active':checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\\\">\\n                <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"checked ? checkboxIcon : null\\\"></span>\\n            </div>\\n        </div>\\n        <label (click)=\\\"onClick($event,cb,true)\\\" [class]=\\\"labelStyleClass\\\"\\n                [ngClass]=\\\"{'ui-chkbox-label': true, 'ui-label-active':checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\\\"\\n                *ngIf=\\\"label\\\" [attr.for]=\\\"inputId\\\">{{label}}</label>\\n    \",\n            providers: [exports.CHECKBOX_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\n    ], Checkbox);\n    return Checkbox;\n}());\nexports.Checkbox = Checkbox;\nvar CheckboxModule = /** @class */ (function () {\n    function CheckboxModule() {\n    }\n    CheckboxModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [Checkbox],\n            declarations: [Checkbox]\n        })\n    ], CheckboxModule);\n    return CheckboxModule;\n}());\nexports.CheckboxModule = CheckboxModule;\n//# sourceMappingURL=checkbox.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nexports.INPUTSWITCH_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return InputSwitch; }),\n    multi: true\n};\nvar InputSwitch = /** @class */ (function () {\n    function InputSwitch(cd) {\n        this.cd = cd;\n        this.onChange = new core_1.EventEmitter();\n        this.checked = false;\n        this.focused = false;\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n    }\n    InputSwitch.prototype.onClick = function (event, cb) {\n        if (!this.disabled && !this.readonly) {\n            this.toggle(event);\n            cb.focus();\n        }\n    };\n    InputSwitch.prototype.onInputChange = function (event) {\n        if (!this.readonly) {\n            var inputChecked = event.target.checked;\n            this.updateModel(event, inputChecked);\n        }\n    };\n    InputSwitch.prototype.toggle = function (event) {\n        this.updateModel(event, !this.checked);\n    };\n    InputSwitch.prototype.updateModel = function (event, value) {\n        this.checked = value;\n        this.onModelChange(this.checked);\n        this.onChange.emit({\n            originalEvent: event,\n            checked: this.checked\n        });\n    };\n    InputSwitch.prototype.onFocus = function (event) {\n        this.focused = true;\n    };\n    InputSwitch.prototype.onBlur = function (event) {\n        this.focused = false;\n        this.onModelTouched();\n    };\n    InputSwitch.prototype.writeValue = function (checked) {\n        this.checked = checked;\n        this.cd.markForCheck();\n    };\n    InputSwitch.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    InputSwitch.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    InputSwitch.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], InputSwitch.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], InputSwitch.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], InputSwitch.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], InputSwitch.prototype, \"inputId\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], InputSwitch.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], InputSwitch.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], InputSwitch.prototype, \"readonly\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], InputSwitch.prototype, \"onChange\", void 0);\n    InputSwitch = __decorate([\n        core_1.Component({\n            selector: 'p-inputSwitch',\n            template: \"\\n        <div [ngClass]=\\\"{'ui-inputswitch ui-widget': true, 'ui-inputswitch-checked': checked, 'ui-state-disabled': disabled, 'ui-inputswitch-readonly': readonly, 'ui-inputswitch-focus': focused}\\\" \\n            [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" (click)=\\\"onClick($event, cb)\\\" role=\\\"checkbox\\\" [attr.aria-checked]=\\\"checked\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [attr.id]=\\\"inputId\\\" [attr.name]=\\\"name\\\" [attr.tabindex]=\\\"tabindex\\\" [checked]=\\\"checked\\\" (change)=\\\"onInputChange($event)\\\"\\n                        (focus)=\\\"onFocus($event)\\\" (blur)=\\\"onBlur($event)\\\" [disabled]=\\\"disabled\\\" />\\n            </div>\\n            <span class=\\\"ui-inputswitch-slider\\\"></span>\\n        </div>\\n    \",\n            providers: [exports.INPUTSWITCH_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\n    ], InputSwitch);\n    return InputSwitch;\n}());\nexports.InputSwitch = InputSwitch;\nvar InputSwitchModule = /** @class */ (function () {\n    function InputSwitchModule() {\n    }\n    InputSwitchModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [InputSwitch],\n            declarations: [InputSwitch]\n        })\n    ], InputSwitchModule);\n    return InputSwitchModule;\n}());\nexports.InputSwitchModule = InputSwitchModule;\n//# sourceMappingURL=inputswitch.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/dropdown/dropdown\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/inputswitch/inputswitch\"));","export default \"<p-breadcrumb [model]=\\\"bradCrum\\\"></p-breadcrumb>\\r\\n<div style=\\\"margin-top: 15px;\\\">\\r\\n    <p-card>\\r\\n        <p-table #dt [loading]=\\\"loading\\\" [value]=\\\"customerList\\\" [columns]=\\\"cols\\\" dataKey=\\\"_id\\\" [paginator]=\\\"true\\\"\\r\\n            [rowsPerPageOptions]=\\\"[10,50,100]\\\" [globalFilterFields]=\\\"['_id','customer_name','customer_address','phone']\\\"\\r\\n            [rows]=\\\"10\\\">\\r\\n\\r\\n            <ng-template pTemplate=\\\"caption\\\">\\r\\n                <div class=\\\"ui-helper-clearfix\\\">\\r\\n\\r\\n                    <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-file-o\\\" iconPos=\\\"left\\\" label=\\\"All Data\\\" (click)=\\\"dt.exportCSV()\\\" style=\\\"float:left\\\"></button> -->\\r\\n                    <!-- <button type=\\\"button\\\" pButton icon=\\\"fa fa-file\\\" iconPos=\\\"left\\\" label=\\\"Selection Only\\\" (click)=\\\"dt.exportCSV({selectionOnly:true})\\\" style=\\\"float:right\\\"></button> -->\\r\\n                </div>\\r\\n                <div style=\\\"text-align: right\\\">\\r\\n                    <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\r\\n                    <input type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\"\\r\\n                        (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" style=\\\"width:auto\\\">\\r\\n                </div>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 3em\\\">\\r\\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\\r\\n                    </th>\\r\\n                    <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\" pResizableColumn>\\r\\n                        {{col.header}}\\r\\n                        <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\"\\r\\n                            ariaLabelDesc=\\\"Activate to sort in descending order\\\"\\r\\n                            ariaLabelAsc=\\\"Activate to sort in ascending order\\\"></p-sortIcon>\\r\\n\\r\\n                    </th>\\r\\n                    <th style=\\\"width: 10%;\\\">\\r\\n                        <button type=\\\"button\\\" pButton icon=\\\"pi pi-plus\\\" class=\\\"ui-button-success\\\" iconPos=\\\"left\\\"\\r\\n                            (click)=\\\"showDialogToAdd()\\\" label=\\\"Add\\\"></button>\\r\\n\\r\\n                    </th>\\r\\n                </tr>\\r\\n                <!-- <tr>\\r\\n            <th ></th>\\r\\n            <th *ngFor=\\\"let col of columns\\\" pResizableColumn>\\r\\n                <input pInputText type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\" [value]=\\\"dt.filters[col.field]?.value\\\">\\r\\n            </th>            \\r\\n            <th ></th>\\r\\n        </tr> -->\\r\\n\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-ri=\\\"rowIndex\\\">\\r\\n                <tr [pSelectableRow]=\\\"rowData\\\">\\r\\n                    <td>\\r\\n                        <p-tableCheckbox [value]=\\\"rowData\\\"></p-tableCheckbox>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{rowData.customer_code}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{rowData.customer_name}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{rowData.customer_address}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{rowData.phone}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{rowData.enable_tax ? 'Yes' : 'No'}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{rowData.customer_gstin}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{rowData?.route_details_id?.route_name}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{rowData.updatedAt | date:'medium'}}\\r\\n                    </td>\\r\\n                    <td style=\\\"text-align: center\\\">\\r\\n                        <p-dropdown [options]=\\\"status\\\" placeholder=\\\"Status\\\" [(ngModel)]=\\\"rowData.status\\\"\\r\\n                            (onChange)=\\\"onChangeStatus($event)\\\"></p-dropdown>\\r\\n                    </td>\\r\\n                    <td style=\\\"text-align:center\\\">\\r\\n                        <button pButton type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info\\\"\\r\\n                            (click)=\\\"showDialogToAdd(rowData)\\\" style=\\\"    margin: 0px 5px;\\\"></button>\\r\\n                        <!-- <button  pButton type=\\\"button\\\" pSaveEditableRow icon=\\\"pi pi-check\\\" class=\\\"ui-button-success\\\" style=\\\"margin-right: .5em\\\" (click)=\\\"onRowEditSave(rowData)\\\"></button> -->\\r\\n                        <button pButton type=\\\"button\\\" icon=\\\"pi pi-trash\\\" class=\\\"ui-button-danger\\\"\\r\\n                            (click)=\\\"delete(rowData, ri)\\\" style=\\\"    margin: 0px 5px;\\\"></button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n\\r\\n            <ng-template pTemplate=\\\"paginatorleft\\\" let-state>\\r\\n                Showing {{(state.page  * state.rows) + 1}} to {{state.rows * (state.page + 1)}} of\\r\\n                <strong>{{customerList?.length}}</strong> entries\\r\\n            </ng-template>\\r\\n\\r\\n\\r\\n        </p-table>\\r\\n\\r\\n        <!-- <p-dialog  [maximizable]=\\\"true\\\" [(visible)]=\\\"displayDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [resizable]=\\\"false\\\" [modal]=\\\"true\\\"  [style]=\\\"{width: '450px'}\\\">\\r\\n        <p-header>\\r\\n                <span *ngIf=\\\"customerForm.value._id\\\">Update</span>\\r\\n                <span *ngIf=\\\"!customerForm.value._id\\\">Add</span> Customer\\r\\n        </p-header>\\r\\n    <form [formGroup]=\\\"customerForm\\\">\\r\\n    <div class=\\\"ui-g ui-fluid\\\" >\\r\\n            <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-4\\\">\\r\\n                    <label for=\\\"vin\\\">Customer Code</label>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-8\\\">\\r\\n                    <input pInputText formControlName=\\\"customer_code\\\" disabled />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-4\\\">\\r\\n                    <label for=\\\"vin\\\">Customer Name</label>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-8\\\">\\r\\n                    <input pInputText  formControlName=\\\"customer_name\\\" autofocus />\\r\\n                </div>\\r\\n            </div>\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-4\\\">\\r\\n                    <label for=\\\"vin\\\">Customer Address</label>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-8\\\">\\r\\n                    <input pInputText  formControlName=\\\"customer_address\\\" ngx-google-places-autocomplete [options]='options' #placesRef=\\\"ngx-places\\\" (onAddressChange)=\\\"handleAddressChange($event)\\\"/>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-4\\\">\\r\\n                    <label for=\\\"vin\\\">Customer Phone</label>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-8\\\">\\r\\n                    <p-inputMask formControlName=\\\"phone\\\" mask=\\\"99-99999-99999\\\" placeholder=\\\"99-99999-99999\\\"  slotChar=\\\" \\\"></p-inputMask>\\r\\n    \\r\\n                </div>\\r\\n            </div>\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n            <div class=\\\"ui-g-4\\\">\\r\\n                <label for=\\\"brand\\\">Status</label>\\r\\n            </div>\\r\\n            <div class=\\\"ui-g-8\\\">\\r\\n                <p-dropdown [options]=\\\"status\\\" placeholder=\\\"Select Status\\\" formControlName=\\\"status\\\"></p-dropdown>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <p-footer>\\r\\n        <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\r\\n            <button type=\\\"button\\\" pButton  icon=\\\"pi pi-save\\\" class=\\\"ui-button-success\\\" (click)=\\\"save()\\\" label=\\\"Save\\\"></button>\\r\\n        </div>\\r\\n    </p-footer>\\r\\n</form>\\r\\n</p-dialog> -->\\r\\n\\r\\n        <p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\" #cd>\\r\\n            <p-footer>\\r\\n                <button pButton type=\\\"button\\\" label=\\\"Yes\\\" class=\\\"ui-button-success\\\" (click)=\\\"cd.accept()\\\"></button>\\r\\n                <button pButton type=\\\"button\\\" label=\\\"No\\\" class=\\\"ui-button-danger\\\" (click)=\\\"cd.reject()\\\"></button>\\r\\n            </p-footer>\\r\\n        </p-confirmDialog>\\r\\n\\r\\n    </p-card>\\r\\n\\r\\n</div>\\r\\n\\r\\n<app-customer-form [displayDialog3]=\\\"displayDialog3\\\" [custData]=\\\"custData\\\"\\r\\n    (displayChangeEvent3)=\\\"onDialogClose3($event)\\\" (customerEvent)=\\\"receiveCustomer($event)\\\"></app-customer-form>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CustomerMasterComponent } from './customer-master.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:CustomerMasterComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomerMasterRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudC9pbnZlbnRvcnktbW5ndC9tYXN0ZXIvY3VzdG9tZXItbWFzdGVyL2N1c3RvbWVyLW1hc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {MenuItem} from 'primeng/api';\r\nimport {ConfirmationService} from 'primeng/api';\r\nimport {MessageService} from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\n\r\nimport * as _ from 'lodash';\r\nimport { Customer } from 'src/app/model/customer.model';\r\nimport { CustomerService } from 'src/app/shared/customer.service';\r\n\r\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\r\nimport { Address } from 'ngx-google-places-autocomplete/objects/address';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { CommonService } from 'src/app/shared/common.service';\r\nimport { SessionService } from 'src/app/shared/session.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-master',\r\n  templateUrl: './customer-master.component.html',\r\n  styleUrls: ['./customer-master.component.scss'],\r\n  providers: [ConfirmationService]\r\n})\r\nexport class CustomerMasterComponent implements OnInit {\r\n\r\n\r\n  loading: boolean;\r\n  public bradCrum: MenuItem[];\r\n  displayDialog3: boolean;\r\n  car: any = {};\r\n  cols: any[];\r\n  status:any = [];\r\n  customerList: Customer[];\r\n  data:any;\r\n  custData:any = []\r\n  constructor(private router:Router,private confirmationService: ConfirmationService,private messageService: MessageService,private customerService:CustomerService,private commonService: CommonService,\r\n    public sessionService: SessionService\r\n    ) {\r\n    this.bradCrum = [\r\n      {label:'',icon: 'pi pi-home',command: (event) => {\r\n        this.router.navigate(['/inventory-mngt/dashboard'])}\r\n      },\r\n      {label:'Master',command: (event) => {\r\n        this.router.navigate([\"/inventory-mngt/master\"]);\r\n    }},\r\n      {label:'Customer'},\r\n  ];\r\n    this.status = [\r\n      {label:'Active', value:1},\r\n      {label:'De-Active', value:0},\r\n    ]\r\n     \r\n    this.cols = [\r\n      // { field: '_id', header: '#' },\r\n      { field: 'customer_code', header: 'Code' },\r\n      { field: 'customer_name', header: 'Customer Name' },\r\n      { field: 'customer_address', header: 'Customer Address' },\r\n      { field: 'phone', header: 'Phone' },\r\n      { field: 'enable_tax', header: 'Enable Tax' },\r\n      { field: 'customer_gstin', header: 'GSTIN' },\r\n      { field: 'route_name', header: 'Route' },\r\n      { field: 'updatedAt', header: 'Updated Date' },\r\n      { field: 'status', header: 'Status' }\r\n      // { field: '', header: 'Action' }\r\n  ];\r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    // this.getCustomer();\r\n    this.getCustomerByCompany();\r\n  }\r\n\r\n\r\n    getCustomer(){\r\n      this.loading = true\r\n      this.customerService.getCustomer()\r\n      .subscribe((data:any)=>{\r\n        console.log('customerList',data);\r\n        this.customerList = data;\r\n        this.loading =false;\r\n      })\r\n    }\r\n\r\n    getCustomerByCompany(){\r\n      this.loading = true\r\n      this.customerService.getCustomerByCompany()\r\n      .subscribe((data:any)=>{\r\n        console.log('customerList',data);\r\n        this.customerList = data;\r\n        this.loading =false;\r\n      })\r\n    }\r\n\r\n  // showDialogToAdd() {\r\n  //   this.customerForm.reset();\r\n  //   this.customerForm.controls['customer_code'].setValue(this.commonService.incrCode('c',this.customerList.length));\r\n  //   this.customerForm.controls['status'].setValue(1);\r\n  //   this.customerForm.controls['company_details_id'].setValue(this.sessionService.getItem('company_id'))\r\n  //   this.displayDialog3 = true;\r\n  // }\r\n\r\n \r\n\r\n  delete(customer,index){\r\n    console.log('delete',customer,index);\r\n    this.confirmationService.confirm({\r\n      message: 'Are you sure that you want to delete this customer?',\r\n      accept: () => {\r\n          //Actual logic to perform a confirmation\r\n          this.onRowDelete(customer,index);\r\n      }\r\n  });\r\n  }\r\n\r\n  \r\n\r\n  onRowDelete(customer,index) {\r\n    console.log(customer,index);\r\n    this.customerService.deleteCustomer(customer._id)\r\n    .subscribe((data:any)=>{\r\n      console.log('delete',data);\r\n      this.customerList.splice(index, 1);\r\n      this.customerList = [...this.customerList];\r\n      this.messageService.add({severity:'success', summary:'Customer Deleted Successfully', detail:'Customer Deleted Successfully'});\r\n  \r\n    },\r\n    error =>{\r\n      console.log(error);\r\n      this.messageService.add({severity:'error', summary:'Oopss!', detail:'Something went wrong!'});\r\n\r\n    })\r\n  }\r\n\r\n\r\n  onChangeStatus(event){\r\n    console.log(event);\r\n    let isChecked = event.checked;\r\n  }\r\n\r\n  \r\n\r\n  showDialogToAdd(Data) {\r\n    this.custData = Data;\r\n    this.displayDialog3 = true;\r\n  }\r\n\r\n  onDialogClose3(event){\r\n    console.log(event)  \r\n    this.displayDialog3 = false;\r\n    this.custData = null\r\n  }\r\n\r\n  receiveCustomer(event){\r\n    console.log('receiveUnit',event) \r\n        \r\n    var sliceIndex = _.findIndex(this.customerList, function (o) { return o._id == event._id; });\r\n    console.log(sliceIndex);\r\n    if (sliceIndex > -1) {\r\n      // Replace item at index using native splice\r\n      this.customerList.splice(sliceIndex, 1, event);\r\n      this.customerList = [...this.customerList];\r\n    }else{\r\n      this.customerList = [event,...this.customerList];\r\n    }\r\n  }\r\n  \r\n\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CustomerMasterRoutingModule } from './customer-master-routing.module';\r\nimport { CustomerMasterComponent } from './customer-master.component';\r\nimport {TableModule} from 'primeng/table';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CardModule } from 'primeng/card';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {BreadcrumbModule} from 'primeng/breadcrumb';\r\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {InputSwitchModule} from 'primeng/inputswitch';\r\nimport {ChartModule} from 'primeng/chart';\r\nimport { GooglePlaceModule } from \"ngx-google-places-autocomplete\";\r\nimport {InputMaskModule} from 'primeng/inputmask';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { CustomerFormModule } from '../../shared/customer-form/customer-form.module';\r\n\r\n@NgModule({\r\n  declarations: [CustomerMasterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CustomerMasterRoutingModule,\r\n    CardModule,\r\n    FormsModule,\r\n    InputTextModule,\r\n    TableModule,\r\n    ButtonModule,\r\n    DialogModule,\r\n    DropdownModule,\r\n    BreadcrumbModule,\r\n    ConfirmDialogModule,\r\n    ToastModule,\r\n    InputSwitchModule,\r\n    ChartModule,\r\n    GooglePlaceModule,\r\n    InputMaskModule,\r\n    ReactiveFormsModule,\r\n    ProgressSpinnerModule,\r\n    CustomerFormModule\r\n  ]\r\n})\r\nexport class CustomerMasterModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n   \r\n  leftPad(type,number, targetLength) {\r\n    var output = number + '';\r\n    while (output.length < targetLength) {\r\n        output = '0' + output;\r\n    }\r\n    return type +'-'+ output;\r\n}\r\n\r\n  incrCode(type,count){\r\n    let cCode = Number(count) + 1\r\n    console.log('cCode',cCode);\r\n    return this.leftPad(type,cCode, 4) ;\r\n  }\r\n\r\n  \r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}